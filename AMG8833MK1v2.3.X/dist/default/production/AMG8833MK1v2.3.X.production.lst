

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 10 14:52:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   125                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   126  0000                     
   127                           ; Version 2.20
   128                           ; Generated 05/05/2020 GMT
   129                           ; 
   130                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K20 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	smallconst
   163  001000                     __psmallconst:
   164                           	callstack 0
   165  001000  00                 	db	0
   166  001001                     _i2c_fsmStateTable:
   167                           	callstack 0
   168  001001  1E                 	db	low _I2C_DO_IDLE
   169  001002  4F                 	db	high _I2C_DO_IDLE
   170  001003  F6                 	db	low _I2C_DO_SEND_ADR_READ
   171  001004  4E                 	db	high _I2C_DO_SEND_ADR_READ
   172  001005  E6                 	db	low _I2C_DO_SEND_ADR_WRITE
   173  001006  4E                 	db	high _I2C_DO_SEND_ADR_WRITE
   174  001007  3A                 	db	low _I2C_DO_TX
   175  001008  3F                 	db	high _I2C_DO_TX
   176  001009  C6                 	db	low _I2C_DO_RX
   177  00100A  42                 	db	high _I2C_DO_RX
   178  00100B  12                 	db	low _I2C_DO_RCEN
   179  00100C  4F                 	db	high _I2C_DO_RCEN
   180  00100D  0C                 	db	low _I2C_DO_TX_EMPTY
   181  00100E  45                 	db	high _I2C_DO_TX_EMPTY
   182  00100F  A8                 	db	low _I2C_DO_SEND_RESTART_READ
   183  001010  4F                 	db	high _I2C_DO_SEND_RESTART_READ
   184  001011  A0                 	db	low _I2C_DO_SEND_RESTART_WRITE
   185  001012  4F                 	db	high _I2C_DO_SEND_RESTART_WRITE
   186  001013  98                 	db	low _I2C_DO_SEND_RESTART
   187  001014  4F                 	db	high _I2C_DO_SEND_RESTART
   188  001015  90                 	db	low _I2C_DO_SEND_STOP
   189  001016  4F                 	db	high _I2C_DO_SEND_STOP
   190  001017  88                 	db	low _I2C_DO_RX_ACK
   191  001018  4F                 	db	high _I2C_DO_RX_ACK
   192  001019  80                 	db	low _I2C_DO_RX_NACK_STOP
   193  00101A  4F                 	db	high _I2C_DO_RX_NACK_STOP
   194  00101B  78                 	db	low _I2C_DO_RX_NACK_RESTART
   195  00101C  4F                 	db	high _I2C_DO_RX_NACK_RESTART
   196  00101D  06                 	db	low _I2C_DO_RESET
   197  00101E  4F                 	db	high _I2C_DO_RESET
   198  00101F  CA                 	db	low _I2C_DO_ADDRESS_NACK
   199  001020  47                 	db	high _I2C_DO_ADDRESS_NACK
   200  001021                     __end_of_i2c_fsmStateTable:
   201                           	callstack 0
   202  001021                     STR_1:
   203  001021  25                 	db	37
   204  001022  2E                 	db	46
   205  001023  31                 	db	49	;'1'
   206  001024  66                 	db	102	;'f'
   207  001025  20                 	db	32
   208  001026  25                 	db	37
   209  001027  2E                 	db	46
   210  001028  31                 	db	49	;'1'
   211  001029  66                 	db	102	;'f'
   212  00102A  20                 	db	32
   213  00102B  25                 	db	37
   214  00102C  2E                 	db	46
   215  00102D  31                 	db	49	;'1'
   216  00102E  66                 	db	102	;'f'
   217  00102F  20                 	db	32
   218  001030  25                 	db	37
   219  001031  2E                 	db	46
   220  001032  31                 	db	49	;'1'
   221  001033  66                 	db	102	;'f'
   222  001034  20                 	db	32
   223  001035  25                 	db	37
   224  001036  2E                 	db	46
   225  001037  31                 	db	49	;'1'
   226  001038  66                 	db	102	;'f'
   227  001039  20                 	db	32
   228  00103A  25                 	db	37
   229  00103B  2E                 	db	46
   230  00103C  31                 	db	49	;'1'
   231  00103D  66                 	db	102	;'f'
   232  00103E  20                 	db	32
   233  00103F  25                 	db	37
   234  001040  2E                 	db	46
   235  001041  31                 	db	49	;'1'
   236  001042  66                 	db	102	;'f'
   237  001043  20                 	db	32
   238  001044  25                 	db	37
   239  001045  2E                 	db	46
   240  001046  31                 	db	49	;'1'
   241  001047  66                 	db	102	;'f'
   242  001048  0D                 	db	13
   243  001049  0A                 	db	10
   244  00104A  00                 	db	0
   245  00104B                     STR_12:
   246  00104B  49                 	db	73	;'I'
   247  00104C  4E                 	db	78	;'N'
   248  00104D  46                 	db	70	;'F'
   249  00104E  00                 	db	0
   250  00104F                     STR_16:
   251  00104F  4E                 	db	78	;'N'
   252  001050  41                 	db	65	;'A'
   253  001051  4E                 	db	78	;'N'
   254  001052  00                 	db	0
   255  001053                     STR_13:
   256  001053  69                 	db	105	;'i'
   257  001054  6E                 	db	110	;'n'
   258  001055  66                 	db	102	;'f'
   259  001056  00                 	db	0
   260  001057                     STR_17:
   261  001057  6E                 	db	110	;'n'
   262  001058  61                 	db	97	;'a'
   263  001059  6E                 	db	110	;'n'
   264  00105A  00                 	db	0
   265  00105B                     STR_20:
   266  00105B  6C                 	db	108	;'l'
   267  00105C  66                 	db	102	;'f'
   268  00105D  00                 	db	0
   269  00105E  00                 	db	0	; dummy byte at the end
   270  0000                     
   271                           	psect	nvBANK0
   272  0000F8                     __pnvBANK0:
   273                           	callstack 0
   274  0000F8                     _EUSART_FramingErrorHandler:
   275                           	callstack 0
   276  0000F8                     	ds	2
   277  0000FA                     _EUSART_RxDefaultInterruptHandler:
   278                           	callstack 0
   279  0000FA                     	ds	2
   280  0000FC                     _EUSART_TxDefaultInterruptHandler:
   281                           	callstack 0
   282  0000FC                     	ds	2
   283  0000FE                     _eusartTxBufferRemaining:
   284                           	callstack 0
   285  0000FE                     	ds	1
   286                           
   287                           	psect	nvBANK1
   288  000168                     __pnvBANK1:
   289                           	callstack 0
   290  000168                     _EUSART_ErrorHandler:
   291                           	callstack 0
   292  000168                     	ds	2
   293  00016A                     _EUSART_OverrunErrorHandler:
   294                           	callstack 0
   295  00016A                     	ds	2
   296  0000                     _RCREG	set	4014
   297  0000                     _RCSTAbits	set	4011
   298  0000                     _TXREG	set	4013
   299  0000                     _TXSTAbits	set	4012
   300  0000                     _SPBRGH	set	4016
   301  0000                     _SPBRG	set	4015
   302  0000                     _TXSTA	set	4012
   303  0000                     _RCSTA	set	4011
   304  0000                     _BAUDCON	set	4024
   305  0000                     _OSCTUNE	set	3995
   306  0000                     _OSCCON	set	4051
   307  0000                     _RCONbits	set	4048
   308  0000                     _PIR1bits	set	3998
   309  0000                     _PIE1bits	set	3997
   310  0000                     _SSPSTATbits	set	4039
   311  0000                     _PIR2bits	set	4001
   312  0000                     _SSPCON2bits	set	4037
   313  0000                     _SSPBUF	set	4041
   314  0000                     _SSPCON1bits	set	4038
   315  0000                     _SSPADD	set	4040
   316  0000                     _SSPCON2	set	4037
   317  0000                     _SSPCON1	set	4038
   318  0000                     _SSPSTAT	set	4039
   319  0000                     _INTCONbits	set	4082
   320  0000                     _INTCON2bits	set	4081
   321  0000                     _WPUB	set	3964
   322  0000                     _ANSELH	set	3967
   323  0000                     _ANSEL	set	3966
   324  0000                     _TRISD	set	3989
   325  0000                     _TRISC	set	3988
   326  0000                     _TRISB	set	3987
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISE	set	3990
   329  0000                     _LATC	set	3979
   330  0000                     _LATB	set	3978
   331  0000                     _LATA	set	3977
   332  0000                     _LATD	set	3980
   333  0000                     _LATE	set	3981
   334                           
   335                           ; #config settings
   336                           
   337                           	psect	cinit
   338  0049AA                     __pcinit:
   339                           	callstack 0
   340  0049AA                     start_initialization:
   341                           	callstack 0
   342  0049AA                     __initialization:
   343                           	callstack 0
   344                           
   345                           ; Clear objects allocated to BANK3 (256 bytes)
   346  0049AA  EE03  F000         	lfsr	0,__pbssBANK3
   347  0049AE  EE11 F000          	lfsr	1,256
   348  0049B2                     clear_0:
   349  0049B2  6AEE               	clrf	postinc0,c
   350  0049B4  50E5               	movf	postdec1,w,c
   351  0049B6  50E1               	movf	fsr1l,w,c
   352  0049B8  E1FC               	bnz	clear_0
   353  0049BA  50E2               	movf	fsr1h,w,c
   354  0049BC  E1FA               	bnz	clear_0
   355                           
   356                           ; Clear objects allocated to BANK2 (256 bytes)
   357  0049BE  EE02  F000         	lfsr	0,__pbssBANK2
   358  0049C2  EE11 F000          	lfsr	1,256
   359  0049C6                     clear_1:
   360  0049C6  6AEE               	clrf	postinc0,c
   361  0049C8  50E5               	movf	postdec1,w,c
   362  0049CA  50E1               	movf	fsr1l,w,c
   363  0049CC  E1FC               	bnz	clear_1
   364  0049CE  50E2               	movf	fsr1h,w,c
   365  0049D0  E1FA               	bnz	clear_1
   366                           
   367                           ; Clear objects allocated to BANK1 (104 bytes)
   368  0049D2  EE01  F000         	lfsr	0,__pbssBANK1
   369  0049D6  0E68               	movlw	104
   370  0049D8                     clear_2:
   371  0049D8  6AEE               	clrf	postinc0,c
   372  0049DA  06E8               	decf	wreg,f,c
   373  0049DC  E1FD               	bnz	clear_2
   374                           
   375                           ; Clear objects allocated to BANK0 (56 bytes)
   376  0049DE  EE00  F0C0         	lfsr	0,__pbssBANK0
   377  0049E2  0E38               	movlw	56
   378  0049E4                     clear_3:
   379  0049E4  6AEE               	clrf	postinc0,c
   380  0049E6  06E8               	decf	wreg,f,c
   381  0049E8  E1FD               	bnz	clear_3
   382                           
   383                           ; Clear objects allocated to COMRAM (5 bytes)
   384  0049EA  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   385  0049EC  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   386  0049EE  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   387  0049F0  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   388  0049F2  6A56               	clrf	__pbssCOMRAM& (0+255),c
   389  0049F4                     end_of_initialization:
   390                           	callstack 0
   391  0049F4                     __end_of__initialization:
   392                           	callstack 0
   393  0049F4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394  0049F6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  0049F8  0100               	movlb	0
   396  0049FA  EF83  F00E         	goto	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMRAM
   399  000056                     __pbssCOMRAM:
   400                           	callstack 0
   401  000056                     _eusartRxCount:
   402                           	callstack 0
   403  000056                     	ds	1
   404  000057                     _eusartRxTail:
   405                           	callstack 0
   406  000057                     	ds	1
   407  000058                     _eusartRxHead:
   408                           	callstack 0
   409  000058                     	ds	1
   410  000059                     _eusartTxTail:
   411                           	callstack 0
   412  000059                     	ds	1
   413  00005A                     _eusartTxHead:
   414                           	callstack 0
   415  00005A                     	ds	1
   416                           
   417                           	psect	bssBANK0
   418  0000C0                     __pbssBANK0:
   419                           	callstack 0
   420  0000C0                     _I2C_Status:
   421                           	callstack 0
   422  0000C0                     	ds	36
   423  0000E4                     floorf@F527:
   424                           	callstack 0
   425  0000E4                     	ds	4
   426  0000E8                     ___fpclassifyf@F465:
   427                           	callstack 0
   428  0000E8                     	ds	4
   429  0000EC                     _readBuffer:
   430                           	callstack 0
   431  0000EC                     	ds	3
   432  0000EF                     _nout:
   433                           	callstack 0
   434  0000EF                     	ds	2
   435  0000F1                     _width:
   436                           	callstack 0
   437  0000F1                     	ds	2
   438  0000F3                     _prec:
   439                           	callstack 0
   440  0000F3                     	ds	2
   441  0000F5                     _flags:
   442                           	callstack 0
   443  0000F5                     	ds	2
   444  0000F7                     _eusartRxLastError:
   445                           	callstack 0
   446  0000F7                     	ds	1
   447                           
   448                           	psect	bssBANK1
   449  000100                     __pbssBANK1:
   450                           	callstack 0
   451  000100                     _eusartRxStatusBuffer:
   452                           	callstack 0
   453  000100                     	ds	8
   454  000108                     _eusartRxBuffer:
   455                           	callstack 0
   456  000108                     	ds	8
   457  000110                     _eusartTxBuffer:
   458                           	callstack 0
   459  000110                     	ds	8
   460  000118                     _dbuf:
   461                           	callstack 0
   462  000118                     	ds	80
   463                           
   464                           	psect	bssBANK2
   465  000200                     __pbssBANK2:
   466                           	callstack 0
   467  000200                     _DataMatrix:
   468                           	callstack 0
   469  000200                     	ds	256
   470                           
   471                           	psect	bssBANK3
   472  000300                     __pbssBANK3:
   473                           	callstack 0
   474  000300                     _Temp_Data:
   475                           	callstack 0
   476  000300                     	ds	256
   477                           
   478                           	psect	cstackBANK1
   479  00016C                     __pcstackBANK1:
   480                           	callstack 0
   481  00016C                     printf@ap:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x0
   485  00016C                     	ds	2
   486  00016E                     ??_main:
   487                           
   488                           ; 1 bytes @ 0x2
   489  00016E                     	ds	2
   490                           
   491                           	psect	cstackBANK0
   492  000060                     __pcstackBANK0:
   493                           	callstack 0
   494  000060                     _efgtoa$2109:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000060                     	ds	2
   499  000062                     _efgtoa$2110:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x2
   503  000062                     	ds	2
   504  000064                     _efgtoa$2115:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  000064                     	ds	2
   509  000066                     _efgtoa$2119:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x6
   513  000066                     	ds	2
   514  000068                     _efgtoa$2120:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x8
   518  000068                     	ds	2
   519  00006A                     _efgtoa$2121:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xA
   523  00006A                     	ds	2
   524  00006C                     efgtoa@t:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xC
   528  00006C                     	ds	2
   529  00006E                     efgtoa@pp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xE
   533  00006E                     	ds	2
   534  000070                     efgtoa@ne:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x10
   538  000070                     	ds	2
   539  000072                     efgtoa@m:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x12
   543  000072                     	ds	2
   544  000074                     efgtoa@ou:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x14
   548  000074                     	ds	4
   549  000078                     efgtoa@d:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x18
   553  000078                     	ds	2
   554  00007A                     efgtoa@sign:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1A
   558  00007A                     	ds	2
   559  00007C                     efgtoa@p:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1C
   563  00007C                     	ds	2
   564  00007E                     efgtoa@w:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1E
   568  00007E                     	ds	2
   569  000080                     efgtoa@nmode:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x20
   573  000080                     	ds	1
   574  000081                     efgtoa@mode:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x21
   578  000081                     	ds	1
   579  000082                     efgtoa@h:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x22
   583  000082                     	ds	4
   584  000086                     efgtoa@l:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x26
   588  000086                     	ds	4
   589  00008A                     efgtoa@i:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2A
   593  00008A                     	ds	2
   594  00008C                     efgtoa@g:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x2C
   598  00008C                     	ds	4
   599  000090                     efgtoa@e:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x30
   603  000090                     	ds	2
   604  000092                     efgtoa@n:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608  000092                     	ds	2
   609  000094                     efgtoa@u:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x34
   613  000094                     	ds	4
   614  000098                     ?_vfprintf:
   615                           	callstack 0
   616  000098                     vfprintf@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x38
   620  000098                     	ds	2
   621  00009A                     vfprintf@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x3A
   625  00009A                     	ds	2
   626  00009C                     vfprintf@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x3C
   630  00009C                     	ds	2
   631  00009E                     ?_printf:
   632                           	callstack 0
   633  00009E                     printf@fmt:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x3E
   637  00009E                     	ds	34
   638                           
   639                           	psect	cstackCOMRAM
   640  000001                     __pcstackCOMRAM:
   641                           	callstack 0
   642  000001                     ??_INTERRUPT_InterruptManager:
   643  000001                     
   644                           ; 1 bytes @ 0x0
   645  000001                     	ds	4
   646  000005                     ?_strlen:
   647                           	callstack 0
   648  000005                     ?___fpclassifyf:
   649                           	callstack 0
   650  000005                     ?_isupper:
   651                           	callstack 0
   652  000005                     ?_isdigit:
   653                           	callstack 0
   654  000005                     ?_strncmp:
   655                           	callstack 0
   656  000005                     ?_isspace:
   657                           	callstack 0
   658  000005                     ?___wmul:
   659                           	callstack 0
   660  000005                     ?___awdiv:
   661                           	callstack 0
   662  000005                     ?___awmod:
   663                           	callstack 0
   664  000005                     ?___fladd:
   665                           	callstack 0
   666  000005                     ?___fldiv:
   667                           	callstack 0
   668  000005                     ?___flmul:
   669                           	callstack 0
   670  000005                     ?___flneg:
   671                           	callstack 0
   672  000005                     ?___fltol:
   673                           	callstack 0
   674  000005                     ?___xxtofl:
   675                           	callstack 0
   676  000005                     I2C_Open@address:
   677                           	callstack 0
   678  000005                     I2C_Close@returnValue:
   679                           	callstack 0
   680  000005                     I2C_MasterSendTxData@data:
   681                           	callstack 0
   682  000005                     EUSART_Write@txData:
   683                           	callstack 0
   684  000005                     I2C_SetBuffer@buffer:
   685                           	callstack 0
   686  000005                     I2C_SetCallback@cb:
   687                           	callstack 0
   688  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   689                           	callstack 0
   690  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   691                           	callstack 0
   692  000005                     EUSART_SetErrorHandler@interruptHandler:
   693                           	callstack 0
   694  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   695                           	callstack 0
   696  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   697                           	callstack 0
   698  000005                     ___wmul@multiplier:
   699                           	callstack 0
   700  000005                     ___awdiv@dividend:
   701                           	callstack 0
   702  000005                     ___awmod@dividend:
   703                           	callstack 0
   704  000005                     isdigit@c:
   705                           	callstack 0
   706  000005                     isspace@c:
   707                           	callstack 0
   708  000005                     isupper@c:
   709                           	callstack 0
   710  000005                     strcpy@dest:
   711                           	callstack 0
   712  000005                     strlen@s:
   713                           	callstack 0
   714  000005                     strncmp@_l:
   715                           	callstack 0
   716  000005                     ___fleq@ff1:
   717                           	callstack 0
   718  000005                     ___flneg@f1:
   719                           	callstack 0
   720  000005                     ___fltol@f1:
   721                           	callstack 0
   722  000005                     ___fladd@b:
   723                           	callstack 0
   724  000005                     ___fldiv@b:
   725                           	callstack 0
   726  000005                     ___flmul@b:
   727                           	callstack 0
   728  000005                     ___xxtofl@val:
   729                           	callstack 0
   730  000005                     ___fpclassifyf@x:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x4
   734  000005                     	ds	1
   735  000006                     I2C_Open@returnValue:
   736                           	callstack 0
   737  000006                     putch@txData:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x5
   741  000006                     	ds	1
   742  000007                     ??_isupper:
   743  000007                     ??_isdigit:
   744  000007                     ??_isspace:
   745  000007                     I2C_SetBuffer@bufferSize:
   746                           	callstack 0
   747  000007                     I2C_SetCallback@ptr:
   748                           	callstack 0
   749  000007                     ___wmul@multiplicand:
   750                           	callstack 0
   751  000007                     ___awdiv@divisor:
   752                           	callstack 0
   753  000007                     ___awmod@divisor:
   754                           	callstack 0
   755  000007                     fputc@c:
   756                           	callstack 0
   757  000007                     strcpy@src:
   758                           	callstack 0
   759  000007                     strlen@a:
   760                           	callstack 0
   761  000007                     strncmp@_r:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x6
   765  000007                     	ds	2
   766  000009                     ??___fpclassifyf:
   767  000009                     ??_strcpy:
   768  000009                     ??___fltol:
   769  000009                     ??___xxtofl:
   770  000009                     I2C_SetCallback@idx:
   771                           	callstack 0
   772  000009                     ___awdiv@counter:
   773                           	callstack 0
   774  000009                     ___awmod@counter:
   775                           	callstack 0
   776  000009                     ___wmul@product:
   777                           	callstack 0
   778  000009                     fputc@fp:
   779                           	callstack 0
   780  000009                     strncmp@n:
   781                           	callstack 0
   782  000009                     ___fleq@ff2:
   783                           	callstack 0
   784  000009                     ___fladd@a:
   785                           	callstack 0
   786  000009                     ___fldiv@a:
   787                           	callstack 0
   788  000009                     ___flmul@a:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x8
   792  000009                     	ds	1
   793  00000A                     ___awdiv@sign:
   794                           	callstack 0
   795  00000A                     ___awmod@sign:
   796                           	callstack 0
   797  00000A                     I2C_SetDataCompleteCallback@cb:
   798                           	callstack 0
   799  00000A                     I2C_SetAddressNackCallback@cb:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x9
   803  00000A                     	ds	1
   804  00000B                     ??_fputc:
   805  00000B                     ??_strncmp:
   806  00000B                     ?_tolower:
   807                           	callstack 0
   808  00000B                     _isspace$2204:
   809                           	callstack 0
   810  00000B                     ___awdiv@quotient:
   811                           	callstack 0
   812  00000B                     strcpy@s:
   813                           	callstack 0
   814  00000B                     tolower@c:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xA
   818  00000B                     	ds	1
   819  00000C                     ?_atoi:
   820                           	callstack 0
   821  00000C                     I2C_SetDataCompleteCallback@ptr:
   822                           	callstack 0
   823  00000C                     I2C_SetAddressNackCallback@ptr:
   824                           	callstack 0
   825  00000C                     atoi@s:
   826                           	callstack 0
   827  00000C                     strncmp@l:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0xB
   831  00000C                     	ds	1
   832  00000D                     ??___fladd:
   833  00000D                     ??___fldiv:
   834  00000D                     ??___flmul:
   835  00000D                     ??_tolower:
   836  00000D                     ??___fleq:
   837  00000D                     ___fltol@sign1:
   838                           	callstack 0
   839  00000D                     ___xxtofl@sign:
   840                           	callstack 0
   841  00000D                     ___fpclassifyf@e:
   842                           	callstack 0
   843  00000D                     strcpy@d:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0xC
   847  00000D                     	ds	1
   848  00000E                     ??_atoi:
   849  00000E                     ___fltol@exp1:
   850                           	callstack 0
   851  00000E                     ___xxtofl@exp:
   852                           	callstack 0
   853  00000E                     rd1RegCompleteHandler@ptr:
   854                           	callstack 0
   855  00000E                     rd2RegCompleteHandler@ptr:
   856                           	callstack 0
   857  00000E                     wr1RegCompleteHandler@ptr:
   858                           	callstack 0
   859  00000E                     wr2RegCompleteHandler@ptr:
   860                           	callstack 0
   861  00000E                     rdBlkRegCompleteHandler@ptr:
   862                           	callstack 0
   863  00000E                     I2C_CallbackReturnReset@funPtr:
   864                           	callstack 0
   865  00000E                     strncmp@r:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0xD
   869  00000E                     	ds	1
   870  00000F                     ___xxtofl@arg:
   871                           	callstack 0
   872  00000F                     ___fpclassifyf@u:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0xE
   876  00000F                     	ds	1
   877  000010                     ??_I2C_DO_TX:
   878  000010                     ??_I2C_DO_RX:
   879  000010                     ??_I2C_DO_TX_EMPTY:
   880  000010                     ??_I2C_DO_ADDRESS_NACK:
   881  000010                     fputs@s:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0xF
   885  000010                     	ds	1
   886  000011                     ___fladd@signs:
   887                           	callstack 0
   888  000011                     ___flmul@sign:
   889                           	callstack 0
   890  000011                     _tolower$2262:
   891                           	callstack 0
   892  000011                     ___fldiv@rem:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x10
   896  000011                     	ds	1
   897  000012                     ??_I2C_MasterFsm:
   898  000012                     ___fladd@aexp:
   899                           	callstack 0
   900  000012                     ___flmul@aexp:
   901                           	callstack 0
   902  000012                     atoi@neg:
   903                           	callstack 0
   904  000012                     fputs@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x11
   908  000012                     	ds	1
   909  000013                     ___fladd@bexp:
   910                           	callstack 0
   911  000013                     ___flmul@grs:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x12
   915  000013                     	ds	1
   916  000014                     I2C_MasterOperation@read:
   917                           	callstack 0
   918  000014                     ___fladd@grs:
   919                           	callstack 0
   920  000014                     fputs@c:
   921                           	callstack 0
   922  000014                     _atoi$2173:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x13
   926  000014                     	ds	1
   927  000015                     I2C_MasterOperation@returnValue:
   928                           	callstack 0
   929  000015                     ___fldiv@sign:
   930                           	callstack 0
   931  000015                     fputs@i:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x14
   935  000015                     	ds	1
   936  000016                     I2C_Read1ByteRegister@reg:
   937                           	callstack 0
   938  000016                     I2C_Write1ByteRegister@reg:
   939                           	callstack 0
   940  000016                     ___fldiv@new_exp:
   941                           	callstack 0
   942  000016                     _atoi$2175:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x15
   946  000016                     	ds	1
   947  000017                     ?_pad:
   948                           	callstack 0
   949  000017                     I2C_Read1ByteRegister@address:
   950                           	callstack 0
   951  000017                     I2C_Write1ByteRegister@data:
   952                           	callstack 0
   953  000017                     ___flmul@bexp:
   954                           	callstack 0
   955  000017                     pad@fp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x16
   959  000017                     	ds	1
   960  000018                     I2C_Read1ByteRegister@returnValue:
   961                           	callstack 0
   962  000018                     I2C_Write1ByteRegister@address:
   963                           	callstack 0
   964  000018                     _atoi$2174:
   965                           	callstack 0
   966  000018                     ___fldiv@grs:
   967                           	callstack 0
   968  000018                     ___flmul@prod:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x17
   972  000018                     	ds	1
   973  000019                     ??_AMG8833_Init:
   974  000019                     pad@buf:
   975                           	callstack 0
   976  000019                     atoi@n:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x18
   980  000019                     	ds	2
   981  00001B                     pad@p:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1A
   985  00001B                     	ds	1
   986  00001C                     ___fldiv@bexp:
   987                           	callstack 0
   988  00001C                     ___flmul@temp:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x1B
   992  00001C                     	ds	1
   993  00001D                     ??_pad:
   994  00001D                     ___fldiv@aexp:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x1C
   998  00001D                     	ds	1
   999  00001E                     ?_Wertdetekt:
  1000                           	callstack 0
  1001  00001E                     ?___flsub:
  1002                           	callstack 0
  1003  00001E                     ?_floorf:
  1004                           	callstack 0
  1005  00001E                     pad@i:
  1006                           	callstack 0
  1007  00001E                     ___flge@ff1:
  1008                           	callstack 0
  1009  00001E                     ___flsub@b:
  1010                           	callstack 0
  1011  00001E                     floorf@x:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x1D
  1015  00001E                     	ds	2
  1016  000020                     pad@w:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1F
  1020  000020                     	ds	2
  1021  000022                     ??_Wertdetekt:
  1022  000022                     ??_floorf:
  1023  000022                     ___flge@ff2:
  1024                           	callstack 0
  1025  000022                     ___flsub@a:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x21
  1029  000022                     	ds	2
  1030  000024                     Wertdetekt@tempData:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x23
  1034  000024                     	ds	2
  1035  000026                     ??___flge:
  1036  000026                     Wertdetekt@tempDataAnz:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x25
  1040  000026                     	ds	2
  1041  000028                     floorf@m:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x27
  1045  000028                     	ds	2
  1046  00002A                     ??_AMG8833_GetData:
  1047                           
  1048                           ; 1 bytes @ 0x29
  1049  00002A                     	ds	2
  1050  00002C                     floorf@e:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x2B
  1054  00002C                     	ds	2
  1055  00002E                     floorf@u:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x2D
  1059  00002E                     	ds	2
  1060  000030                     AMG8833_GetData@n:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x2F
  1064  000030                     	ds	2
  1065  000032                     ?_efgtoa:
  1066                           	callstack 0
  1067  000032                     AMG8833_GetData@pointer:
  1068                           	callstack 0
  1069  000032                     efgtoa@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x31
  1073  000032                     	ds	2
  1074  000034                     AMG8833_GetData@i:
  1075                           	callstack 0
  1076  000034                     efgtoa@f:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x33
  1080  000034                     	ds	2
  1081  000036                     AMG8833_GetData@x:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x35
  1085  000036                     	ds	2
  1086  000038                     efgtoa@c:
  1087                           	callstack 0
  1088  000038                     AMG8833_GetData@y:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x37
  1092  000038                     	ds	1
  1093  000039                     ??_efgtoa:
  1094                           
  1095                           ; 1 bytes @ 0x38
  1096  000039                     	ds	5
  1097  00003E                     ?_vfpfcnvrt:
  1098                           	callstack 0
  1099  00003E                     vfpfcnvrt@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x3D
  1103  00003E                     	ds	2
  1104  000040                     vfpfcnvrt@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x3F
  1108  000040                     	ds	2
  1109  000042                     vfpfcnvrt@ap:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x41
  1113  000042                     	ds	2
  1114  000044                     ??_vfpfcnvrt:
  1115                           
  1116                           ; 1 bytes @ 0x43
  1117  000044                     	ds	4
  1118  000048                     _vfpfcnvrt$2135:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x47
  1122  000048                     	ds	2
  1123  00004A                     _vfpfcnvrt$2139:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x49
  1127  00004A                     	ds	2
  1128  00004C                     vfpfcnvrt@f:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x4B
  1132  00004C                     	ds	4
  1133  000050                     vfpfcnvrt@ct:
  1134                           	callstack 0
  1135                           
  1136                           ; 3 bytes @ 0x4F
  1137  000050                     	ds	3
  1138  000053                     vfpfcnvrt@c:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x52
  1142  000053                     	ds	1
  1143  000054                     vfprintf@cfmt:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x53
  1147  000054                     	ds	2
  1148  000056                     
  1149                           ; 1 bytes @ 0x55
  1150 ;;
  1151 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1152 ;;
  1153 ;; *************** function _main *****************
  1154 ;; Defined at:
  1155 ;;		line 54 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;Total ram usage:        2 bytes
  1174 ;; Hardware stack levels required when called: 14
  1175 ;; This function calls:
  1176 ;;		_AMG8833_GetData
  1177 ;;		_AMG8833_Init
  1178 ;;		_SYSTEM_Initialize
  1179 ;;		_printf
  1180 ;; This function is called by:
  1181 ;;		Startup code after reset
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text0
  1186  001D06                     __ptext0:
  1187                           	callstack 0
  1188  001D06                     _main:
  1189                           	callstack 17
  1190  001D06                     
  1191                           ;main.c: 56:     SYSTEM_Initialize();
  1192  001D06  EC4C  F027         	call	_SYSTEM_Initialize	;wreg free
  1193  001D0A                     
  1194                           ;main.c: 57:     AMG8833_Init();
  1195  001D0A  ECB6  F020         	call	_AMG8833_Init	;wreg free
  1196  001D0E                     
  1197                           ;main.c: 64:     (INTCONbits.GIE = 1);
  1198  001D0E  8EF2               	bsf	242,7,c	;volatile
  1199  001D10                     
  1200                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  1201  001D10  8CF2               	bsf	242,6,c	;volatile
  1202  001D12                     l7532:
  1203                           
  1204                           ;main.c: 76:         AMG8833_GetData();
  1205  001D12  EC2B  F01C         	call	_AMG8833_GetData	;wreg free
  1206  001D16                     
  1207                           ;main.c: 90:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[0][
      +                          0],DataMatrix[0][1],DataMatrix[0][2],DataMatrix[0][3],DataMatrix[0][4],DataMatrix[0][5],
      +                          DataMatrix[0][6],DataMatrix[0][7]);
  1208  001D16  0E21               	movlw	low STR_1
  1209  001D18  0100               	movlb	0	; () banked
  1210  001D1A  6F9E               	movwf	printf@fmt& (0+255),b
  1211  001D1C  0E10               	movlw	high STR_1
  1212  001D1E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1213  001D20  C200  F0A0         	movff	_DataMatrix,?_printf+2
  1214  001D24  C201  F0A1         	movff	_DataMatrix+1,?_printf+3
  1215  001D28  C202  F0A2         	movff	_DataMatrix+2,?_printf+4
  1216  001D2C  C203  F0A3         	movff	_DataMatrix+3,?_printf+5
  1217  001D30  C204  F0A4         	movff	_DataMatrix+4,?_printf+6
  1218  001D34  C205  F0A5         	movff	_DataMatrix+5,?_printf+7
  1219  001D38  C206  F0A6         	movff	_DataMatrix+6,?_printf+8
  1220  001D3C  C207  F0A7         	movff	_DataMatrix+7,?_printf+9
  1221  001D40  C208  F0A8         	movff	_DataMatrix+8,?_printf+10
  1222  001D44  C209  F0A9         	movff	_DataMatrix+9,?_printf+11
  1223  001D48  C20A  F0AA         	movff	_DataMatrix+10,?_printf+12
  1224  001D4C  C20B  F0AB         	movff	_DataMatrix+11,?_printf+13
  1225  001D50  C20C  F0AC         	movff	_DataMatrix+12,?_printf+14
  1226  001D54  C20D  F0AD         	movff	_DataMatrix+13,?_printf+15
  1227  001D58  C20E  F0AE         	movff	_DataMatrix+14,?_printf+16
  1228  001D5C  C20F  F0AF         	movff	_DataMatrix+15,?_printf+17
  1229  001D60  C210  F0B0         	movff	_DataMatrix+16,?_printf+18
  1230  001D64  C211  F0B1         	movff	_DataMatrix+17,?_printf+19
  1231  001D68  C212  F0B2         	movff	_DataMatrix+18,?_printf+20
  1232  001D6C  C213  F0B3         	movff	_DataMatrix+19,?_printf+21
  1233  001D70  C214  F0B4         	movff	_DataMatrix+20,?_printf+22
  1234  001D74  C215  F0B5         	movff	_DataMatrix+21,?_printf+23
  1235  001D78  C216  F0B6         	movff	_DataMatrix+22,?_printf+24
  1236  001D7C  C217  F0B7         	movff	_DataMatrix+23,?_printf+25
  1237  001D80  C218  F0B8         	movff	_DataMatrix+24,?_printf+26
  1238  001D84  C219  F0B9         	movff	_DataMatrix+25,?_printf+27
  1239  001D88  C21A  F0BA         	movff	_DataMatrix+26,?_printf+28
  1240  001D8C  C21B  F0BB         	movff	_DataMatrix+27,?_printf+29
  1241  001D90  C21C  F0BC         	movff	_DataMatrix+28,?_printf+30
  1242  001D94  C21D  F0BD         	movff	_DataMatrix+29,?_printf+31
  1243  001D98  C21E  F0BE         	movff	_DataMatrix+30,?_printf+32
  1244  001D9C  C21F  F0BF         	movff	_DataMatrix+31,?_printf+33
  1245  001DA0  ECC5  F026         	call	_printf	;wreg free
  1246  001DA4                     
  1247                           ;main.c: 92:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[1][
      +                          0],DataMatrix[1][1],DataMatrix[1][2],DataMatrix[1][3],DataMatrix[1][4],DataMatrix[1][5],
      +                          DataMatrix[1][6],DataMatrix[1][7]);
  1248  001DA4  0E21               	movlw	low STR_1
  1249  001DA6  0100               	movlb	0	; () banked
  1250  001DA8  6F9E               	movwf	printf@fmt& (0+255),b
  1251  001DAA  0E10               	movlw	high STR_1
  1252  001DAC  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1253  001DAE  C220  F0A0         	movff	_DataMatrix+32,?_printf+2
  1254  001DB2  C221  F0A1         	movff	_DataMatrix+33,?_printf+3
  1255  001DB6  C222  F0A2         	movff	_DataMatrix+34,?_printf+4
  1256  001DBA  C223  F0A3         	movff	_DataMatrix+35,?_printf+5
  1257  001DBE  C224  F0A4         	movff	_DataMatrix+36,?_printf+6
  1258  001DC2  C225  F0A5         	movff	_DataMatrix+37,?_printf+7
  1259  001DC6  C226  F0A6         	movff	_DataMatrix+38,?_printf+8
  1260  001DCA  C227  F0A7         	movff	_DataMatrix+39,?_printf+9
  1261  001DCE  C228  F0A8         	movff	_DataMatrix+40,?_printf+10
  1262  001DD2  C229  F0A9         	movff	_DataMatrix+41,?_printf+11
  1263  001DD6  C22A  F0AA         	movff	_DataMatrix+42,?_printf+12
  1264  001DDA  C22B  F0AB         	movff	_DataMatrix+43,?_printf+13
  1265  001DDE  C22C  F0AC         	movff	_DataMatrix+44,?_printf+14
  1266  001DE2  C22D  F0AD         	movff	_DataMatrix+45,?_printf+15
  1267  001DE6  C22E  F0AE         	movff	_DataMatrix+46,?_printf+16
  1268  001DEA  C22F  F0AF         	movff	_DataMatrix+47,?_printf+17
  1269  001DEE  C230  F0B0         	movff	_DataMatrix+48,?_printf+18
  1270  001DF2  C231  F0B1         	movff	_DataMatrix+49,?_printf+19
  1271  001DF6  C232  F0B2         	movff	_DataMatrix+50,?_printf+20
  1272  001DFA  C233  F0B3         	movff	_DataMatrix+51,?_printf+21
  1273  001DFE  C234  F0B4         	movff	_DataMatrix+52,?_printf+22
  1274  001E02  C235  F0B5         	movff	_DataMatrix+53,?_printf+23
  1275  001E06  C236  F0B6         	movff	_DataMatrix+54,?_printf+24
  1276  001E0A  C237  F0B7         	movff	_DataMatrix+55,?_printf+25
  1277  001E0E  C238  F0B8         	movff	_DataMatrix+56,?_printf+26
  1278  001E12  C239  F0B9         	movff	_DataMatrix+57,?_printf+27
  1279  001E16  C23A  F0BA         	movff	_DataMatrix+58,?_printf+28
  1280  001E1A  C23B  F0BB         	movff	_DataMatrix+59,?_printf+29
  1281  001E1E  C23C  F0BC         	movff	_DataMatrix+60,?_printf+30
  1282  001E22  C23D  F0BD         	movff	_DataMatrix+61,?_printf+31
  1283  001E26  C23E  F0BE         	movff	_DataMatrix+62,?_printf+32
  1284  001E2A  C23F  F0BF         	movff	_DataMatrix+63,?_printf+33
  1285  001E2E  ECC5  F026         	call	_printf	;wreg free
  1286  001E32                     
  1287                           ;main.c: 94:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[2][
      +                          0],DataMatrix[2][1],DataMatrix[2][2],DataMatrix[2][3],DataMatrix[2][4],DataMatrix[2][5],
      +                          DataMatrix[2][6],DataMatrix[2][7]);
  1288  001E32  0E21               	movlw	low STR_1
  1289  001E34  0100               	movlb	0	; () banked
  1290  001E36  6F9E               	movwf	printf@fmt& (0+255),b
  1291  001E38  0E10               	movlw	high STR_1
  1292  001E3A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1293  001E3C  C240  F0A0         	movff	_DataMatrix+64,?_printf+2
  1294  001E40  C241  F0A1         	movff	_DataMatrix+65,?_printf+3
  1295  001E44  C242  F0A2         	movff	_DataMatrix+66,?_printf+4
  1296  001E48  C243  F0A3         	movff	_DataMatrix+67,?_printf+5
  1297  001E4C  C244  F0A4         	movff	_DataMatrix+68,?_printf+6
  1298  001E50  C245  F0A5         	movff	_DataMatrix+69,?_printf+7
  1299  001E54  C246  F0A6         	movff	_DataMatrix+70,?_printf+8
  1300  001E58  C247  F0A7         	movff	_DataMatrix+71,?_printf+9
  1301  001E5C  C248  F0A8         	movff	_DataMatrix+72,?_printf+10
  1302  001E60  C249  F0A9         	movff	_DataMatrix+73,?_printf+11
  1303  001E64  C24A  F0AA         	movff	_DataMatrix+74,?_printf+12
  1304  001E68  C24B  F0AB         	movff	_DataMatrix+75,?_printf+13
  1305  001E6C  C24C  F0AC         	movff	_DataMatrix+76,?_printf+14
  1306  001E70  C24D  F0AD         	movff	_DataMatrix+77,?_printf+15
  1307  001E74  C24E  F0AE         	movff	_DataMatrix+78,?_printf+16
  1308  001E78  C24F  F0AF         	movff	_DataMatrix+79,?_printf+17
  1309  001E7C  C250  F0B0         	movff	_DataMatrix+80,?_printf+18
  1310  001E80  C251  F0B1         	movff	_DataMatrix+81,?_printf+19
  1311  001E84  C252  F0B2         	movff	_DataMatrix+82,?_printf+20
  1312  001E88  C253  F0B3         	movff	_DataMatrix+83,?_printf+21
  1313  001E8C  C254  F0B4         	movff	_DataMatrix+84,?_printf+22
  1314  001E90  C255  F0B5         	movff	_DataMatrix+85,?_printf+23
  1315  001E94  C256  F0B6         	movff	_DataMatrix+86,?_printf+24
  1316  001E98  C257  F0B7         	movff	_DataMatrix+87,?_printf+25
  1317  001E9C  C258  F0B8         	movff	_DataMatrix+88,?_printf+26
  1318  001EA0  C259  F0B9         	movff	_DataMatrix+89,?_printf+27
  1319  001EA4  C25A  F0BA         	movff	_DataMatrix+90,?_printf+28
  1320  001EA8  C25B  F0BB         	movff	_DataMatrix+91,?_printf+29
  1321  001EAC  C25C  F0BC         	movff	_DataMatrix+92,?_printf+30
  1322  001EB0  C25D  F0BD         	movff	_DataMatrix+93,?_printf+31
  1323  001EB4  C25E  F0BE         	movff	_DataMatrix+94,?_printf+32
  1324  001EB8  C25F  F0BF         	movff	_DataMatrix+95,?_printf+33
  1325  001EBC  ECC5  F026         	call	_printf	;wreg free
  1326  001EC0                     
  1327                           ;main.c: 96:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[3][
      +                          0],DataMatrix[3][1],DataMatrix[3][2],DataMatrix[3][3],DataMatrix[3][4],DataMatrix[3][5],
      +                          DataMatrix[3][6],DataMatrix[3][7]);
  1328  001EC0  0E21               	movlw	low STR_1
  1329  001EC2  0100               	movlb	0	; () banked
  1330  001EC4  6F9E               	movwf	printf@fmt& (0+255),b
  1331  001EC6  0E10               	movlw	high STR_1
  1332  001EC8  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1333  001ECA  C260  F0A0         	movff	_DataMatrix+96,?_printf+2
  1334  001ECE  C261  F0A1         	movff	_DataMatrix+97,?_printf+3
  1335  001ED2  C262  F0A2         	movff	_DataMatrix+98,?_printf+4
  1336  001ED6  C263  F0A3         	movff	_DataMatrix+99,?_printf+5
  1337  001EDA  C264  F0A4         	movff	_DataMatrix+100,?_printf+6
  1338  001EDE  C265  F0A5         	movff	_DataMatrix+101,?_printf+7
  1339  001EE2  C266  F0A6         	movff	_DataMatrix+102,?_printf+8
  1340  001EE6  C267  F0A7         	movff	_DataMatrix+103,?_printf+9
  1341  001EEA  C268  F0A8         	movff	_DataMatrix+104,?_printf+10
  1342  001EEE  C269  F0A9         	movff	_DataMatrix+105,?_printf+11
  1343  001EF2  C26A  F0AA         	movff	_DataMatrix+106,?_printf+12
  1344  001EF6  C26B  F0AB         	movff	_DataMatrix+107,?_printf+13
  1345  001EFA  C26C  F0AC         	movff	_DataMatrix+108,?_printf+14
  1346  001EFE  C26D  F0AD         	movff	_DataMatrix+109,?_printf+15
  1347  001F02  C26E  F0AE         	movff	_DataMatrix+110,?_printf+16
  1348  001F06  C26F  F0AF         	movff	_DataMatrix+111,?_printf+17
  1349  001F0A  C270  F0B0         	movff	_DataMatrix+112,?_printf+18
  1350  001F0E  C271  F0B1         	movff	_DataMatrix+113,?_printf+19
  1351  001F12  C272  F0B2         	movff	_DataMatrix+114,?_printf+20
  1352  001F16  C273  F0B3         	movff	_DataMatrix+115,?_printf+21
  1353  001F1A  C274  F0B4         	movff	_DataMatrix+116,?_printf+22
  1354  001F1E  C275  F0B5         	movff	_DataMatrix+117,?_printf+23
  1355  001F22  C276  F0B6         	movff	_DataMatrix+118,?_printf+24
  1356  001F26  C277  F0B7         	movff	_DataMatrix+119,?_printf+25
  1357  001F2A  C278  F0B8         	movff	_DataMatrix+120,?_printf+26
  1358  001F2E  C279  F0B9         	movff	_DataMatrix+121,?_printf+27
  1359  001F32  C27A  F0BA         	movff	_DataMatrix+122,?_printf+28
  1360  001F36  C27B  F0BB         	movff	_DataMatrix+123,?_printf+29
  1361  001F3A  C27C  F0BC         	movff	_DataMatrix+124,?_printf+30
  1362  001F3E  C27D  F0BD         	movff	_DataMatrix+125,?_printf+31
  1363  001F42  C27E  F0BE         	movff	_DataMatrix+126,?_printf+32
  1364  001F46  C27F  F0BF         	movff	_DataMatrix+127,?_printf+33
  1365  001F4A  ECC5  F026         	call	_printf	;wreg free
  1366  001F4E                     
  1367                           ;main.c: 98:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[4][
      +                          0],DataMatrix[4][1],DataMatrix[4][2],DataMatrix[4][3],DataMatrix[4][4],DataMatrix[4][5],
      +                          DataMatrix[4][6],DataMatrix[4][7]);
  1368  001F4E  0E21               	movlw	low STR_1
  1369  001F50  0100               	movlb	0	; () banked
  1370  001F52  6F9E               	movwf	printf@fmt& (0+255),b
  1371  001F54  0E10               	movlw	high STR_1
  1372  001F56  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1373  001F58  C280  F0A0         	movff	_DataMatrix+128,?_printf+2
  1374  001F5C  C281  F0A1         	movff	_DataMatrix+129,?_printf+3
  1375  001F60  C282  F0A2         	movff	_DataMatrix+130,?_printf+4
  1376  001F64  C283  F0A3         	movff	_DataMatrix+131,?_printf+5
  1377  001F68  C284  F0A4         	movff	_DataMatrix+132,?_printf+6
  1378  001F6C  C285  F0A5         	movff	_DataMatrix+133,?_printf+7
  1379  001F70  C286  F0A6         	movff	_DataMatrix+134,?_printf+8
  1380  001F74  C287  F0A7         	movff	_DataMatrix+135,?_printf+9
  1381  001F78  C288  F0A8         	movff	_DataMatrix+136,?_printf+10
  1382  001F7C  C289  F0A9         	movff	_DataMatrix+137,?_printf+11
  1383  001F80  C28A  F0AA         	movff	_DataMatrix+138,?_printf+12
  1384  001F84  C28B  F0AB         	movff	_DataMatrix+139,?_printf+13
  1385  001F88  C28C  F0AC         	movff	_DataMatrix+140,?_printf+14
  1386  001F8C  C28D  F0AD         	movff	_DataMatrix+141,?_printf+15
  1387  001F90  C28E  F0AE         	movff	_DataMatrix+142,?_printf+16
  1388  001F94  C28F  F0AF         	movff	_DataMatrix+143,?_printf+17
  1389  001F98  C290  F0B0         	movff	_DataMatrix+144,?_printf+18
  1390  001F9C  C291  F0B1         	movff	_DataMatrix+145,?_printf+19
  1391  001FA0  C292  F0B2         	movff	_DataMatrix+146,?_printf+20
  1392  001FA4  C293  F0B3         	movff	_DataMatrix+147,?_printf+21
  1393  001FA8  C294  F0B4         	movff	_DataMatrix+148,?_printf+22
  1394  001FAC  C295  F0B5         	movff	_DataMatrix+149,?_printf+23
  1395  001FB0  C296  F0B6         	movff	_DataMatrix+150,?_printf+24
  1396  001FB4  C297  F0B7         	movff	_DataMatrix+151,?_printf+25
  1397  001FB8  C298  F0B8         	movff	_DataMatrix+152,?_printf+26
  1398  001FBC  C299  F0B9         	movff	_DataMatrix+153,?_printf+27
  1399  001FC0  C29A  F0BA         	movff	_DataMatrix+154,?_printf+28
  1400  001FC4  C29B  F0BB         	movff	_DataMatrix+155,?_printf+29
  1401  001FC8  C29C  F0BC         	movff	_DataMatrix+156,?_printf+30
  1402  001FCC  C29D  F0BD         	movff	_DataMatrix+157,?_printf+31
  1403  001FD0  C29E  F0BE         	movff	_DataMatrix+158,?_printf+32
  1404  001FD4  C29F  F0BF         	movff	_DataMatrix+159,?_printf+33
  1405  001FD8  ECC5  F026         	call	_printf	;wreg free
  1406  001FDC                     
  1407                           ;main.c: 100:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[5]
      +                          [0],DataMatrix[5][1],DataMatrix[5][2],DataMatrix[5][3],DataMatrix[5][4],DataMatrix[5][5]
      +                          ,DataMatrix[5][6],DataMatrix[5][7]);
  1408  001FDC  0E21               	movlw	low STR_1
  1409  001FDE  0100               	movlb	0	; () banked
  1410  001FE0  6F9E               	movwf	printf@fmt& (0+255),b
  1411  001FE2  0E10               	movlw	high STR_1
  1412  001FE4  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1413  001FE6  C2A0  F0A0         	movff	_DataMatrix+160,?_printf+2
  1414  001FEA  C2A1  F0A1         	movff	_DataMatrix+161,?_printf+3
  1415  001FEE  C2A2  F0A2         	movff	_DataMatrix+162,?_printf+4
  1416  001FF2  C2A3  F0A3         	movff	_DataMatrix+163,?_printf+5
  1417  001FF6  C2A4  F0A4         	movff	_DataMatrix+164,?_printf+6
  1418  001FFA  C2A5  F0A5         	movff	_DataMatrix+165,?_printf+7
  1419  001FFE  C2A6  F0A6         	movff	_DataMatrix+166,?_printf+8
  1420  002002  C2A7  F0A7         	movff	_DataMatrix+167,?_printf+9
  1421  002006  C2A8  F0A8         	movff	_DataMatrix+168,?_printf+10
  1422  00200A  C2A9  F0A9         	movff	_DataMatrix+169,?_printf+11
  1423  00200E  C2AA  F0AA         	movff	_DataMatrix+170,?_printf+12
  1424  002012  C2AB  F0AB         	movff	_DataMatrix+171,?_printf+13
  1425  002016  C2AC  F0AC         	movff	_DataMatrix+172,?_printf+14
  1426  00201A  C2AD  F0AD         	movff	_DataMatrix+173,?_printf+15
  1427  00201E  C2AE  F0AE         	movff	_DataMatrix+174,?_printf+16
  1428  002022  C2AF  F0AF         	movff	_DataMatrix+175,?_printf+17
  1429  002026  C2B0  F0B0         	movff	_DataMatrix+176,?_printf+18
  1430  00202A  C2B1  F0B1         	movff	_DataMatrix+177,?_printf+19
  1431  00202E  C2B2  F0B2         	movff	_DataMatrix+178,?_printf+20
  1432  002032  C2B3  F0B3         	movff	_DataMatrix+179,?_printf+21
  1433  002036  C2B4  F0B4         	movff	_DataMatrix+180,?_printf+22
  1434  00203A  C2B5  F0B5         	movff	_DataMatrix+181,?_printf+23
  1435  00203E  C2B6  F0B6         	movff	_DataMatrix+182,?_printf+24
  1436  002042  C2B7  F0B7         	movff	_DataMatrix+183,?_printf+25
  1437  002046  C2B8  F0B8         	movff	_DataMatrix+184,?_printf+26
  1438  00204A  C2B9  F0B9         	movff	_DataMatrix+185,?_printf+27
  1439  00204E  C2BA  F0BA         	movff	_DataMatrix+186,?_printf+28
  1440  002052  C2BB  F0BB         	movff	_DataMatrix+187,?_printf+29
  1441  002056  C2BC  F0BC         	movff	_DataMatrix+188,?_printf+30
  1442  00205A  C2BD  F0BD         	movff	_DataMatrix+189,?_printf+31
  1443  00205E  C2BE  F0BE         	movff	_DataMatrix+190,?_printf+32
  1444  002062  C2BF  F0BF         	movff	_DataMatrix+191,?_printf+33
  1445  002066  ECC5  F026         	call	_printf	;wreg free
  1446  00206A                     
  1447                           ;main.c: 102:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[6]
      +                          [0],DataMatrix[6][1],DataMatrix[6][2],DataMatrix[6][3],DataMatrix[6][4],DataMatrix[6][5]
      +                          ,DataMatrix[6][6],DataMatrix[6][7]);
  1448  00206A  0E21               	movlw	low STR_1
  1449  00206C  0100               	movlb	0	; () banked
  1450  00206E  6F9E               	movwf	printf@fmt& (0+255),b
  1451  002070  0E10               	movlw	high STR_1
  1452  002072  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1453  002074  C2C0  F0A0         	movff	_DataMatrix+192,?_printf+2
  1454  002078  C2C1  F0A1         	movff	_DataMatrix+193,?_printf+3
  1455  00207C  C2C2  F0A2         	movff	_DataMatrix+194,?_printf+4
  1456  002080  C2C3  F0A3         	movff	_DataMatrix+195,?_printf+5
  1457  002084  C2C4  F0A4         	movff	_DataMatrix+196,?_printf+6
  1458  002088  C2C5  F0A5         	movff	_DataMatrix+197,?_printf+7
  1459  00208C  C2C6  F0A6         	movff	_DataMatrix+198,?_printf+8
  1460  002090  C2C7  F0A7         	movff	_DataMatrix+199,?_printf+9
  1461  002094  C2C8  F0A8         	movff	_DataMatrix+200,?_printf+10
  1462  002098  C2C9  F0A9         	movff	_DataMatrix+201,?_printf+11
  1463  00209C  C2CA  F0AA         	movff	_DataMatrix+202,?_printf+12
  1464  0020A0  C2CB  F0AB         	movff	_DataMatrix+203,?_printf+13
  1465  0020A4  C2CC  F0AC         	movff	_DataMatrix+204,?_printf+14
  1466  0020A8  C2CD  F0AD         	movff	_DataMatrix+205,?_printf+15
  1467  0020AC  C2CE  F0AE         	movff	_DataMatrix+206,?_printf+16
  1468  0020B0  C2CF  F0AF         	movff	_DataMatrix+207,?_printf+17
  1469  0020B4  C2D0  F0B0         	movff	_DataMatrix+208,?_printf+18
  1470  0020B8  C2D1  F0B1         	movff	_DataMatrix+209,?_printf+19
  1471  0020BC  C2D2  F0B2         	movff	_DataMatrix+210,?_printf+20
  1472  0020C0  C2D3  F0B3         	movff	_DataMatrix+211,?_printf+21
  1473  0020C4  C2D4  F0B4         	movff	_DataMatrix+212,?_printf+22
  1474  0020C8  C2D5  F0B5         	movff	_DataMatrix+213,?_printf+23
  1475  0020CC  C2D6  F0B6         	movff	_DataMatrix+214,?_printf+24
  1476  0020D0  C2D7  F0B7         	movff	_DataMatrix+215,?_printf+25
  1477  0020D4  C2D8  F0B8         	movff	_DataMatrix+216,?_printf+26
  1478  0020D8  C2D9  F0B9         	movff	_DataMatrix+217,?_printf+27
  1479  0020DC  C2DA  F0BA         	movff	_DataMatrix+218,?_printf+28
  1480  0020E0  C2DB  F0BB         	movff	_DataMatrix+219,?_printf+29
  1481  0020E4  C2DC  F0BC         	movff	_DataMatrix+220,?_printf+30
  1482  0020E8  C2DD  F0BD         	movff	_DataMatrix+221,?_printf+31
  1483  0020EC  C2DE  F0BE         	movff	_DataMatrix+222,?_printf+32
  1484  0020F0  C2DF  F0BF         	movff	_DataMatrix+223,?_printf+33
  1485  0020F4  ECC5  F026         	call	_printf	;wreg free
  1486  0020F8                     
  1487                           ;main.c: 104:         printf("%.1f %.1f %.1f %.1f %.1f %.1f %.1f %.1f\r\n",DataMatrix[7]
      +                          [0],DataMatrix[7][1],DataMatrix[7][2],DataMatrix[7][3],DataMatrix[7][4],DataMatrix[7][5]
      +                          ,DataMatrix[7][6],DataMatrix[7][7]);
  1488  0020F8  0E21               	movlw	low STR_1
  1489  0020FA  0100               	movlb	0	; () banked
  1490  0020FC  6F9E               	movwf	printf@fmt& (0+255),b
  1491  0020FE  0E10               	movlw	high STR_1
  1492  002100  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1493  002102  C2E0  F0A0         	movff	_DataMatrix+224,?_printf+2
  1494  002106  C2E1  F0A1         	movff	_DataMatrix+225,?_printf+3
  1495  00210A  C2E2  F0A2         	movff	_DataMatrix+226,?_printf+4
  1496  00210E  C2E3  F0A3         	movff	_DataMatrix+227,?_printf+5
  1497  002112  C2E4  F0A4         	movff	_DataMatrix+228,?_printf+6
  1498  002116  C2E5  F0A5         	movff	_DataMatrix+229,?_printf+7
  1499  00211A  C2E6  F0A6         	movff	_DataMatrix+230,?_printf+8
  1500  00211E  C2E7  F0A7         	movff	_DataMatrix+231,?_printf+9
  1501  002122  C2E8  F0A8         	movff	_DataMatrix+232,?_printf+10
  1502  002126  C2E9  F0A9         	movff	_DataMatrix+233,?_printf+11
  1503  00212A  C2EA  F0AA         	movff	_DataMatrix+234,?_printf+12
  1504  00212E  C2EB  F0AB         	movff	_DataMatrix+235,?_printf+13
  1505  002132  C2EC  F0AC         	movff	_DataMatrix+236,?_printf+14
  1506  002136  C2ED  F0AD         	movff	_DataMatrix+237,?_printf+15
  1507  00213A  C2EE  F0AE         	movff	_DataMatrix+238,?_printf+16
  1508  00213E  C2EF  F0AF         	movff	_DataMatrix+239,?_printf+17
  1509  002142  C2F0  F0B0         	movff	_DataMatrix+240,?_printf+18
  1510  002146  C2F1  F0B1         	movff	_DataMatrix+241,?_printf+19
  1511  00214A  C2F2  F0B2         	movff	_DataMatrix+242,?_printf+20
  1512  00214E  C2F3  F0B3         	movff	_DataMatrix+243,?_printf+21
  1513  002152  C2F4  F0B4         	movff	_DataMatrix+244,?_printf+22
  1514  002156  C2F5  F0B5         	movff	_DataMatrix+245,?_printf+23
  1515  00215A  C2F6  F0B6         	movff	_DataMatrix+246,?_printf+24
  1516  00215E  C2F7  F0B7         	movff	_DataMatrix+247,?_printf+25
  1517  002162  C2F8  F0B8         	movff	_DataMatrix+248,?_printf+26
  1518  002166  C2F9  F0B9         	movff	_DataMatrix+249,?_printf+27
  1519  00216A  C2FA  F0BA         	movff	_DataMatrix+250,?_printf+28
  1520  00216E  C2FB  F0BB         	movff	_DataMatrix+251,?_printf+29
  1521  002172  C2FC  F0BC         	movff	_DataMatrix+252,?_printf+30
  1522  002176  C2FD  F0BD         	movff	_DataMatrix+253,?_printf+31
  1523  00217A  C2FE  F0BE         	movff	_DataMatrix+254,?_printf+32
  1524  00217E  C2FF  F0BF         	movff	_DataMatrix+255,?_printf+33
  1525  002182  ECC5  F026         	call	_printf	;wreg free
  1526  002186                     
  1527                           ;main.c: 105:         printf("\r\n");
  1528  002186  0E48               	movlw	low (STR_1+39)
  1529  002188  0100               	movlb	0	; () banked
  1530  00218A  6F9E               	movwf	printf@fmt& (0+255),b
  1531  00218C  0E10               	movlw	high (STR_1+39)
  1532  00218E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1533  002190  ECC5  F026         	call	_printf	;wreg free
  1534  002194                     
  1535                           ;main.c: 106:         printf("\r\n");
  1536  002194  0E48               	movlw	low (STR_1+39)
  1537  002196  0100               	movlb	0	; () banked
  1538  002198  6F9E               	movwf	printf@fmt& (0+255),b
  1539  00219A  0E10               	movlw	high (STR_1+39)
  1540  00219C  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1541  00219E  ECC5  F026         	call	_printf	;wreg free
  1542  0021A2                     
  1543                           ;main.c: 107:         printf("\r\n");
  1544  0021A2  0E48               	movlw	low (STR_1+39)
  1545  0021A4  0100               	movlb	0	; () banked
  1546  0021A6  6F9E               	movwf	printf@fmt& (0+255),b
  1547  0021A8  0E10               	movlw	high (STR_1+39)
  1548  0021AA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  1549  0021AC  ECC5  F026         	call	_printf	;wreg free
  1550  0021B0                     
  1551                           ;main.c: 108:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  1552  0021B0  0E15               	movlw	21
  1553  0021B2  0101               	movlb	1	; () banked
  1554  0021B4  6F6F               	movwf	(??_main+1)& (0+255),b
  1555  0021B6  0E4B               	movlw	75
  1556  0021B8  6F6E               	movwf	??_main& (0+255),b
  1557  0021BA  0EBE               	movlw	190
  1558  0021BC                     u8347:
  1559  0021BC  2EE8               	decfsz	wreg,f,c
  1560  0021BE  D7FE               	bra	u8347
  1561  0021C0  2F6E               	decfsz	??_main& (0+255),f,b
  1562  0021C2  D7FC               	bra	u8347
  1563  0021C4  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1564  0021C6  D7FA               	bra	u8347
  1565  0021C8  F000               	nop	
  1566  0021CA  EF89  F00E         	goto	l7532
  1567  0021CE  EF58  F000         	goto	start
  1568  0021D2                     __end_of_main:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _printf *****************
  1572 ;; Defined at:
  1573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1576 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(42), 
  1577 ;;		 -> STR_7(42), STR_6(42), STR_5(42), STR_4(42), 
  1578 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  ap              2    0[BANK1 ] PTR void [1]
  1581 ;;		 -> ?_printf(2), 
  1582 ;;  ret             2    0        int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   62[BANK0 ] int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         0      34       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:       36 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 12
  1599 ;; This function calls:
  1600 ;;		_vfprintf
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text1
  1607  004D8A                     __ptext1:
  1608                           	callstack 0
  1609  004D8A                     _printf:
  1610                           	callstack 18
  1611  004D8A  0EA0               	movlw	low (?_printf+2)
  1612  004D8C  0101               	movlb	1	; () banked
  1613  004D8E  6F6C               	movwf	printf@ap& (0+255),b
  1614  004D90  0E00               	movlw	high (?_printf+2)
  1615  004D92  6F6D               	movwf	(printf@ap+1)& (0+255),b
  1616  004D94                     
  1617                           ; BSR set to: 1
  1618  004D94  0E00               	movlw	0
  1619  004D96  0100               	movlb	0	; () banked
  1620  004D98  6F98               	movwf	vfprintf@fp& (0+255),b
  1621  004D9A  0E00               	movlw	0
  1622  004D9C  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1623  004D9E  C09E  F09A         	movff	printf@fmt,vfprintf@fmt
  1624  004DA2  C09F  F09B         	movff	printf@fmt+1,vfprintf@fmt+1
  1625  004DA6  0E6C               	movlw	low printf@ap
  1626  004DA8  6F9C               	movwf	vfprintf@ap& (0+255),b
  1627  004DAA  0E01               	movlw	high printf@ap
  1628  004DAC  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1629  004DAE  EC18  F024         	call	_vfprintf	;wreg free
  1630  004DB2  0012               	return		;funcret
  1631  004DB4                     __end_of_printf:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _vfprintf *****************
  1635 ;; Defined at:
  1636 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1639 ;;		 -> NULL(0), 
  1640 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1641 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(42), 
  1642 ;;		 -> STR_7(42), STR_6(42), STR_5(42), STR_4(42), 
  1643 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  1644 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1645 ;;		 -> printf@ap(2), 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1648 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(42), 
  1649 ;;		 -> STR_7(42), STR_6(42), STR_5(42), STR_4(42), 
  1650 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2   56[BANK0 ] int 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1660 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;Total ram usage:        8 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 11
  1667 ;; This function calls:
  1668 ;;		_vfpfcnvrt
  1669 ;; This function is called by:
  1670 ;;		_printf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text2
  1675  004830                     __ptext2:
  1676                           	callstack 0
  1677  004830                     _vfprintf:
  1678                           	callstack 18
  1679  004830                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1681  004830  C09A  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1682  004834  C09B  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1683  004838                     
  1684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1685  004838  0E00               	movlw	0
  1686  00483A  0100               	movlb	0	; () banked
  1687  00483C  6FF0               	movwf	(_nout+1)& (0+255),b
  1688  00483E  0E00               	movlw	0
  1689  004840  6FEF               	movwf	_nout& (0+255),b
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1692  004842  EF36  F024         	goto	l7474
  1693  004846                     l7472:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1697  004846  C098  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1698  00484A  C099  F03F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1699  00484E  0E54               	movlw	low vfprintf@cfmt
  1700  004850  6E40               	movwf	vfpfcnvrt@fmt^0,c
  1701  004852  0E00               	movlw	high vfprintf@cfmt
  1702  004854  6E41               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1703  004856  C09C  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
  1704  00485A  C09D  F043         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1705  00485E  EC49  F013         	call	_vfpfcnvrt	;wreg free
  1706  004862  503E               	movf	?_vfpfcnvrt^0,w,c
  1707  004864  0100               	movlb	0	; () banked
  1708  004866  27EF               	addwf	_nout& (0+255),f,b
  1709  004868  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1710  00486A  23F0               	addwfc	(_nout+1)& (0+255),f,b
  1711  00486C                     l7474:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1715  00486C  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1716  004870  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1717  004874                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1718  004874  6AF8               	clrf	tblptru,c
  1719  004876                     	endif
  1720  004876                     	if	0	;tblptru may be non-zero
  1721  004876                     	endif
  1722  004876  0008               	tblrd		*
  1723  004878  50F5               	movf	tablat,w,c
  1724  00487A  0900               	iorlw	0
  1725  00487C  A4D8               	btfss	status,2,c
  1726  00487E  EF43  F024         	goto	u8291
  1727  004882  EF45  F024         	goto	u8290
  1728  004886                     u8291:
  1729  004886  EF23  F024         	goto	l7472
  1730  00488A                     u8290:
  1731  00488A                     
  1732                           ; BSR set to: 0
  1733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1734  00488A  C0EF  F098         	movff	_nout,?_vfprintf
  1735  00488E  C0F0  F099         	movff	_nout+1,?_vfprintf+1
  1736  004892                     
  1737                           ; BSR set to: 0
  1738  004892  0012               	return		;funcret
  1739  004894                     __end_of_vfprintf:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _vfpfcnvrt *****************
  1743 ;; Defined at:
  1744 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1747 ;;		 -> NULL(0), 
  1748 ;;  fmt             2   63[COMRAM] PTR PTR unsigned char 
  1749 ;;		 -> vfprintf@cfmt(2), 
  1750 ;;  ap              2   65[COMRAM] PTR PTR void 
  1751 ;;		 -> printf@ap(2), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  llu             8    0        unsigned long long 
  1754 ;;  ll              8    0        long long 
  1755 ;;  f               4   75[COMRAM] long long 
  1756 ;;  ct              3   79[COMRAM] unsigned char [3]
  1757 ;;  vp              3    0        PTR void 
  1758 ;;  cp              3    0        PTR unsigned char 
  1759 ;;  i               2    0        int 
  1760 ;;  done            2    0        int 
  1761 ;;  c               1   82[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2   61[COMRAM] int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1771 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;Total ram usage:       22 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 10
  1778 ;; This function calls:
  1779 ;;		_atoi
  1780 ;;		_efgtoa
  1781 ;;		_fputc
  1782 ;;		_isdigit
  1783 ;;		_isupper
  1784 ;;		_strncmp
  1785 ;;		_tolower
  1786 ;; This function is called by:
  1787 ;;		_vfprintf
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text3
  1792  002692                     __ptext3:
  1793                           	callstack 0
  1794  002692                     _vfpfcnvrt:
  1795                           	callstack 18
  1796  002692                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1798  002692  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  002696  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  00269A  CFDE FFF6          	movff	postinc2,tblptrl
  1801  00269E  CFDD FFF7          	movff	postdec2,tblptrh
  1802  0026A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1803  0026A2  6AF8               	clrf	tblptru,c
  1804  0026A4                     	endif
  1805  0026A4                     	if	0	;tblptru may be non-zero
  1806  0026A4                     	endif
  1807  0026A4  0008               	tblrd		*
  1808  0026A6  50F5               	movf	tablat,w,c
  1809  0026A8  0A25               	xorlw	37
  1810  0026AA  A4D8               	btfss	status,2,c
  1811  0026AC  EF5A  F013         	goto	u8151
  1812  0026B0  EF5C  F013         	goto	u8150
  1813  0026B4                     u8151:
  1814  0026B4  EF7C  F015         	goto	l7450
  1815  0026B8                     u8150:
  1816  0026B8                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1818  0026B8  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1819  0026BC  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1820  0026C0  2ADE               	incf	postinc2,f,c
  1821  0026C2  0E00               	movlw	0
  1822  0026C4  22DD               	addwfc	postdec2,f,c
  1823  0026C6                     
  1824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1825  0026C6  0E00               	movlw	0
  1826  0026C8  0100               	movlb	0	; () banked
  1827  0026CA  6FF2               	movwf	(_width+1)& (0+255),b
  1828  0026CC  0E00               	movlw	0
  1829  0026CE  6FF1               	movwf	_width& (0+255),b
  1830  0026D0  C0F1  F0F5         	movff	_width,_flags
  1831  0026D4  C0F2  F0F6         	movff	_width+1,_flags+1
  1832  0026D8                     
  1833                           ; BSR set to: 0
  1834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1835  0026D8  69F3               	setf	_prec& (0+255),b
  1836  0026DA  69F4               	setf	(_prec+1)& (0+255),b
  1837  0026DC                     
  1838                           ; BSR set to: 0
  1839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1840  0026DC  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1841  0026E0  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1842  0026E4  CFDE FFF6          	movff	postinc2,tblptrl
  1843  0026E8  CFDD FFF7          	movff	postdec2,tblptrh
  1844  0026EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1845  0026EC  6AF8               	clrf	tblptru,c
  1846  0026EE                     	endif
  1847  0026EE                     	if	0	;tblptru may be non-zero
  1848  0026EE                     	endif
  1849  0026EE  0008               	tblrd		*
  1850  0026F0  50F5               	movf	tablat,w,c
  1851  0026F2  0A2E               	xorlw	46
  1852  0026F4  A4D8               	btfss	status,2,c
  1853  0026F6  EF7F  F013         	goto	u8161
  1854  0026FA  EF81  F013         	goto	u8160
  1855  0026FE                     u8161:
  1856  0026FE  EF00  F014         	goto	l7396
  1857  002702                     u8160:
  1858  002702                     
  1859                           ; BSR set to: 0
  1860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1861  002702  0E00               	movlw	0
  1862  002704  6FF4               	movwf	(_prec+1)& (0+255),b
  1863  002706  0E00               	movlw	0
  1864  002708  6FF3               	movwf	_prec& (0+255),b
  1865  00270A                     
  1866                           ; BSR set to: 0
  1867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1868  00270A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  00270E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  002712  2ADE               	incf	postinc2,f,c
  1871  002714  0E00               	movlw	0
  1872  002716  22DD               	addwfc	postdec2,f,c
  1873  002718                     
  1874                           ; BSR set to: 0
  1875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1876  002718  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1877  00271C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1878  002720  CFDE FFF6          	movff	postinc2,tblptrl
  1879  002724  CFDD FFF7          	movff	postdec2,tblptrh
  1880  002728                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1881  002728  6AF8               	clrf	tblptru,c
  1882  00272A                     	endif
  1883  00272A                     	if	0	;tblptru may be non-zero
  1884  00272A                     	endif
  1885  00272A  0008               	tblrd		*
  1886  00272C  50F5               	movf	tablat,w,c
  1887  00272E  0A2A               	xorlw	42
  1888  002730  A4D8               	btfss	status,2,c
  1889  002732  EF9D  F013         	goto	u8171
  1890  002736  EF9F  F013         	goto	u8170
  1891  00273A                     u8171:
  1892  00273A  EFBC  F013         	goto	l7386
  1893  00273E                     u8170:
  1894  00273E                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1897  00273E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  002742  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  002746  2ADE               	incf	postinc2,f,c
  1900  002748  0E00               	movlw	0
  1901  00274A  22DD               	addwfc	postdec2,f,c
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1904  00274C  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1905  002750  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1906  002754  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1907  002758  0E02               	movlw	2
  1908  00275A  26DE               	addwf	postinc2,f,c
  1909  00275C  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1910  002760  0E00               	movlw	0
  1911  002762  22DD               	addwfc	postdec2,f,c
  1912  002764  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1913  002768  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1914  00276C  CFDE F0F3          	movff	postinc2,_prec
  1915  002770  CFDD F0F4          	movff	postdec2,_prec+1
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1918  002774  EF00  F014         	goto	l7396
  1919  002778                     l7386:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1923  002778  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924  00277C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925  002780  CFDE F00C          	movff	postinc2,atoi@s
  1926  002784  CFDD F00D          	movff	postdec2,atoi@s+1
  1927  002788  EC5E  F01B         	call	_atoi	;wreg free
  1928  00278C  C00C  F0F3         	movff	?_atoi,_prec
  1929  002790  C00D  F0F4         	movff	?_atoi+1,_prec+1
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1932  002794  EFD3  F013         	goto	l7390
  1933  002798                     l7388:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1936  002798  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1937  00279C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1938  0027A0  2ADE               	incf	postinc2,f,c
  1939  0027A2  0E00               	movlw	0
  1940  0027A4  22DD               	addwfc	postdec2,f,c
  1941  0027A6                     l7390:
  1942  0027A6  0ED0               	movlw	208
  1943  0027A8  6E44               	movwf	??_vfpfcnvrt^0,c
  1944  0027AA  0EFF               	movlw	255
  1945  0027AC  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1946  0027AE  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947  0027B2  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  0027B6  CFDE FFF6          	movff	postinc2,tblptrl
  1949  0027BA  CFDD FFF7          	movff	postdec2,tblptrh
  1950  0027BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1951  0027BE  6AF8               	clrf	tblptru,c
  1952  0027C0                     	endif
  1953  0027C0                     	if	0	;tblptru may be non-zero
  1954  0027C0                     	endif
  1955  0027C0  0008               	tblrd		*
  1956  0027C2  50F5               	movf	tablat,w,c
  1957  0027C4  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  1958  0027C6  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  1959  0027C8  5044               	movf	??_vfpfcnvrt^0,w,c
  1960  0027CA  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1961  0027CC  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1962  0027CE  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1963  0027D0  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  1964  0027D2  E10A               	bnz	u8180
  1965  0027D4  0E0A               	movlw	10
  1966  0027D6  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1967  0027D8  A0D8               	btfss	status,0,c
  1968  0027DA  EFF1  F013         	goto	u8181
  1969  0027DE  EFF4  F013         	goto	u8180
  1970  0027E2                     u8181:
  1971  0027E2  0E01               	movlw	1
  1972  0027E4  EFF5  F013         	goto	u8190
  1973  0027E8                     u8180:
  1974  0027E8  0E00               	movlw	0
  1975  0027EA                     u8190:
  1976  0027EA  6E48               	movwf	_vfpfcnvrt$2135^0,c
  1977  0027EC  6A49               	clrf	(_vfpfcnvrt$2135+1)^0,c
  1978  0027EE  5048               	movf	_vfpfcnvrt$2135^0,w,c
  1979  0027F0  1049               	iorwf	(_vfpfcnvrt$2135+1)^0,w,c
  1980  0027F2  A4D8               	btfss	status,2,c
  1981  0027F4  EFFE  F013         	goto	u8201
  1982  0027F8  EF00  F014         	goto	u8200
  1983  0027FC                     u8201:
  1984  0027FC  EFCC  F013         	goto	l7388
  1985  002800                     u8200:
  1986  002800                     l7396:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1989  002800  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990  002804  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991  002808  CFDE FFF6          	movff	postinc2,tblptrl
  1992  00280C  CFDD FFF7          	movff	postdec2,tblptrh
  1993  002810                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1994  002810  6AF8               	clrf	tblptru,c
  1995  002812                     	endif
  1996  002812                     	if	0	;tblptru may be non-zero
  1997  002812                     	endif
  1998  002812  0008               	tblrd		*
  1999  002814  50F5               	movf	tablat,w,c
  2000  002816  6E0B               	movwf	tolower@c^0,c
  2001  002818  6A0C               	clrf	(tolower@c+1)^0,c
  2002  00281A  EC4A  F024         	call	_tolower	;wreg free
  2003  00281E  500B               	movf	?_tolower^0,w,c
  2004  002820  6E50               	movwf	vfpfcnvrt@ct^0,c
  2005  002822                     
  2006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2007  002822  5050               	movf	vfpfcnvrt@ct^0,w,c
  2008  002824  B4D8               	btfsc	status,2,c
  2009  002826  EF17  F014         	goto	u8211
  2010  00282A  EF19  F014         	goto	u8210
  2011  00282E                     u8211:
  2012  00282E  EF53  F014         	goto	l7406
  2013  002832                     u8210:
  2014  002832                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2016  002832  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2017  002836  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2018  00283A  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  2019  00283E  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  2020  002842  0E01               	movlw	1
  2021  002844  2644               	addwf	??_vfpfcnvrt^0,f,c
  2022  002846  0E00               	movlw	0
  2023  002848  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2024  00284A  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2025  00284E  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2026  002852                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2027  002852  6AF8               	clrf	tblptru,c
  2028  002854                     	endif
  2029  002854                     	if	0	;tblptru may be non-zero
  2030  002854                     	endif
  2031  002854  0008               	tblrd		*
  2032  002856  50F5               	movf	tablat,w,c
  2033  002858  6E0B               	movwf	tolower@c^0,c
  2034  00285A  6A0C               	clrf	(tolower@c+1)^0,c
  2035  00285C  EC4A  F024         	call	_tolower	;wreg free
  2036  002860  500B               	movf	?_tolower^0,w,c
  2037  002862  6E51               	movwf	(vfpfcnvrt@ct+1)^0,c
  2038  002864                     
  2039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2040  002864  5051               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2041  002866  B4D8               	btfsc	status,2,c
  2042  002868  EF38  F014         	goto	u8221
  2043  00286C  EF3A  F014         	goto	u8220
  2044  002870                     u8221:
  2045  002870  EF53  F014         	goto	l7406
  2046  002874                     u8220:
  2047  002874                     
  2048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2049  002874  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2050  002878  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2051  00287C  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  2052  002880  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  2053  002884  0E02               	movlw	2
  2054  002886  2644               	addwf	??_vfpfcnvrt^0,f,c
  2055  002888  0E00               	movlw	0
  2056  00288A  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2057  00288C  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2058  002890  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2059  002894                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2060  002894  6AF8               	clrf	tblptru,c
  2061  002896                     	endif
  2062  002896                     	if	0	;tblptru may be non-zero
  2063  002896                     	endif
  2064  002896  0008               	tblrd		*
  2065  002898  50F5               	movf	tablat,w,c
  2066  00289A  6E0B               	movwf	tolower@c^0,c
  2067  00289C  6A0C               	clrf	(tolower@c+1)^0,c
  2068  00289E  EC4A  F024         	call	_tolower	;wreg free
  2069  0028A2  500B               	movf	?_tolower^0,w,c
  2070  0028A4  6E52               	movwf	(vfpfcnvrt@ct+2)^0,c
  2071  0028A6                     l7406:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2074  0028A6  0E66               	movlw	102
  2075  0028A8  1850               	xorwf	vfpfcnvrt@ct^0,w,c
  2076  0028AA  A4D8               	btfss	status,2,c
  2077  0028AC  EF5A  F014         	goto	u8231
  2078  0028B0  EF5C  F014         	goto	u8230
  2079  0028B4                     u8231:
  2080  0028B4  EF9D  F014         	goto	l7418
  2081  0028B8                     u8230:
  2082  0028B8                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2084  0028B8  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2085  0028BC  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2086  0028C0  CFDE FFF6          	movff	postinc2,tblptrl
  2087  0028C4  CFDD FFF7          	movff	postdec2,tblptrh
  2088  0028C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2089  0028C8  6AF8               	clrf	tblptru,c
  2090  0028CA                     	endif
  2091  0028CA                     	if	0	;tblptru may be non-zero
  2092  0028CA                     	endif
  2093  0028CA  0008               	tblrd		*
  2094  0028CC  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  2095  0028D0                     
  2096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2097  0028D0  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  0028D4  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  0028D8  2ADE               	incf	postinc2,f,c
  2100  0028DA  0E00               	movlw	0
  2101  0028DC  22DD               	addwfc	postdec2,f,c
  2102  0028DE                     
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2104  0028DE  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2105  0028E2  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2106  0028E6  CFDF F044          	movff	indf2,??_vfpfcnvrt
  2107  0028EA  0E04               	movlw	4
  2108  0028EC  26DE               	addwf	postinc2,f,c
  2109  0028EE  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  2110  0028F2  0E00               	movlw	0
  2111  0028F4  22DD               	addwfc	postdec2,f,c
  2112  0028F6  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2113  0028FA  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2114  0028FE  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2115  002902  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2116  002906  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2117  00290A  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2118  00290E                     
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2120  00290E  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  2121  002912  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2122  002916  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  2123  00291A  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2124  00291E  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2125  002922  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2126  002926  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  2127  00292A  EC30  F008         	call	_efgtoa	;wreg free
  2128  00292E  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  2129  002932  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2130  002936  EF98  F015         	goto	l1559
  2131  00293A                     l7418:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2134  00293A  0E50               	movlw	low vfpfcnvrt@ct
  2135  00293C  6E05               	movwf	strncmp@_l^0,c
  2136  00293E  0E00               	movlw	high vfpfcnvrt@ct
  2137  002940  6E06               	movwf	(strncmp@_l+1)^0,c
  2138  002942  0E5B               	movlw	low STR_20
  2139  002944  6E07               	movwf	strncmp@_r^0,c
  2140  002946  0E10               	movlw	high STR_20
  2141  002948  6E08               	movwf	(strncmp@_r+1)^0,c
  2142  00294A  0E00               	movlw	0
  2143  00294C  6E0A               	movwf	(strncmp@n+1)^0,c
  2144  00294E  0E02               	movlw	2
  2145  002950  6E09               	movwf	strncmp@n^0,c
  2146  002952  EC6A  F01E         	call	_strncmp	;wreg free
  2147  002956  5005               	movf	?_strncmp^0,w,c
  2148  002958  1006               	iorwf	(?_strncmp+1)^0,w,c
  2149  00295A  A4D8               	btfss	status,2,c
  2150  00295C  EFB2  F014         	goto	u8241
  2151  002960  EFB4  F014         	goto	u8240
  2152  002964                     u8241:
  2153  002964  EF45  F015         	goto	l7434
  2154  002968                     u8240:
  2155  002968                     
  2156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2157  002968  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158  00296C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159  002970  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  2160  002974  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  2161  002978  0E01               	movlw	1
  2162  00297A  2644               	addwf	??_vfpfcnvrt^0,f,c
  2163  00297C  0E00               	movlw	0
  2164  00297E  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2165  002980  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2166  002984  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2167  002988                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2168  002988  6AF8               	clrf	tblptru,c
  2169  00298A                     	endif
  2170  00298A                     	if	0	;tblptru may be non-zero
  2171  00298A                     	endif
  2172  00298A  0008               	tblrd		*
  2173  00298C  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  2174  002990  0EBF               	movlw	191
  2175  002992  6E44               	movwf	??_vfpfcnvrt^0,c
  2176  002994  0EFF               	movlw	255
  2177  002996  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  2178  002998  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179  00299C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180  0029A0  CFDE FFF6          	movff	postinc2,tblptrl
  2181  0029A4  CFDD FFF7          	movff	postdec2,tblptrh
  2182  0029A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2183  0029A8  6AF8               	clrf	tblptru,c
  2184  0029AA                     	endif
  2185  0029AA                     	if	0	;tblptru may be non-zero
  2186  0029AA                     	endif
  2187  0029AA  0008               	tblrd		*
  2188  0029AC  50F5               	movf	tablat,w,c
  2189  0029AE  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  2190  0029B0  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  2191  0029B2  5044               	movf	??_vfpfcnvrt^0,w,c
  2192  0029B4  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2193  0029B6  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  2194  0029B8  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2195  0029BA  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  2196  0029BC  E10A               	bnz	u8250
  2197  0029BE  0E1A               	movlw	26
  2198  0029C0  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2199  0029C2  A0D8               	btfss	status,0,c
  2200  0029C4  EFE6  F014         	goto	u8251
  2201  0029C8  EFE9  F014         	goto	u8250
  2202  0029CC                     u8251:
  2203  0029CC  0E01               	movlw	1
  2204  0029CE  EFEA  F014         	goto	u8260
  2205  0029D2                     u8250:
  2206  0029D2  0E00               	movlw	0
  2207  0029D4                     u8260:
  2208  0029D4  6E4A               	movwf	_vfpfcnvrt$2139^0,c
  2209  0029D6  6A4B               	clrf	(_vfpfcnvrt$2139+1)^0,c
  2210  0029D8  504A               	movf	_vfpfcnvrt$2139^0,w,c
  2211  0029DA  104B               	iorwf	(_vfpfcnvrt$2139+1)^0,w,c
  2212  0029DC  B4D8               	btfsc	status,2,c
  2213  0029DE  EFF3  F014         	goto	u8271
  2214  0029E2  EFF5  F014         	goto	u8270
  2215  0029E6                     u8271:
  2216  0029E6  EF0F  F015         	goto	l7428
  2217  0029EA                     u8270:
  2218  0029EA                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2220  0029EA  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2221  0029EE  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2222  0029F2  CFDF F044          	movff	indf2,??_vfpfcnvrt
  2223  0029F6  0E04               	movlw	4
  2224  0029F8  26DE               	addwf	postinc2,f,c
  2225  0029FA  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  2226  0029FE  0E00               	movlw	0
  2227  002A00  22DD               	addwfc	postdec2,f,c
  2228  002A02  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2229  002A06  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2230  002A0A  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2231  002A0E  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2232  002A12  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2233  002A16  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2236  002A1A  EF27  F015         	goto	l1566
  2237  002A1E                     l7428:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2240  002A1E  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2241  002A22  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2242  002A26  CFDF F044          	movff	indf2,??_vfpfcnvrt
  2243  002A2A  0E04               	movlw	4
  2244  002A2C  26DE               	addwf	postinc2,f,c
  2245  002A2E  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  2246  002A32  0E00               	movlw	0
  2247  002A34  22DD               	addwfc	postdec2,f,c
  2248  002A36  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2249  002A3A  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2250  002A3E  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2251  002A42  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2252  002A46  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2253  002A4A  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2254  002A4E                     l1566:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2257  002A4E  0E02               	movlw	2
  2258  002A50  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  002A54  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  002A58  26DE               	addwf	postinc2,f,c
  2261  002A5A  0E00               	movlw	0
  2262  002A5C  22DD               	addwfc	postdec2,f,c
  2263  002A5E                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2265  002A5E  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  2266  002A62  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2267  002A66  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  2268  002A6A  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2269  002A6E  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2270  002A72  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2271  002A76  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  2272  002A7A  EC30  F008         	call	_efgtoa	;wreg free
  2273  002A7E  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  2274  002A82  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2275  002A86  EF98  F015         	goto	l1559
  2276  002A8A                     l7434:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2279  002A8A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2280  002A8E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2281  002A92  CFDE FFF6          	movff	postinc2,tblptrl
  2282  002A96  CFDD FFF7          	movff	postdec2,tblptrh
  2283  002A9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2284  002A9A  6AF8               	clrf	tblptru,c
  2285  002A9C                     	endif
  2286  002A9C                     	if	0	;tblptru may be non-zero
  2287  002A9C                     	endif
  2288  002A9C  0008               	tblrd		*
  2289  002A9E  50F5               	movf	tablat,w,c
  2290  002AA0  0A25               	xorlw	37
  2291  002AA2  A4D8               	btfss	status,2,c
  2292  002AA4  EF56  F015         	goto	u8281
  2293  002AA8  EF58  F015         	goto	u8280
  2294  002AAC                     u8281:
  2295  002AAC  EF6F  F015         	goto	l7444
  2296  002AB0                     u8280:
  2297  002AB0                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2299  002AB0  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2300  002AB4  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2301  002AB8  2ADE               	incf	postinc2,f,c
  2302  002ABA  0E00               	movlw	0
  2303  002ABC  22DD               	addwfc	postdec2,f,c
  2304  002ABE                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2306  002ABE  0E00               	movlw	0
  2307  002AC0  6E08               	movwf	(fputc@c+1)^0,c
  2308  002AC2  0E25               	movlw	37
  2309  002AC4  6E07               	movwf	fputc@c^0,c
  2310  002AC6  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2311  002ACA  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2312  002ACE  ECB6  F021         	call	_fputc	;wreg free
  2313  002AD2                     l7440:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2316  002AD2  0E00               	movlw	0
  2317  002AD4  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  2318  002AD6  0E01               	movlw	1
  2319  002AD8  6E3E               	movwf	?_vfpfcnvrt^0,c
  2320  002ADA  EF98  F015         	goto	l1559
  2321  002ADE                     l7444:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2324  002ADE  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2325  002AE2  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2326  002AE6  2ADE               	incf	postinc2,f,c
  2327  002AE8  0E00               	movlw	0
  2328  002AEA  22DD               	addwfc	postdec2,f,c
  2329  002AEC                     
  2330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2331  002AEC  0E00               	movlw	0
  2332  002AEE  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  2333  002AF0  0E00               	movlw	0
  2334  002AF2  6E3E               	movwf	?_vfpfcnvrt^0,c
  2335  002AF4  EF98  F015         	goto	l1559
  2336  002AF8                     l7450:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2339  002AF8  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2340  002AFC  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2341  002B00  CFDE FFF6          	movff	postinc2,tblptrl
  2342  002B04  CFDD FFF7          	movff	postdec2,tblptrh
  2343  002B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2344  002B08  6AF8               	clrf	tblptru,c
  2345  002B0A                     	endif
  2346  002B0A                     	if	0	;tblptru may be non-zero
  2347  002B0A                     	endif
  2348  002B0A  0008               	tblrd		*
  2349  002B0C  50F5               	movf	tablat,w,c
  2350  002B0E  6E07               	movwf	fputc@c^0,c
  2351  002B10  6A08               	clrf	(fputc@c+1)^0,c
  2352  002B12  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2353  002B16  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2354  002B1A  ECB6  F021         	call	_fputc	;wreg free
  2355  002B1E                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2357  002B1E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  002B22  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  002B26  2ADE               	incf	postinc2,f,c
  2360  002B28  0E00               	movlw	0
  2361  002B2A  22DD               	addwfc	postdec2,f,c
  2362  002B2C  EF69  F015         	goto	l7440
  2363  002B30                     l1559:
  2364  002B30  0012               	return		;funcret
  2365  002B32                     __end_of_vfpfcnvrt:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _strncmp *****************
  2369 ;; Defined at:
  2370 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2373 ;;		 -> vfpfcnvrt@ct(3), 
  2374 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2375 ;;		 -> STR_22(3), 
  2376 ;;  n               2    8[COMRAM] unsigned int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2379 ;;		 -> STR_22(3), 
  2380 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2381 ;;		 -> vfpfcnvrt@ct(3), 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2    4[COMRAM] int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2391 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;Total ram usage:       11 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 4
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_vfpfcnvrt
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text4
  2406  003CD4                     __ptext4:
  2407                           	callstack 0
  2408  003CD4                     _strncmp:
  2409                           	callstack 23
  2410  003CD4  C005  F00C         	movff	strncmp@_l,strncmp@l
  2411  003CD8  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2412  003CDC  C007  F00E         	movff	strncmp@_r,strncmp@r
  2413  003CE0  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2414  003CE4  0609               	decf	strncmp@n^0,f,c
  2415  003CE6  A0D8               	btfss	status,0,c
  2416  003CE8  060A               	decf	(strncmp@n+1)^0,f,c
  2417  003CEA  2809               	incf	strncmp@n^0,w,c
  2418  003CEC  E106               	bnz	u8101
  2419  003CEE  280A               	incf	(strncmp@n+1)^0,w,c
  2420  003CF0  A4D8               	btfss	status,2,c
  2421  003CF2  EF7D  F01E         	goto	u8101
  2422  003CF6  EF7F  F01E         	goto	u8100
  2423  003CFA                     u8101:
  2424  003CFA  EF8C  F01E         	goto	l7356
  2425  003CFE                     u8100:
  2426  003CFE  0E00               	movlw	0
  2427  003D00  6E06               	movwf	(?_strncmp+1)^0,c
  2428  003D02  0E00               	movlw	0
  2429  003D04  6E05               	movwf	?_strncmp^0,c
  2430  003D06  EFD7  F01E         	goto	l1684
  2431  003D0A                     l7354:
  2432  003D0A  4A0C               	infsnz	strncmp@l^0,f,c
  2433  003D0C  2A0D               	incf	(strncmp@l+1)^0,f,c
  2434  003D0E  4A0E               	infsnz	strncmp@r^0,f,c
  2435  003D10  2A0F               	incf	(strncmp@r+1)^0,f,c
  2436  003D12  0609               	decf	strncmp@n^0,f,c
  2437  003D14  A0D8               	btfss	status,0,c
  2438  003D16  060A               	decf	(strncmp@n+1)^0,f,c
  2439  003D18                     l7356:
  2440  003D18  C00C  FFD9         	movff	strncmp@l,fsr2l
  2441  003D1C  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2442  003D20  50DF               	movf	indf2,w,c
  2443  003D22  B4D8               	btfsc	status,2,c
  2444  003D24  EF96  F01E         	goto	u8111
  2445  003D28  EF98  F01E         	goto	u8110
  2446  003D2C                     u8111:
  2447  003D2C  EFC5  F01E         	goto	l7364
  2448  003D30                     u8110:
  2449  003D30  C00E  FFF6         	movff	strncmp@r,tblptrl
  2450  003D34  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2451  003D38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2452  003D38  6AF8               	clrf	tblptru,c
  2453  003D3A                     	endif
  2454  003D3A                     	if	0	;tblptru may be non-zero
  2455  003D3A                     	endif
  2456  003D3A  0008               	tblrd		*
  2457  003D3C  50F5               	movf	tablat,w,c
  2458  003D3E  0900               	iorlw	0
  2459  003D40  B4D8               	btfsc	status,2,c
  2460  003D42  EFA5  F01E         	goto	u8121
  2461  003D46  EFA7  F01E         	goto	u8120
  2462  003D4A                     u8121:
  2463  003D4A  EFC5  F01E         	goto	l7364
  2464  003D4E                     u8120:
  2465  003D4E  5009               	movf	strncmp@n^0,w,c
  2466  003D50  100A               	iorwf	(strncmp@n+1)^0,w,c
  2467  003D52  B4D8               	btfsc	status,2,c
  2468  003D54  EFAE  F01E         	goto	u8131
  2469  003D58  EFB0  F01E         	goto	u8130
  2470  003D5C                     u8131:
  2471  003D5C  EFC5  F01E         	goto	l7364
  2472  003D60                     u8130:
  2473  003D60  C00C  FFD9         	movff	strncmp@l,fsr2l
  2474  003D64  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2475  003D68  50DF               	movf	indf2,w,c
  2476  003D6A  6E0B               	movwf	??_strncmp^0,c
  2477  003D6C  C00E  FFF6         	movff	strncmp@r,tblptrl
  2478  003D70  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2479  003D74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2480  003D74  6AF8               	clrf	tblptru,c
  2481  003D76                     	endif
  2482  003D76                     	if	0	;tblptru may be non-zero
  2483  003D76                     	endif
  2484  003D76  0008               	tblrd		*
  2485  003D78  50F5               	movf	tablat,w,c
  2486  003D7A  180B               	xorwf	??_strncmp^0,w,c
  2487  003D7C  B4D8               	btfsc	status,2,c
  2488  003D7E  EFC3  F01E         	goto	u8141
  2489  003D82  EFC5  F01E         	goto	u8140
  2490  003D86                     u8141:
  2491  003D86  EF85  F01E         	goto	l7354
  2492  003D8A                     u8140:
  2493  003D8A                     l7364:
  2494  003D8A  C00C  FFD9         	movff	strncmp@l,fsr2l
  2495  003D8E  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2496  003D92  50DF               	movf	indf2,w,c
  2497  003D94  6E0B               	movwf	??_strncmp^0,c
  2498  003D96  C00E  FFF6         	movff	strncmp@r,tblptrl
  2499  003D9A  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2500  003D9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2501  003D9E  6AF8               	clrf	tblptru,c
  2502  003DA0                     	endif
  2503  003DA0                     	if	0	;tblptru may be non-zero
  2504  003DA0                     	endif
  2505  003DA0  0008               	tblrd		*
  2506  003DA2  50F5               	movf	tablat,w,c
  2507  003DA4  5C0B               	subwf	??_strncmp^0,w,c
  2508  003DA6  6E05               	movwf	?_strncmp^0,c
  2509  003DA8  6A06               	clrf	(?_strncmp+1)^0,c
  2510  003DAA  A0D8               	btfss	status,0,c
  2511  003DAC  0606               	decf	(?_strncmp+1)^0,f,c
  2512  003DAE                     l1684:
  2513  003DAE  0012               	return		;funcret
  2514  003DB0                     __end_of_strncmp:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _efgtoa *****************
  2518 ;; Defined at:
  2519 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  2522 ;;		 -> NULL(0), 
  2523 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  2524 ;;  c               1   55[COMRAM] unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  u               4   52[BANK0 ] unsigned char 
  2527 ;;  g               4   44[BANK0 ] unsigned char 
  2528 ;;  l               4   38[BANK0 ] unsigned char 
  2529 ;;  h               4   34[BANK0 ] unsigned char 
  2530 ;;  ou              4   20[BANK0 ] unsigned char 
  2531 ;;  n               2   50[BANK0 ] int 
  2532 ;;  e               2   48[BANK0 ] int 
  2533 ;;  i               2   42[BANK0 ] int 
  2534 ;;  w               2   30[BANK0 ] int 
  2535 ;;  p               2   28[BANK0 ] int 
  2536 ;;  sign            2   26[BANK0 ] int 
  2537 ;;  d               2   24[BANK0 ] int 
  2538 ;;  m               2   18[BANK0 ] int 
  2539 ;;  ne              2   16[BANK0 ] int 
  2540 ;;  pp              2   14[BANK0 ] int 
  2541 ;;  t               2   12[BANK0 ] int 
  2542 ;;  mode            1   33[BANK0 ] unsigned char 
  2543 ;;  nmode           1   32[BANK0 ] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   49[COMRAM] int 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:       68 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 9
  2560 ;; This function calls:
  2561 ;;		___awdiv
  2562 ;;		___awmod
  2563 ;;		___fladd
  2564 ;;		___fldiv
  2565 ;;		___fleq
  2566 ;;		___flge
  2567 ;;		___flmul
  2568 ;;		___flneg
  2569 ;;		___flsub
  2570 ;;		___fltol
  2571 ;;		___fpclassifyf
  2572 ;;		_floorf
  2573 ;;		_isupper
  2574 ;;		_pad
  2575 ;;		_strcpy
  2576 ;;		_tolower
  2577 ;; This function is called by:
  2578 ;;		_vfpfcnvrt
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text5
  2583  001060                     __ptext5:
  2584                           	callstack 0
  2585  001060                     _efgtoa:
  2586                           	callstack 18
  2587  001060                     
  2588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2589  001060  0E00               	movlw	0
  2590  001062  0100               	movlb	0	; () banked
  2591  001064  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2592  001066  0E00               	movlw	0
  2593  001068  6F7A               	movwf	efgtoa@sign& (0+255),b
  2594  00106A                     
  2595                           ; BSR set to: 0
  2596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2597  00106A  C034  F08C         	movff	efgtoa@f,efgtoa@g
  2598  00106E  C035  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2599  001072  C036  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2600  001076  C037  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2601  00107A                     
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2604  00107A  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2605  00107C  EF44  F008         	goto	u7490
  2606  001080  EF42  F008         	goto	u7491
  2607  001084                     u7491:
  2608  001084  EF5A  F008         	goto	l7008
  2609  001088                     u7490:
  2610  001088                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2613  001088  0E00               	movlw	0
  2614  00108A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2615  00108C  0E01               	movlw	1
  2616  00108E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2617  001090                     
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2620  001090  C08C  F005         	movff	efgtoa@g,___flneg@f1
  2621  001094  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2622  001098  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2623  00109C  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2624  0010A0  ECEC  F025         	call	___flneg	;wreg free
  2625  0010A4  C005  F08C         	movff	?___flneg,efgtoa@g
  2626  0010A8  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  2627  0010AC  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  2628  0010B0  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  2629  0010B4                     l7008:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2632  0010B4  0E00               	movlw	0
  2633  0010B6  0100               	movlb	0	; () banked
  2634  0010B8  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2635  0010BA  0E00               	movlw	0
  2636  0010BC  6F92               	movwf	efgtoa@n& (0+255),b
  2637  0010BE                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2640  0010BE  C0F1  F07E         	movff	_width,efgtoa@w
  2641  0010C2  C0F2  F07F         	movff	_width+1,efgtoa@w+1
  2642  0010C6                     
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2645  0010C6  517A               	movf	efgtoa@sign& (0+255),w,b
  2646  0010C8  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2647  0010CA  A4D8               	btfss	status,2,c
  2648  0010CC  EF6A  F008         	goto	u7501
  2649  0010D0  EF6C  F008         	goto	u7500
  2650  0010D4                     u7501:
  2651  0010D4  EF73  F008         	goto	l7016
  2652  0010D8                     u7500:
  2653  0010D8                     
  2654                           ; BSR set to: 0
  2655  0010D8  A5F5               	btfss	_flags& (0+255),2,b
  2656  0010DA  EF71  F008         	goto	u7511
  2657  0010DE  EF73  F008         	goto	u7510
  2658  0010E2                     u7511:
  2659  0010E2  EF8D  F008         	goto	l7028
  2660  0010E6                     u7510:
  2661  0010E6                     l7016:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2665  0010E6  517A               	movf	efgtoa@sign& (0+255),w,b
  2666  0010E8  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2667  0010EA  A4D8               	btfss	status,2,c
  2668  0010EC  EF7A  F008         	goto	u7521
  2669  0010F0  EF7C  F008         	goto	u7520
  2670  0010F4                     u7521:
  2671  0010F4  EF82  F008         	goto	l7020
  2672  0010F8                     u7520:
  2673  0010F8                     
  2674                           ; BSR set to: 0
  2675  0010F8  0E00               	movlw	0
  2676  0010FA  6F61               	movwf	(_efgtoa$2109+1)& (0+255),b
  2677  0010FC  0E2B               	movlw	43
  2678  0010FE  6F60               	movwf	_efgtoa$2109& (0+255),b
  2679  001100  EF86  F008         	goto	l7022
  2680  001104                     l7020:
  2681                           
  2682                           ; BSR set to: 0
  2683  001104  0E00               	movlw	0
  2684  001106  6F61               	movwf	(_efgtoa$2109+1)& (0+255),b
  2685  001108  0E2D               	movlw	45
  2686  00110A  6F60               	movwf	_efgtoa$2109& (0+255),b
  2687  00110C                     l7022:
  2688                           
  2689                           ; BSR set to: 0
  2690  00110C  C060  F118         	movff	_efgtoa$2109,_dbuf
  2691  001110                     
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2694  001110  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2695  001112  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2696  001114                     
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2699  001114  077E               	decf	efgtoa@w& (0+255),f,b
  2700  001116  A0D8               	btfss	status,0,c
  2701  001118  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2702  00111A                     l7028:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2706  00111A  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2707  00111E  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2708  001122  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2709  001126  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2710  00112A  ECEB  F01D         	call	___fpclassifyf	;wreg free
  2711  00112E  0405               	decf	?___fpclassifyf^0,w,c
  2712  001130  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2713  001132  A4D8               	btfss	status,2,c
  2714  001134  EF9E  F008         	goto	u7531
  2715  001138  EFA0  F008         	goto	u7530
  2716  00113C                     u7531:
  2717  00113C  EFF7  F008         	goto	l7046
  2718  001140                     u7530:
  2719  001140  0EBF               	movlw	191
  2720  001142  6E39               	movwf	??_efgtoa^0,c
  2721  001144  0EFF               	movlw	255
  2722  001146  6E3A               	movwf	(??_efgtoa+1)^0,c
  2723  001148  5038               	movf	efgtoa@c^0,w,c
  2724  00114A  6E3B               	movwf	(??_efgtoa+2)^0,c
  2725  00114C  6A3C               	clrf	(??_efgtoa+3)^0,c
  2726  00114E  5039               	movf	??_efgtoa^0,w,c
  2727  001150  263B               	addwf	(??_efgtoa+2)^0,f,c
  2728  001152  503A               	movf	(??_efgtoa+1)^0,w,c
  2729  001154  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2730  001156  503C               	movf	(??_efgtoa+3)^0,w,c
  2731  001158  E10A               	bnz	u7540
  2732  00115A  0E1A               	movlw	26
  2733  00115C  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2734  00115E  A0D8               	btfss	status,0,c
  2735  001160  EFB4  F008         	goto	u7541
  2736  001164  EFB7  F008         	goto	u7540
  2737  001168                     u7541:
  2738  001168  0E01               	movlw	1
  2739  00116A  EFB8  F008         	goto	u7550
  2740  00116E                     u7540:
  2741  00116E  0E00               	movlw	0
  2742  001170                     u7550:
  2743  001170  0100               	movlb	0	; () banked
  2744  001172  6F62               	movwf	_efgtoa$2110& (0+255),b
  2745  001174  6B63               	clrf	(_efgtoa$2110+1)& (0+255),b
  2746  001176                     
  2747                           ; BSR set to: 0
  2748  001176  5162               	movf	_efgtoa$2110& (0+255),w,b
  2749  001178  1163               	iorwf	(_efgtoa$2110+1)& (0+255),w,b
  2750  00117A  B4D8               	btfsc	status,2,c
  2751  00117C  EFC2  F008         	goto	u7561
  2752  001180  EFC4  F008         	goto	u7560
  2753  001184                     u7561:
  2754  001184  EFD2  F008         	goto	l7038
  2755  001188                     u7560:
  2756  001188                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2759  001188  0E18               	movlw	low _dbuf
  2760  00118A  2592               	addwf	efgtoa@n& (0+255),w,b
  2761  00118C  6E05               	movwf	strcpy@dest^0,c
  2762  00118E  0E01               	movlw	high _dbuf
  2763  001190  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2764  001192  6E06               	movwf	(strcpy@dest+1)^0,c
  2765  001194  0E4B               	movlw	low STR_12
  2766  001196  6E07               	movwf	strcpy@src^0,c
  2767  001198  0E10               	movlw	high STR_12
  2768  00119A  6E08               	movwf	(strcpy@src+1)^0,c
  2769  00119C  EC7A  F024         	call	_strcpy	;wreg free
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2772  0011A0  EFDE  F008         	goto	l7040
  2773  0011A4                     l7038:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2777  0011A4  0E18               	movlw	low _dbuf
  2778  0011A6  2592               	addwf	efgtoa@n& (0+255),w,b
  2779  0011A8  6E05               	movwf	strcpy@dest^0,c
  2780  0011AA  0E01               	movlw	high _dbuf
  2781  0011AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2782  0011AE  6E06               	movwf	(strcpy@dest+1)^0,c
  2783  0011B0  0E53               	movlw	low STR_13
  2784  0011B2  6E07               	movwf	strcpy@src^0,c
  2785  0011B4  0E10               	movlw	high STR_13
  2786  0011B6  6E08               	movwf	(strcpy@src+1)^0,c
  2787  0011B8  EC7A  F024         	call	_strcpy	;wreg free
  2788  0011BC                     l7040:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2791  0011BC  0100               	movlb	0	; () banked
  2792  0011BE  0EFD               	movlw	253
  2793  0011C0  277E               	addwf	efgtoa@w& (0+255),f,b
  2794  0011C2  0EFF               	movlw	255
  2795  0011C4  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2796  0011C6                     
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2799  0011C6  C032  F017         	movff	efgtoa@fp,pad@fp
  2800  0011CA  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2801  0011CE  0E18               	movlw	low _dbuf
  2802  0011D0  6E19               	movwf	pad@buf^0,c
  2803  0011D2  0E01               	movlw	high _dbuf
  2804  0011D4  6E1A               	movwf	(pad@buf+1)^0,c
  2805  0011D6  C07E  F01B         	movff	efgtoa@w,pad@p
  2806  0011DA  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  2807  0011DE  ECD8  F01E         	call	_pad	;wreg free
  2808  0011E2  C017  F032         	movff	?_pad,?_efgtoa
  2809  0011E6  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2810  0011EA  EF82  F00E         	goto	l1467
  2811  0011EE                     l7046:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2814  0011EE  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2815  0011F2  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2816  0011F6  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2817  0011FA  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2818  0011FE  ECEB  F01D         	call	___fpclassifyf	;wreg free
  2819  001202  5005               	movf	?___fpclassifyf^0,w,c
  2820  001204  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2821  001206  A4D8               	btfss	status,2,c
  2822  001208  EF08  F009         	goto	u7571
  2823  00120C  EF0A  F009         	goto	u7570
  2824  001210                     u7571:
  2825  001210  EF61  F009         	goto	l7064
  2826  001214                     u7570:
  2827  001214  0EBF               	movlw	191
  2828  001216  6E39               	movwf	??_efgtoa^0,c
  2829  001218  0EFF               	movlw	255
  2830  00121A  6E3A               	movwf	(??_efgtoa+1)^0,c
  2831  00121C  5038               	movf	efgtoa@c^0,w,c
  2832  00121E  6E3B               	movwf	(??_efgtoa+2)^0,c
  2833  001220  6A3C               	clrf	(??_efgtoa+3)^0,c
  2834  001222  5039               	movf	??_efgtoa^0,w,c
  2835  001224  263B               	addwf	(??_efgtoa+2)^0,f,c
  2836  001226  503A               	movf	(??_efgtoa+1)^0,w,c
  2837  001228  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2838  00122A  503C               	movf	(??_efgtoa+3)^0,w,c
  2839  00122C  E10A               	bnz	u7580
  2840  00122E  0E1A               	movlw	26
  2841  001230  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2842  001232  A0D8               	btfss	status,0,c
  2843  001234  EF1E  F009         	goto	u7581
  2844  001238  EF21  F009         	goto	u7580
  2845  00123C                     u7581:
  2846  00123C  0E01               	movlw	1
  2847  00123E  EF22  F009         	goto	u7590
  2848  001242                     u7580:
  2849  001242  0E00               	movlw	0
  2850  001244                     u7590:
  2851  001244  0100               	movlb	0	; () banked
  2852  001246  6F64               	movwf	_efgtoa$2115& (0+255),b
  2853  001248  6B65               	clrf	(_efgtoa$2115+1)& (0+255),b
  2854  00124A                     
  2855                           ; BSR set to: 0
  2856  00124A  5164               	movf	_efgtoa$2115& (0+255),w,b
  2857  00124C  1165               	iorwf	(_efgtoa$2115+1)& (0+255),w,b
  2858  00124E  B4D8               	btfsc	status,2,c
  2859  001250  EF2C  F009         	goto	u7601
  2860  001254  EF2E  F009         	goto	u7600
  2861  001258                     u7601:
  2862  001258  EF3C  F009         	goto	l7056
  2863  00125C                     u7600:
  2864  00125C                     
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2867  00125C  0E18               	movlw	low _dbuf
  2868  00125E  2592               	addwf	efgtoa@n& (0+255),w,b
  2869  001260  6E05               	movwf	strcpy@dest^0,c
  2870  001262  0E01               	movlw	high _dbuf
  2871  001264  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2872  001266  6E06               	movwf	(strcpy@dest+1)^0,c
  2873  001268  0E4F               	movlw	low STR_16
  2874  00126A  6E07               	movwf	strcpy@src^0,c
  2875  00126C  0E10               	movlw	high STR_16
  2876  00126E  6E08               	movwf	(strcpy@src+1)^0,c
  2877  001270  EC7A  F024         	call	_strcpy	;wreg free
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2880  001274  EF48  F009         	goto	l7058
  2881  001278                     l7056:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2885  001278  0E18               	movlw	low _dbuf
  2886  00127A  2592               	addwf	efgtoa@n& (0+255),w,b
  2887  00127C  6E05               	movwf	strcpy@dest^0,c
  2888  00127E  0E01               	movlw	high _dbuf
  2889  001280  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2890  001282  6E06               	movwf	(strcpy@dest+1)^0,c
  2891  001284  0E57               	movlw	low STR_17
  2892  001286  6E07               	movwf	strcpy@src^0,c
  2893  001288  0E10               	movlw	high STR_17
  2894  00128A  6E08               	movwf	(strcpy@src+1)^0,c
  2895  00128C  EC7A  F024         	call	_strcpy	;wreg free
  2896  001290                     l7058:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2899  001290  0100               	movlb	0	; () banked
  2900  001292  0EFD               	movlw	253
  2901  001294  277E               	addwf	efgtoa@w& (0+255),f,b
  2902  001296  0EFF               	movlw	255
  2903  001298  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2904  00129A                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2907  00129A  C032  F017         	movff	efgtoa@fp,pad@fp
  2908  00129E  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2909  0012A2  0E18               	movlw	low _dbuf
  2910  0012A4  6E19               	movwf	pad@buf^0,c
  2911  0012A6  0E01               	movlw	high _dbuf
  2912  0012A8  6E1A               	movwf	(pad@buf+1)^0,c
  2913  0012AA  C07E  F01B         	movff	efgtoa@w,pad@p
  2914  0012AE  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  2915  0012B2  ECD8  F01E         	call	_pad	;wreg free
  2916  0012B6  C017  F032         	movff	?_pad,?_efgtoa
  2917  0012BA  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2918  0012BE  EF82  F00E         	goto	l1467
  2919  0012C2                     l7064:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2922  0012C2  0E00               	movlw	0
  2923  0012C4  0100               	movlb	0	; () banked
  2924  0012C6  6F94               	movwf	efgtoa@u& (0+255),b
  2925  0012C8  0E00               	movlw	0
  2926  0012CA  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2927  0012CC  0E80               	movlw	128
  2928  0012CE  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2929  0012D0  0E3F               	movlw	63
  2930  0012D2  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2933  0012D4  0E00               	movlw	0
  2934  0012D6  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2935  0012D8  0E00               	movlw	0
  2936  0012DA  6F90               	movwf	efgtoa@e& (0+255),b
  2937  0012DC                     
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2940  0012DC  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  2941  0012E0  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2942  0012E4  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2943  0012E8  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2944  0012EC  0E00               	movlw	0
  2945  0012EE  6E09               	movwf	___fleq@ff2^0,c
  2946  0012F0  0E00               	movlw	0
  2947  0012F2  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2948  0012F4  0E00               	movlw	0
  2949  0012F6  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2950  0012F8  0E00               	movlw	0
  2951  0012FA  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2952  0012FC  EC0E  F021         	call	___fleq	;wreg free
  2953  001300  B0D8               	btfsc	status,0,c
  2954  001302  EF85  F009         	goto	u7611
  2955  001306  EF87  F009         	goto	u7610
  2956  00130A                     u7611:
  2957  00130A  EF0A  F00A         	goto	l7082
  2958  00130E                     u7610:
  2959  00130E  EFA6  F009         	goto	l7074
  2960  001312                     l7070:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2963  001312  C094  F005         	movff	efgtoa@u,___flmul@b
  2964  001316  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  2965  00131A  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  2966  00131E  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  2967  001322  0E00               	movlw	0
  2968  001324  6E09               	movwf	___flmul@a^0,c
  2969  001326  0E00               	movlw	0
  2970  001328  6E0A               	movwf	(___flmul@a+1)^0,c
  2971  00132A  0E20               	movlw	32
  2972  00132C  6E0B               	movwf	(___flmul@a+2)^0,c
  2973  00132E  0E41               	movlw	65
  2974  001330  6E0C               	movwf	(___flmul@a+3)^0,c
  2975  001332  EC99  F015         	call	___flmul	;wreg free
  2976  001336  C005  F094         	movff	?___flmul,efgtoa@u
  2977  00133A  C006  F095         	movff	?___flmul+1,efgtoa@u+1
  2978  00133E  C007  F096         	movff	?___flmul+2,efgtoa@u+2
  2979  001342  C008  F097         	movff	?___flmul+3,efgtoa@u+3
  2980  001346                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2982  001346  0100               	movlb	0	; () banked
  2983  001348  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2984  00134A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2985  00134C                     l7074:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2988  00134C  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  2989  001350  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2990  001354  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2991  001358  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2992  00135C  0E00               	movlw	0
  2993  00135E  6E09               	movwf	___flmul@a^0,c
  2994  001360  0E00               	movlw	0
  2995  001362  6E0A               	movwf	(___flmul@a+1)^0,c
  2996  001364  0E20               	movlw	32
  2997  001366  6E0B               	movwf	(___flmul@a+2)^0,c
  2998  001368  0E41               	movlw	65
  2999  00136A  6E0C               	movwf	(___flmul@a+3)^0,c
  3000  00136C  C094  F005         	movff	efgtoa@u,___flmul@b
  3001  001370  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  3002  001374  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  3003  001378  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  3004  00137C  EC99  F015         	call	___flmul	;wreg free
  3005  001380  C005  F022         	movff	?___flmul,___flge@ff2
  3006  001384  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3007  001388  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3008  00138C  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3009  001390  EC69  F01D         	call	___flge	;wreg free
  3010  001394  B0D8               	btfsc	status,0,c
  3011  001396  EFCF  F009         	goto	u7621
  3012  00139A  EFD1  F009         	goto	u7620
  3013  00139E                     u7621:
  3014  00139E  EF89  F009         	goto	l7070
  3015  0013A2                     u7620:
  3016  0013A2  EFF1  F009         	goto	l7080
  3017  0013A6                     l7076:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3020  0013A6  C094  F005         	movff	efgtoa@u,___fldiv@b
  3021  0013AA  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3022  0013AE  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3023  0013B2  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3024  0013B6  0E00               	movlw	0
  3025  0013B8  6E09               	movwf	___fldiv@a^0,c
  3026  0013BA  0E00               	movlw	0
  3027  0013BC  6E0A               	movwf	(___fldiv@a+1)^0,c
  3028  0013BE  0E20               	movlw	32
  3029  0013C0  6E0B               	movwf	(___fldiv@a+2)^0,c
  3030  0013C2  0E41               	movlw	65
  3031  0013C4  6E0C               	movwf	(___fldiv@a+3)^0,c
  3032  0013C6  ECAE  F017         	call	___fldiv	;wreg free
  3033  0013CA  C005  F094         	movff	?___fldiv,efgtoa@u
  3034  0013CE  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3035  0013D2  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3036  0013D6  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3037  0013DA                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3039  0013DA  0100               	movlb	0	; () banked
  3040  0013DC  0790               	decf	efgtoa@e& (0+255),f,b
  3041  0013DE  A0D8               	btfss	status,0,c
  3042  0013E0  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3043  0013E2                     l7080:
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3046  0013E2  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  3047  0013E6  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3048  0013EA  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3049  0013EE  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3050  0013F2  C094  F022         	movff	efgtoa@u,___flge@ff2
  3051  0013F6  C095  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3052  0013FA  C096  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3053  0013FE  C097  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3054  001402  EC69  F01D         	call	___flge	;wreg free
  3055  001406  A0D8               	btfss	status,0,c
  3056  001408  EF08  F00A         	goto	u7631
  3057  00140C  EF0A  F00A         	goto	u7630
  3058  001410                     u7631:
  3059  001410  EFD3  F009         	goto	l7076
  3060  001414                     u7630:
  3061  001414                     l7082:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3064  001414  C038  F00B         	movff	efgtoa@c,tolower@c
  3065  001418  6A0C               	clrf	(tolower@c+1)^0,c
  3066  00141A  EC4A  F024         	call	_tolower	;wreg free
  3067  00141E  500B               	movf	?_tolower^0,w,c
  3068  001420  0100               	movlb	0	; () banked
  3069  001422  6F81               	movwf	efgtoa@mode& (0+255),b
  3070  001424                     
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3073  001424  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3074  001428                     
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3077  001428  0E67               	movlw	103
  3078  00142A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3079  00142C  A4D8               	btfss	status,2,c
  3080  00142E  EF1B  F00A         	goto	u7641
  3081  001432  EF1D  F00A         	goto	u7640
  3082  001436                     u7641:
  3083  001436  EF43  F00A         	goto	l7096
  3084  00143A                     u7640:
  3085  00143A                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3088  00143A  51F3               	movf	_prec& (0+255),w,b
  3089  00143C  11F4               	iorwf	(_prec+1)& (0+255),w,b
  3090  00143E  A4D8               	btfss	status,2,c
  3091  001440  EF24  F00A         	goto	u7651
  3092  001444  EF26  F00A         	goto	u7650
  3093  001448                     u7651:
  3094  001448  EF2A  F00A         	goto	l7092
  3095  00144C                     u7650:
  3096  00144C                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3099  00144C  0E00               	movlw	0
  3100  00144E  6FF4               	movwf	(_prec+1)& (0+255),b
  3101  001450  0E01               	movlw	1
  3102  001452  6FF3               	movwf	_prec& (0+255),b
  3103  001454                     l7092:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3107  001454  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  3108  001456  EF37  F00A         	goto	u7660
  3109  00145A  51F4               	movf	(_prec+1)& (0+255),w,b
  3110  00145C  E106               	bnz	u7661
  3111  00145E  05F3               	decf	_prec& (0+255),w,b
  3112  001460  B0D8               	btfsc	status,0,c
  3113  001462  EF35  F00A         	goto	u7661
  3114  001466  EF37  F00A         	goto	u7660
  3115  00146A                     u7661:
  3116  00146A  EF3D  F00A         	goto	l1485
  3117  00146E                     u7660:
  3118  00146E                     l7094:
  3119                           
  3120                           ; BSR set to: 0
  3121  00146E  0E00               	movlw	0
  3122  001470  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3123  001472  0E06               	movlw	6
  3124  001474  6F7C               	movwf	efgtoa@p& (0+255),b
  3125  001476  EF4C  F00A         	goto	l7102
  3126  00147A                     l1485:
  3127                           
  3128                           ; BSR set to: 0
  3129  00147A  C0F3  F07C         	movff	_prec,efgtoa@p
  3130  00147E  C0F4  F07D         	movff	_prec+1,efgtoa@p+1
  3131  001482  EF4C  F00A         	goto	l7102
  3132  001486                     l7096:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3136  001486  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  3137  001488  EF48  F00A         	goto	u7671
  3138  00148C  EF4A  F00A         	goto	u7670
  3139  001490                     u7671:
  3140  001490  EF37  F00A         	goto	l7094
  3141  001494                     u7670:
  3142  001494  EF3D  F00A         	goto	l1485
  3143  001498                     l7102:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3147  001498  0E67               	movlw	103
  3148  00149A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3149  00149C  A4D8               	btfss	status,2,c
  3150  00149E  EF53  F00A         	goto	u7681
  3151  0014A2  EF55  F00A         	goto	u7680
  3152  0014A6                     u7681:
  3153  0014A6  EF84  F00A         	goto	l7112
  3154  0014AA                     u7680:
  3155  0014AA                     
  3156                           ; BSR set to: 0
  3157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3158  0014AA  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3159  0014AC  EF63  F00A         	goto	u7690
  3160  0014B0  0EFC               	movlw	252
  3161  0014B2  5D90               	subwf	efgtoa@e& (0+255),w,b
  3162  0014B4  0EFF               	movlw	255
  3163  0014B6  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3164  0014B8  A0D8               	btfss	status,0,c
  3165  0014BA  EF61  F00A         	goto	u7691
  3166  0014BE  EF63  F00A         	goto	u7690
  3167  0014C2                     u7691:
  3168  0014C2  EF82  F00A         	goto	l7110
  3169  0014C6                     u7690:
  3170  0014C6                     
  3171                           ; BSR set to: 0
  3172  0014C6  0EFF               	movlw	255
  3173  0014C8  6E39               	movwf	??_efgtoa^0,c
  3174  0014CA  0EFF               	movlw	255
  3175  0014CC  6E3A               	movwf	(??_efgtoa+1)^0,c
  3176  0014CE  C07C  F03B         	movff	efgtoa@p,??_efgtoa+2
  3177  0014D2  C07D  F03C         	movff	efgtoa@p+1,??_efgtoa+3
  3178  0014D6  5039               	movf	??_efgtoa^0,w,c
  3179  0014D8  263B               	addwf	(??_efgtoa+2)^0,f,c
  3180  0014DA  503A               	movf	(??_efgtoa+1)^0,w,c
  3181  0014DC  223C               	addwfc	(??_efgtoa+3)^0,f,c
  3182  0014DE  5190               	movf	efgtoa@e& (0+255),w,b
  3183  0014E0  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  3184  0014E2  503C               	movf	(??_efgtoa+3)^0,w,c
  3185  0014E4  0A80               	xorlw	128
  3186  0014E6  6E3D               	movwf	(??_efgtoa+4)^0,c
  3187  0014E8  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3188  0014EA  0A80               	xorlw	128
  3189  0014EC  583D               	subwfb	(??_efgtoa+4)^0,w,c
  3190  0014EE  A0D8               	btfss	status,0,c
  3191  0014F0  EF7C  F00A         	goto	u7701
  3192  0014F4  EF7E  F00A         	goto	u7700
  3193  0014F8                     u7701:
  3194  0014F8  EF82  F00A         	goto	l7110
  3195  0014FC                     u7700:
  3196  0014FC                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3199  0014FC  0E66               	movlw	102
  3200  0014FE  6F80               	movwf	efgtoa@nmode& (0+255),b
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3203  001500  EF84  F00A         	goto	l7112
  3204  001504                     l7110:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3208  001504  0E65               	movlw	101
  3209  001506  6F80               	movwf	efgtoa@nmode& (0+255),b
  3210  001508                     l7112:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3214  001508  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3215  00150C  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3216  001510                     
  3217                           ; BSR set to: 0
  3218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3219  001510  0E67               	movlw	103
  3220  001512  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3221  001514  A4D8               	btfss	status,2,c
  3222  001516  EF8F  F00A         	goto	u7711
  3223  00151A  EF91  F00A         	goto	u7710
  3224  00151E                     u7711:
  3225  00151E  EFA1  F00A         	goto	l7120
  3226  001522                     u7710:
  3227  001522                     
  3228                           ; BSR set to: 0
  3229  001522  0E66               	movlw	102
  3230  001524  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3231  001526  A4D8               	btfss	status,2,c
  3232  001528  EF98  F00A         	goto	u7721
  3233  00152C  EF9A  F00A         	goto	u7720
  3234  001530                     u7721:
  3235  001530  EFA3  F00A         	goto	l7122
  3236  001534                     u7720:
  3237  001534                     
  3238                           ; BSR set to: 0
  3239  001534  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3240  001536  EFA1  F00A         	goto	u7730
  3241  00153A  EF9F  F00A         	goto	u7731
  3242  00153E                     u7731:
  3243  00153E  EFA3  F00A         	goto	l7122
  3244  001542                     u7730:
  3245  001542                     l7120:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3249  001542  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3250  001544  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3251  001546                     l7122:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3255  001546  0E66               	movlw	102
  3256  001548  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3257  00154A  A4D8               	btfss	status,2,c
  3258  00154C  EFAA  F00A         	goto	u7741
  3259  001550  EFAC  F00A         	goto	u7740
  3260  001554                     u7741:
  3261  001554  EFCC  F00A         	goto	l7132
  3262  001558                     u7740:
  3263  001558                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3266  001558  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3267  00155A  EFB3  F00A         	goto	u7750
  3268  00155E  EFB1  F00A         	goto	u7751
  3269  001562                     u7751:
  3270  001562  EFBF  F00A         	goto	l7128
  3271  001566                     u7750:
  3272  001566                     
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3275  001566  0E00               	movlw	0
  3276  001568  6F94               	movwf	efgtoa@u& (0+255),b
  3277  00156A  0E00               	movlw	0
  3278  00156C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3279  00156E  0E80               	movlw	128
  3280  001570  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3281  001572  0E3F               	movlw	63
  3282  001574  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3285  001576  0E00               	movlw	0
  3286  001578  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3287  00157A  0E00               	movlw	0
  3288  00157C  6F90               	movwf	efgtoa@e& (0+255),b
  3289  00157E                     l7128:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3293  00157E  0E67               	movlw	103
  3294  001580  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3295  001582  B4D8               	btfsc	status,2,c
  3296  001584  EFC6  F00A         	goto	u7761
  3297  001588  EFC8  F00A         	goto	u7760
  3298  00158C                     u7761:
  3299  00158C  EFCC  F00A         	goto	l7132
  3300  001590                     u7760:
  3301  001590                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3304  001590  5190               	movf	efgtoa@e& (0+255),w,b
  3305  001592  2772               	addwf	efgtoa@m& (0+255),f,b
  3306  001594  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3307  001596  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3308  001598                     l7132:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3312  001598  0E00               	movlw	0
  3313  00159A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3314  00159C  0E00               	movlw	0
  3315  00159E  6F8A               	movwf	efgtoa@i& (0+255),b
  3316  0015A0                     
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3319  0015A0  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3320  0015A4  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3321  0015A8  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3322  0015AC  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3323  0015B0                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3326  0015B0  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3327  0015B4  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3328  0015B8  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3329  0015BC  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3332  0015C0  EF5D  F00B         	goto	l7146
  3333  0015C4                     l7138:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3337  0015C4  C082  F005         	movff	efgtoa@h,___fldiv@b
  3338  0015C8  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3339  0015CC  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3340  0015D0  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3341  0015D4  C094  F009         	movff	efgtoa@u,___fldiv@a
  3342  0015D8  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3343  0015DC  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3344  0015E0  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3345  0015E4  ECAE  F017         	call	___fldiv	;wreg free
  3346  0015E8  C005  F01E         	movff	?___fldiv,floorf@x
  3347  0015EC  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3348  0015F0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3349  0015F4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3350  0015F8  EC7B  F019         	call	_floorf	;wreg free
  3351  0015FC  C01E  F086         	movff	?_floorf,efgtoa@l
  3352  001600  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3353  001604  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3354  001608  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3357  00160C  C086  F005         	movff	efgtoa@l,___fltol@f1
  3358  001610  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3359  001614  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3360  001618  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3361  00161C  ECE6  F01C         	call	___fltol	;wreg free
  3362  001620  C005  F078         	movff	?___fltol,efgtoa@d
  3363  001624  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3364  001628                     
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3366  001628  C082  F01E         	movff	efgtoa@h,___flsub@b
  3367  00162C  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3368  001630  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  3369  001634  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  3370  001638  C094  F009         	movff	efgtoa@u,___flmul@a
  3371  00163C  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3372  001640  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3373  001644  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3374  001648  C086  F005         	movff	efgtoa@l,___flmul@b
  3375  00164C  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  3376  001650  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  3377  001654  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  3378  001658  EC99  F015         	call	___flmul	;wreg free
  3379  00165C  C005  F022         	movff	?___flmul,___flsub@a
  3380  001660  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3381  001664  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3382  001668  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3383  00166C  EC28  F025         	call	___flsub	;wreg free
  3384  001670  C01E  F082         	movff	?___flsub,efgtoa@h
  3385  001674  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  3386  001678  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  3387  00167C  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  3388  001680                     
  3389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3390  001680  C094  F005         	movff	efgtoa@u,___fldiv@b
  3391  001684  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3392  001688  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3393  00168C  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3394  001690  0E00               	movlw	0
  3395  001692  6E09               	movwf	___fldiv@a^0,c
  3396  001694  0E00               	movlw	0
  3397  001696  6E0A               	movwf	(___fldiv@a+1)^0,c
  3398  001698  0E20               	movlw	32
  3399  00169A  6E0B               	movwf	(___fldiv@a+2)^0,c
  3400  00169C  0E41               	movlw	65
  3401  00169E  6E0C               	movwf	(___fldiv@a+3)^0,c
  3402  0016A0  ECAE  F017         	call	___fldiv	;wreg free
  3403  0016A4  C005  F094         	movff	?___fldiv,efgtoa@u
  3404  0016A8  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3405  0016AC  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3406  0016B0  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3407  0016B4                     
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3409  0016B4  0100               	movlb	0	; () banked
  3410  0016B6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3411  0016B8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3412  0016BA                     l7146:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3416  0016BA  5172               	movf	efgtoa@m& (0+255),w,b
  3417  0016BC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3418  0016BE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3419  0016C0  0A80               	xorlw	128
  3420  0016C2  6E39               	movwf	??_efgtoa^0,c
  3421  0016C4  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3422  0016C6  0A80               	xorlw	128
  3423  0016C8  5839               	subwfb	??_efgtoa^0,w,c
  3424  0016CA  A0D8               	btfss	status,0,c
  3425  0016CC  EF6A  F00B         	goto	u7771
  3426  0016D0  EF6C  F00B         	goto	u7770
  3427  0016D4                     u7771:
  3428  0016D4  EFE2  F00A         	goto	l7138
  3429  0016D8                     u7770:
  3430  0016D8                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3433  0016D8  C094  F005         	movff	efgtoa@u,___flmul@b
  3434  0016DC  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  3435  0016E0  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  3436  0016E4  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  3437  0016E8  0E00               	movlw	0
  3438  0016EA  6E09               	movwf	___flmul@a^0,c
  3439  0016EC  0E00               	movlw	0
  3440  0016EE  6E0A               	movwf	(___flmul@a+1)^0,c
  3441  0016F0  0EA0               	movlw	160
  3442  0016F2  6E0B               	movwf	(___flmul@a+2)^0,c
  3443  0016F4  0E40               	movlw	64
  3444  0016F6  6E0C               	movwf	(___flmul@a+3)^0,c
  3445  0016F8  EC99  F015         	call	___flmul	;wreg free
  3446  0016FC  C005  F086         	movff	?___flmul,efgtoa@l
  3447  001700  C006  F087         	movff	?___flmul+1,efgtoa@l+1
  3448  001704  C007  F088         	movff	?___flmul+2,efgtoa@l+2
  3449  001708  C008  F089         	movff	?___flmul+3,efgtoa@l+3
  3450  00170C                     
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3452  00170C  C082  F01E         	movff	efgtoa@h,___flge@ff1
  3453  001710  C083  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3454  001714  C084  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3455  001718  C085  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3456  00171C  C086  F022         	movff	efgtoa@l,___flge@ff2
  3457  001720  C087  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3458  001724  C088  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3459  001728  C089  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3460  00172C  EC69  F01D         	call	___flge	;wreg free
  3461  001730  B0D8               	btfsc	status,0,c
  3462  001732  EF9D  F00B         	goto	u7781
  3463  001736  EF9F  F00B         	goto	u7780
  3464  00173A                     u7781:
  3465  00173A  EFAA  F00B         	goto	l7154
  3466  00173E                     u7780:
  3467  00173E                     
  3468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3469  00173E  0E00               	movlw	0
  3470  001740  0100               	movlb	0	; () banked
  3471  001742  6F86               	movwf	efgtoa@l& (0+255),b
  3472  001744  0E00               	movlw	0
  3473  001746  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3474  001748  0E00               	movlw	0
  3475  00174A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3476  00174C  0E00               	movlw	0
  3477  00174E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3480  001750  EFD3  F00B         	goto	l7160
  3481  001754                     l7154:
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3484  001754  C082  F005         	movff	efgtoa@h,___fleq@ff1
  3485  001758  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3486  00175C  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3487  001760  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3488  001764  C086  F009         	movff	efgtoa@l,___fleq@ff2
  3489  001768  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3490  00176C  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3491  001770  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3492  001774  EC0E  F021         	call	___fleq	;wreg free
  3493  001778  A0D8               	btfss	status,0,c
  3494  00177A  EFC1  F00B         	goto	u7791
  3495  00177E  EFC3  F00B         	goto	u7790
  3496  001782                     u7791:
  3497  001782  EFD3  F00B         	goto	l7160
  3498  001786                     u7790:
  3499  001786  0100               	movlb	0	; () banked
  3500  001788  B178               	btfsc	efgtoa@d& (0+255),0,b
  3501  00178A  EFC9  F00B         	goto	u7801
  3502  00178E  EFCB  F00B         	goto	u7800
  3503  001792                     u7801:
  3504  001792  EFD3  F00B         	goto	l7160
  3505  001796                     u7800:
  3506  001796                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3509  001796  0E00               	movlw	0
  3510  001798  6F86               	movwf	efgtoa@l& (0+255),b
  3511  00179A  0E00               	movlw	0
  3512  00179C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3513  00179E  0E00               	movlw	0
  3514  0017A0  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3515  0017A2  0E00               	movlw	0
  3516  0017A4  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3517  0017A6                     l7160:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3520  0017A6  C08C  F005         	movff	efgtoa@g,___fladd@b
  3521  0017AA  C08D  F006         	movff	efgtoa@g+1,___fladd@b+1
  3522  0017AE  C08E  F007         	movff	efgtoa@g+2,___fladd@b+2
  3523  0017B2  C08F  F008         	movff	efgtoa@g+3,___fladd@b+3
  3524  0017B6  C086  F009         	movff	efgtoa@l,___fladd@a
  3525  0017BA  C087  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3526  0017BE  C088  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3527  0017C2  C089  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3528  0017C6  ECE9  F010         	call	___fladd	;wreg free
  3529  0017CA  C005  F082         	movff	?___fladd,efgtoa@h
  3530  0017CE  C006  F083         	movff	?___fladd+1,efgtoa@h+1
  3531  0017D2  C007  F084         	movff	?___fladd+2,efgtoa@h+2
  3532  0017D6  C008  F085         	movff	?___fladd+3,efgtoa@h+3
  3533  0017DA                     
  3534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3535  0017DA  C082  F01E         	movff	efgtoa@h,___flge@ff1
  3536  0017DE  C083  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3537  0017E2  C084  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3538  0017E6  C085  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3539  0017EA  0E00               	movlw	0
  3540  0017EC  6E09               	movwf	___flmul@a^0,c
  3541  0017EE  0E00               	movlw	0
  3542  0017F0  6E0A               	movwf	(___flmul@a+1)^0,c
  3543  0017F2  0E20               	movlw	32
  3544  0017F4  6E0B               	movwf	(___flmul@a+2)^0,c
  3545  0017F6  0E41               	movlw	65
  3546  0017F8  6E0C               	movwf	(___flmul@a+3)^0,c
  3547  0017FA  C074  F005         	movff	efgtoa@ou,___flmul@b
  3548  0017FE  C075  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3549  001802  C076  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3550  001806  C077  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3551  00180A  EC99  F015         	call	___flmul	;wreg free
  3552  00180E  C005  F022         	movff	?___flmul,___flge@ff2
  3553  001812  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3554  001816  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3555  00181A  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3556  00181E  EC69  F01D         	call	___flge	;wreg free
  3557  001822  A0D8               	btfss	status,0,c
  3558  001824  EF16  F00C         	goto	u7811
  3559  001828  EF18  F00C         	goto	u7810
  3560  00182C                     u7811:
  3561  00182C  EF41  F00C         	goto	l7172
  3562  001830                     u7810:
  3563  001830                     
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3565  001830  0100               	movlb	0	; () banked
  3566  001832  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3567  001834  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3568  001836                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3571  001836  C074  F005         	movff	efgtoa@ou,___flmul@b
  3572  00183A  C075  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3573  00183E  C076  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3574  001842  C077  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3575  001846  0E00               	movlw	0
  3576  001848  6E09               	movwf	___flmul@a^0,c
  3577  00184A  0E00               	movlw	0
  3578  00184C  6E0A               	movwf	(___flmul@a+1)^0,c
  3579  00184E  0E20               	movlw	32
  3580  001850  6E0B               	movwf	(___flmul@a+2)^0,c
  3581  001852  0E41               	movlw	65
  3582  001854  6E0C               	movwf	(___flmul@a+3)^0,c
  3583  001856  EC99  F015         	call	___flmul	;wreg free
  3584  00185A  C005  F074         	movff	?___flmul,efgtoa@ou
  3585  00185E  C006  F075         	movff	?___flmul+1,efgtoa@ou+1
  3586  001862  C007  F076         	movff	?___flmul+2,efgtoa@ou+2
  3587  001866  C008  F077         	movff	?___flmul+3,efgtoa@ou+3
  3588  00186A                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3590  00186A  0E66               	movlw	102
  3591  00186C  0100               	movlb	0	; () banked
  3592  00186E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3593  001870  A4D8               	btfss	status,2,c
  3594  001872  EF3D  F00C         	goto	u7821
  3595  001876  EF3F  F00C         	goto	u7820
  3596  00187A                     u7821:
  3597  00187A  EF41  F00C         	goto	l7172
  3598  00187E                     u7820:
  3599  00187E                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3602  00187E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3603  001880  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3604  001882                     l7172:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3607  001882  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3608  001886  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3609  00188A  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3610  00188E  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3611  001892                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3613  001892  0E65               	movlw	101
  3614  001894  0100               	movlb	0	; () banked
  3615  001896  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3616  001898  B4D8               	btfsc	status,2,c
  3617  00189A  EF51  F00C         	goto	u7831
  3618  00189E  EF53  F00C         	goto	u7830
  3619  0018A2                     u7831:
  3620  0018A2  EF59  F00C         	goto	l7178
  3621  0018A6                     u7830:
  3622  0018A6                     
  3623                           ; BSR set to: 0
  3624  0018A6  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3625  0018AA  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3626  0018AE  EF5D  F00C         	goto	l1513
  3627  0018B2                     l7178:
  3628                           
  3629                           ; BSR set to: 0
  3630  0018B2  0E00               	movlw	0
  3631  0018B4  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3632  0018B6  0E00               	movlw	0
  3633  0018B8  6F70               	movwf	efgtoa@ne& (0+255),b
  3634  0018BA                     l1513:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3638  0018BA  0E00               	movlw	0
  3639  0018BC  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3640  0018BE  0E00               	movlw	0
  3641  0018C0  6F6E               	movwf	efgtoa@pp& (0+255),b
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3644  0018C2  0E00               	movlw	0
  3645  0018C4  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3646  0018C6  0E00               	movlw	0
  3647  0018C8  6F6C               	movwf	efgtoa@t& (0+255),b
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3650  0018CA  0E00               	movlw	0
  3651  0018CC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3652  0018CE  0E00               	movlw	0
  3653  0018D0  6F8A               	movwf	efgtoa@i& (0+255),b
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3656  0018D2  EF58  F00D         	goto	l7228
  3657  0018D6                     l7180:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3661  0018D6  C082  F005         	movff	efgtoa@h,___fldiv@b
  3662  0018DA  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3663  0018DE  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3664  0018E2  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3665  0018E6  C094  F009         	movff	efgtoa@u,___fldiv@a
  3666  0018EA  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3667  0018EE  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3668  0018F2  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3669  0018F6  ECAE  F017         	call	___fldiv	;wreg free
  3670  0018FA  C005  F01E         	movff	?___fldiv,floorf@x
  3671  0018FE  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3672  001902  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3673  001906  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3674  00190A  EC7B  F019         	call	_floorf	;wreg free
  3675  00190E  C01E  F086         	movff	?_floorf,efgtoa@l
  3676  001912  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3677  001916  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3678  00191A  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3681  00191E  C086  F005         	movff	efgtoa@l,___fltol@f1
  3682  001922  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3683  001926  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3684  00192A  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3685  00192E  ECE6  F01C         	call	___fltol	;wreg free
  3686  001932  C005  F078         	movff	?___fltol,efgtoa@d
  3687  001936  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3688  00193A                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3690  00193A  0100               	movlb	0	; () banked
  3691  00193C  B9F5               	btfsc	_flags& (0+255),4,b
  3692  00193E  EFA3  F00C         	goto	u7841
  3693  001942  EFA5  F00C         	goto	u7840
  3694  001946                     u7841:
  3695  001946  EFC2  F00C         	goto	l7192
  3696  00194A                     u7840:
  3697  00194A                     
  3698                           ; BSR set to: 0
  3699  00194A  5178               	movf	efgtoa@d& (0+255),w,b
  3700  00194C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3701  00194E  A4D8               	btfss	status,2,c
  3702  001950  EFAC  F00C         	goto	u7851
  3703  001954  EFAE  F00C         	goto	u7850
  3704  001958                     u7851:
  3705  001958  EFC2  F00C         	goto	l7192
  3706  00195C                     u7850:
  3707  00195C                     
  3708                           ; BSR set to: 0
  3709  00195C  0E67               	movlw	103
  3710  00195E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3711  001960  A4D8               	btfss	status,2,c
  3712  001962  EFB5  F00C         	goto	u7861
  3713  001966  EFB7  F00C         	goto	u7860
  3714  00196A                     u7861:
  3715  00196A  EFC2  F00C         	goto	l7192
  3716  00196E                     u7860:
  3717  00196E                     
  3718                           ; BSR set to: 0
  3719  00196E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3720  001970  EFBE  F00C         	goto	u7870
  3721  001974  EFBC  F00C         	goto	u7871
  3722  001978                     u7871:
  3723  001978  EFC2  F00C         	goto	l7192
  3724  00197C                     u7870:
  3725  00197C                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3728  00197C  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3729  00197E  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3730                           
  3731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3732  001980  EF0C  F00D         	goto	l7220
  3733  001984                     l7192:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3737  001984  516E               	movf	efgtoa@pp& (0+255),w,b
  3738  001986  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3739  001988  A4D8               	btfss	status,2,c
  3740  00198A  EFC9  F00C         	goto	u7881
  3741  00198E  EFCB  F00C         	goto	u7880
  3742  001992                     u7881:
  3743  001992  EFF5  F00C         	goto	l7212
  3744  001996                     u7880:
  3745  001996                     
  3746                           ; BSR set to: 0
  3747  001996  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3748  001998  EFD2  F00C         	goto	u7890
  3749  00199C  EFD0  F00C         	goto	u7891
  3750  0019A0                     u7891:
  3751  0019A0  EFF5  F00C         	goto	l7212
  3752  0019A4                     u7890:
  3753  0019A4                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3756  0019A4  0E18               	movlw	low _dbuf
  3757  0019A6  2592               	addwf	efgtoa@n& (0+255),w,b
  3758  0019A8  6ED9               	movwf	fsr2l,c
  3759  0019AA  0E01               	movlw	high _dbuf
  3760  0019AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3761  0019AE  6EDA               	movwf	fsr2h,c
  3762  0019B0  0E2E               	movlw	46
  3763  0019B2  6EDF               	movwf	indf2,c
  3764  0019B4                     
  3765                           ; BSR set to: 0
  3766  0019B4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3767  0019B6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3768  0019B8                     
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3771  0019B8  077E               	decf	efgtoa@w& (0+255),f,b
  3772  0019BA  A0D8               	btfss	status,0,c
  3773  0019BC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3774  0019BE                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3777  0019BE  0E00               	movlw	0
  3778  0019C0  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3779  0019C2  0E01               	movlw	1
  3780  0019C4  6F6E               	movwf	efgtoa@pp& (0+255),b
  3781  0019C6  EFF5  F00C         	goto	l7212
  3782  0019CA                     l7204:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3786  0019CA  0E18               	movlw	low _dbuf
  3787  0019CC  2592               	addwf	efgtoa@n& (0+255),w,b
  3788  0019CE  6ED9               	movwf	fsr2l,c
  3789  0019D0  0E01               	movlw	high _dbuf
  3790  0019D2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3791  0019D4  6EDA               	movwf	fsr2h,c
  3792  0019D6  0E30               	movlw	48
  3793  0019D8  6EDF               	movwf	indf2,c
  3794  0019DA                     
  3795                           ; BSR set to: 0
  3796  0019DA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3797  0019DC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3798  0019DE                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3801  0019DE  077E               	decf	efgtoa@w& (0+255),f,b
  3802  0019E0  A0D8               	btfss	status,0,c
  3803  0019E2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3804  0019E4                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3807  0019E4  076C               	decf	efgtoa@t& (0+255),f,b
  3808  0019E6  A0D8               	btfss	status,0,c
  3809  0019E8  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3810  0019EA                     l7212:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3814  0019EA  516C               	movf	efgtoa@t& (0+255),w,b
  3815  0019EC  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3816  0019EE  A4D8               	btfss	status,2,c
  3817  0019F0  EFFC  F00C         	goto	u7901
  3818  0019F4  EFFE  F00C         	goto	u7900
  3819  0019F8                     u7901:
  3820  0019F8  EFE5  F00C         	goto	l7204
  3821  0019FC                     u7900:
  3822  0019FC                     
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3825  0019FC  0E18               	movlw	low _dbuf
  3826  0019FE  2592               	addwf	efgtoa@n& (0+255),w,b
  3827  001A00  6ED9               	movwf	fsr2l,c
  3828  001A02  0E01               	movlw	high _dbuf
  3829  001A04  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3830  001A06  6EDA               	movwf	fsr2h,c
  3831  001A08  5178               	movf	efgtoa@d& (0+255),w,b
  3832  001A0A  0F30               	addlw	48
  3833  001A0C  6EDF               	movwf	indf2,c
  3834  001A0E                     
  3835                           ; BSR set to: 0
  3836  001A0E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3837  001A10  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3838  001A12                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3841  001A12  077E               	decf	efgtoa@w& (0+255),f,b
  3842  001A14  A0D8               	btfss	status,0,c
  3843  001A16  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3844  001A18                     l7220:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3848  001A18  C082  F01E         	movff	efgtoa@h,___flsub@b
  3849  001A1C  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3850  001A20  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  3851  001A24  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  3852  001A28  C094  F009         	movff	efgtoa@u,___flmul@a
  3853  001A2C  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3854  001A30  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3855  001A34  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3856  001A38  C086  F005         	movff	efgtoa@l,___flmul@b
  3857  001A3C  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  3858  001A40  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  3859  001A44  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  3860  001A48  EC99  F015         	call	___flmul	;wreg free
  3861  001A4C  C005  F022         	movff	?___flmul,___flsub@a
  3862  001A50  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3863  001A54  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3864  001A58  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3865  001A5C  EC28  F025         	call	___flsub	;wreg free
  3866  001A60  C01E  F082         	movff	?___flsub,efgtoa@h
  3867  001A64  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  3868  001A68  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  3869  001A6C  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  3870  001A70                     
  3871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3872  001A70  C094  F005         	movff	efgtoa@u,___fldiv@b
  3873  001A74  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3874  001A78  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3875  001A7C  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3876  001A80  0E00               	movlw	0
  3877  001A82  6E09               	movwf	___fldiv@a^0,c
  3878  001A84  0E00               	movlw	0
  3879  001A86  6E0A               	movwf	(___fldiv@a+1)^0,c
  3880  001A88  0E20               	movlw	32
  3881  001A8A  6E0B               	movwf	(___fldiv@a+2)^0,c
  3882  001A8C  0E41               	movlw	65
  3883  001A8E  6E0C               	movwf	(___fldiv@a+3)^0,c
  3884  001A90  ECAE  F017         	call	___fldiv	;wreg free
  3885  001A94  C005  F094         	movff	?___fldiv,efgtoa@u
  3886  001A98  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3887  001A9C  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3888  001AA0  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3889  001AA4                     
  3890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3891  001AA4  0100               	movlb	0	; () banked
  3892  001AA6  0770               	decf	efgtoa@ne& (0+255),f,b
  3893  001AA8  A0D8               	btfss	status,0,c
  3894  001AAA  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3895  001AAC                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3898  001AAC  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3899  001AAE  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3900  001AB0                     l7228:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3904  001AB0  5172               	movf	efgtoa@m& (0+255),w,b
  3905  001AB2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3906  001AB4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3907  001AB6  0A80               	xorlw	128
  3908  001AB8  6E39               	movwf	??_efgtoa^0,c
  3909  001ABA  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3910  001ABC  0A80               	xorlw	128
  3911  001ABE  5839               	subwfb	??_efgtoa^0,w,c
  3912  001AC0  B0D8               	btfsc	status,0,c
  3913  001AC2  EF65  F00D         	goto	u7911
  3914  001AC6  EF67  F00D         	goto	u7910
  3915  001ACA                     u7911:
  3916  001ACA  EF75  F00D         	goto	l7232
  3917  001ACE                     u7910:
  3918  001ACE                     
  3919                           ; BSR set to: 0
  3920  001ACE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3921  001AD0  EF73  F00D         	goto	u7921
  3922  001AD4  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3923  001AD6  E109               	bnz	u7920
  3924  001AD8  0E4B               	movlw	75
  3925  001ADA  5D92               	subwf	efgtoa@n& (0+255),w,b
  3926  001ADC  A0D8               	btfss	status,0,c
  3927  001ADE  EF73  F00D         	goto	u7921
  3928  001AE2  EF75  F00D         	goto	u7920
  3929  001AE6                     u7921:
  3930  001AE6  EF6B  F00C         	goto	l7180
  3931  001AEA                     u7920:
  3932  001AEA                     l7232:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3936  001AEA  516E               	movf	efgtoa@pp& (0+255),w,b
  3937  001AEC  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3938  001AEE  A4D8               	btfss	status,2,c
  3939  001AF0  EF7C  F00D         	goto	u7931
  3940  001AF4  EF7E  F00D         	goto	u7930
  3941  001AF8                     u7931:
  3942  001AF8  EF8F  F00D         	goto	l7240
  3943  001AFC                     u7930:
  3944  001AFC                     
  3945                           ; BSR set to: 0
  3946  001AFC  A9F5               	btfss	_flags& (0+255),4,b
  3947  001AFE  EF83  F00D         	goto	u7941
  3948  001B02  EF85  F00D         	goto	u7940
  3949  001B06                     u7941:
  3950  001B06  EF8F  F00D         	goto	l7240
  3951  001B0A                     u7940:
  3952  001B0A                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3955  001B0A  0E18               	movlw	low _dbuf
  3956  001B0C  2592               	addwf	efgtoa@n& (0+255),w,b
  3957  001B0E  6ED9               	movwf	fsr2l,c
  3958  001B10  0E01               	movlw	high _dbuf
  3959  001B12  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3960  001B14  6EDA               	movwf	fsr2h,c
  3961  001B16  0E2E               	movlw	46
  3962  001B18  6EDF               	movwf	indf2,c
  3963  001B1A                     
  3964                           ; BSR set to: 0
  3965  001B1A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3966  001B1C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3967  001B1E                     l7240:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3971  001B1E  0E18               	movlw	low _dbuf
  3972  001B20  2592               	addwf	efgtoa@n& (0+255),w,b
  3973  001B22  6ED9               	movwf	fsr2l,c
  3974  001B24  0E01               	movlw	high _dbuf
  3975  001B26  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3976  001B28  6EDA               	movwf	fsr2h,c
  3977  001B2A  0E00               	movlw	0
  3978  001B2C  6EDF               	movwf	indf2,c
  3979  001B2E                     
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3982  001B2E  0E65               	movlw	101
  3983  001B30  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3984  001B32  A4D8               	btfss	status,2,c
  3985  001B34  EF9E  F00D         	goto	u7951
  3986  001B38  EFA0  F00D         	goto	u7950
  3987  001B3C                     u7951:
  3988  001B3C  EF70  F00E         	goto	l7302
  3989  001B40                     u7950:
  3990  001B40                     
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3993  001B40  0E00               	movlw	0
  3994  001B42  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3995  001B44  0E4F               	movlw	79
  3996  001B46  6F8A               	movwf	efgtoa@i& (0+255),b
  3997  001B48                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4000  001B48  0E18               	movlw	low _dbuf
  4001  001B4A  258A               	addwf	efgtoa@i& (0+255),w,b
  4002  001B4C  6ED9               	movwf	fsr2l,c
  4003  001B4E  0E01               	movlw	high _dbuf
  4004  001B50  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4005  001B52  6EDA               	movwf	fsr2h,c
  4006  001B54  0E00               	movlw	0
  4007  001B56  6EDF               	movwf	indf2,c
  4008  001B58                     
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4011  001B58  0E00               	movlw	0
  4012  001B5A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4013  001B5C  0E00               	movlw	0
  4014  001B5E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4015  001B60                     
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4018  001B60  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4019  001B62  EFB7  F00D         	goto	u7960
  4020  001B66  EFB5  F00D         	goto	u7961
  4021  001B6A                     u7961:
  4022  001B6A  EFBF  F00D         	goto	l7256
  4023  001B6E                     u7960:
  4024  001B6E                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4027  001B6E  0E00               	movlw	0
  4028  001B70  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4029  001B72  0E01               	movlw	1
  4030  001B74  6F7A               	movwf	efgtoa@sign& (0+255),b
  4031  001B76                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4034  001B76  6D90               	negf	efgtoa@e& (0+255),b
  4035  001B78  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4036  001B7A  B0D8               	btfsc	status,0,c
  4037  001B7C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4038  001B7E                     l7256:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4042  001B7E  0E00               	movlw	0
  4043  001B80  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4044  001B82  0E02               	movlw	2
  4045  001B84  6F7C               	movwf	efgtoa@p& (0+255),b
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4048  001B86  EFF0  F00D         	goto	l7268
  4049  001B8A                     l7258:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4053  001B8A  078A               	decf	efgtoa@i& (0+255),f,b
  4054  001B8C  A0D8               	btfss	status,0,c
  4055  001B8E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4056  001B90                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4059  001B90  0E18               	movlw	low _dbuf
  4060  001B92  258A               	addwf	efgtoa@i& (0+255),w,b
  4061  001B94  6ED9               	movwf	fsr2l,c
  4062  001B96  0E01               	movlw	high _dbuf
  4063  001B98  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4064  001B9A  6EDA               	movwf	fsr2h,c
  4065  001B9C  C090  F005         	movff	efgtoa@e,___awmod@dividend
  4066  001BA0  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4067  001BA4  0E00               	movlw	0
  4068  001BA6  6E08               	movwf	(___awmod@divisor+1)^0,c
  4069  001BA8  0E0A               	movlw	10
  4070  001BAA  6E07               	movwf	___awmod@divisor^0,c
  4071  001BAC  EC5E  F020         	call	___awmod	;wreg free
  4072  001BB0  5005               	movf	?___awmod^0,w,c
  4073  001BB2  0F30               	addlw	48
  4074  001BB4  6EDF               	movwf	indf2,c
  4075  001BB6                     
  4076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4077  001BB6  C090  F005         	movff	efgtoa@e,___awdiv@dividend
  4078  001BBA  C091  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4079  001BBE  0E00               	movlw	0
  4080  001BC0  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4081  001BC2  0E0A               	movlw	10
  4082  001BC4  6E07               	movwf	___awdiv@divisor^0,c
  4083  001BC6  EC3B  F01F         	call	___awdiv	;wreg free
  4084  001BCA  C005  F090         	movff	?___awdiv,efgtoa@e
  4085  001BCE  C006  F091         	movff	?___awdiv+1,efgtoa@e+1
  4086  001BD2                     
  4087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4088  001BD2  0100               	movlb	0	; () banked
  4089  001BD4  077C               	decf	efgtoa@p& (0+255),f,b
  4090  001BD6  A0D8               	btfss	status,0,c
  4091  001BD8  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4092  001BDA                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4095  001BDA  077E               	decf	efgtoa@w& (0+255),f,b
  4096  001BDC  A0D8               	btfss	status,0,c
  4097  001BDE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4098  001BE0                     l7268:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4102  001BE0  5190               	movf	efgtoa@e& (0+255),w,b
  4103  001BE2  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4104  001BE4  A4D8               	btfss	status,2,c
  4105  001BE6  EFF7  F00D         	goto	u7971
  4106  001BEA  EFF9  F00D         	goto	u7970
  4107  001BEE                     u7971:
  4108  001BEE  EFC5  F00D         	goto	l7258
  4109  001BF2                     u7970:
  4110  001BF2                     
  4111                           ; BSR set to: 0
  4112  001BF2  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4113  001BF4  EF06  F00E         	goto	u7980
  4114  001BF8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4115  001BFA  E106               	bnz	u7981
  4116  001BFC  057C               	decf	efgtoa@p& (0+255),w,b
  4117  001BFE  B0D8               	btfsc	status,0,c
  4118  001C00  EF04  F00E         	goto	u7981
  4119  001C04  EF06  F00E         	goto	u7980
  4120  001C08                     u7981:
  4121  001C08  EFC5  F00D         	goto	l7258
  4122  001C0C                     u7980:
  4123  001C0C                     
  4124                           ; BSR set to: 0
  4125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4126  001C0C  078A               	decf	efgtoa@i& (0+255),f,b
  4127  001C0E  A0D8               	btfss	status,0,c
  4128  001C10  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4129  001C12                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4132  001C12  517A               	movf	efgtoa@sign& (0+255),w,b
  4133  001C14  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4134  001C16  A4D8               	btfss	status,2,c
  4135  001C18  EF10  F00E         	goto	u7991
  4136  001C1C  EF12  F00E         	goto	u7990
  4137  001C20                     u7991:
  4138  001C20  EF18  F00E         	goto	l7278
  4139  001C24                     u7990:
  4140  001C24                     
  4141                           ; BSR set to: 0
  4142  001C24  0E00               	movlw	0
  4143  001C26  6F67               	movwf	(_efgtoa$2119+1)& (0+255),b
  4144  001C28  0E2B               	movlw	43
  4145  001C2A  6F66               	movwf	_efgtoa$2119& (0+255),b
  4146  001C2C  EF1C  F00E         	goto	l7280
  4147  001C30                     l7278:
  4148                           
  4149                           ; BSR set to: 0
  4150  001C30  0E00               	movlw	0
  4151  001C32  6F67               	movwf	(_efgtoa$2119+1)& (0+255),b
  4152  001C34  0E2D               	movlw	45
  4153  001C36  6F66               	movwf	_efgtoa$2119& (0+255),b
  4154  001C38                     l7280:
  4155                           
  4156                           ; BSR set to: 0
  4157  001C38  0E18               	movlw	low _dbuf
  4158  001C3A  258A               	addwf	efgtoa@i& (0+255),w,b
  4159  001C3C  6ED9               	movwf	fsr2l,c
  4160  001C3E  0E01               	movlw	high _dbuf
  4161  001C40  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4162  001C42  6EDA               	movwf	fsr2h,c
  4163  001C44  C066  FFDF         	movff	_efgtoa$2119,indf2
  4164  001C48                     
  4165                           ; BSR set to: 0
  4166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4167  001C48  077E               	decf	efgtoa@w& (0+255),f,b
  4168  001C4A  A0D8               	btfss	status,0,c
  4169  001C4C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4170  001C4E                     
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4173  001C4E  078A               	decf	efgtoa@i& (0+255),f,b
  4174  001C50  A0D8               	btfss	status,0,c
  4175  001C52  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4176  001C54                     
  4177                           ; BSR set to: 0
  4178  001C54  0EBF               	movlw	191
  4179  001C56  6E39               	movwf	??_efgtoa^0,c
  4180  001C58  0EFF               	movlw	255
  4181  001C5A  6E3A               	movwf	(??_efgtoa+1)^0,c
  4182  001C5C  5038               	movf	efgtoa@c^0,w,c
  4183  001C5E  6E3B               	movwf	(??_efgtoa+2)^0,c
  4184  001C60  6A3C               	clrf	(??_efgtoa+3)^0,c
  4185  001C62  5039               	movf	??_efgtoa^0,w,c
  4186  001C64  263B               	addwf	(??_efgtoa+2)^0,f,c
  4187  001C66  503A               	movf	(??_efgtoa+1)^0,w,c
  4188  001C68  223C               	addwfc	(??_efgtoa+3)^0,f,c
  4189  001C6A  503C               	movf	(??_efgtoa+3)^0,w,c
  4190  001C6C  E10A               	bnz	u8000
  4191  001C6E  0E1A               	movlw	26
  4192  001C70  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  4193  001C72  A0D8               	btfss	status,0,c
  4194  001C74  EF3E  F00E         	goto	u8001
  4195  001C78  EF41  F00E         	goto	u8000
  4196  001C7C                     u8001:
  4197  001C7C  0E01               	movlw	1
  4198  001C7E  EF42  F00E         	goto	u8010
  4199  001C82                     u8000:
  4200  001C82  0E00               	movlw	0
  4201  001C84                     u8010:
  4202  001C84  6F6A               	movwf	_efgtoa$2121& (0+255),b
  4203  001C86  6B6B               	clrf	(_efgtoa$2121+1)& (0+255),b
  4204  001C88                     
  4205                           ; BSR set to: 0
  4206  001C88  516A               	movf	_efgtoa$2121& (0+255),w,b
  4207  001C8A  116B               	iorwf	(_efgtoa$2121+1)& (0+255),w,b
  4208  001C8C  A4D8               	btfss	status,2,c
  4209  001C8E  EF4B  F00E         	goto	u8021
  4210  001C92  EF4D  F00E         	goto	u8020
  4211  001C96                     u8021:
  4212  001C96  EF53  F00E         	goto	l7294
  4213  001C9A                     u8020:
  4214  001C9A                     
  4215                           ; BSR set to: 0
  4216  001C9A  0E00               	movlw	0
  4217  001C9C  6F69               	movwf	(_efgtoa$2120+1)& (0+255),b
  4218  001C9E  0E65               	movlw	101
  4219  001CA0  6F68               	movwf	_efgtoa$2120& (0+255),b
  4220  001CA2  EF57  F00E         	goto	l7296
  4221  001CA6                     l7294:
  4222                           
  4223                           ; BSR set to: 0
  4224  001CA6  0E00               	movlw	0
  4225  001CA8  6F69               	movwf	(_efgtoa$2120+1)& (0+255),b
  4226  001CAA  0E45               	movlw	69
  4227  001CAC  6F68               	movwf	_efgtoa$2120& (0+255),b
  4228  001CAE                     l7296:
  4229                           
  4230                           ; BSR set to: 0
  4231  001CAE  0E18               	movlw	low _dbuf
  4232  001CB0  258A               	addwf	efgtoa@i& (0+255),w,b
  4233  001CB2  6ED9               	movwf	fsr2l,c
  4234  001CB4  0E01               	movlw	high _dbuf
  4235  001CB6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4236  001CB8  6EDA               	movwf	fsr2h,c
  4237  001CBA  C068  FFDF         	movff	_efgtoa$2120,indf2
  4238  001CBE                     
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4241  001CBE  077E               	decf	efgtoa@w& (0+255),f,b
  4242  001CC0  A0D8               	btfss	status,0,c
  4243  001CC2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4244  001CC4                     
  4245                           ; BSR set to: 0
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4247  001CC4  0E18               	movlw	low _dbuf
  4248  001CC6  2592               	addwf	efgtoa@n& (0+255),w,b
  4249  001CC8  6E05               	movwf	strcpy@dest^0,c
  4250  001CCA  0E01               	movlw	high _dbuf
  4251  001CCC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4252  001CCE  6E06               	movwf	(strcpy@dest+1)^0,c
  4253  001CD0  0E18               	movlw	low _dbuf
  4254  001CD2  258A               	addwf	efgtoa@i& (0+255),w,b
  4255  001CD4  6E07               	movwf	strcpy@src^0,c
  4256  001CD6  0E01               	movlw	high _dbuf
  4257  001CD8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4258  001CDA  6E08               	movwf	(strcpy@src+1)^0,c
  4259  001CDC  EC7A  F024         	call	_strcpy	;wreg free
  4260  001CE0                     l7302:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4263  001CE0  C032  F017         	movff	efgtoa@fp,pad@fp
  4264  001CE4  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  4265  001CE8  0E18               	movlw	low _dbuf
  4266  001CEA  6E19               	movwf	pad@buf^0,c
  4267  001CEC  0E01               	movlw	high _dbuf
  4268  001CEE  6E1A               	movwf	(pad@buf+1)^0,c
  4269  001CF0  C07E  F01B         	movff	efgtoa@w,pad@p
  4270  001CF4  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  4271  001CF8  ECD8  F01E         	call	_pad	;wreg free
  4272  001CFC  C017  F032         	movff	?_pad,?_efgtoa
  4273  001D00  C018  F033         	movff	?_pad+1,?_efgtoa+1
  4274  001D04                     l1467:
  4275  001D04  0012               	return		;funcret
  4276  001D06                     __end_of_efgtoa:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _tolower *****************
  4280 ;; Defined at:
  4281 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  c               2   10[COMRAM] int 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  2   10[COMRAM] int 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;Total ram usage:        8 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 5
  4302 ;; This function calls:
  4303 ;;		_isupper
  4304 ;; This function is called by:
  4305 ;;		_efgtoa
  4306 ;;		_vfpfcnvrt
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text6
  4311  004894                     __ptext6:
  4312                           	callstack 0
  4313  004894                     _tolower:
  4314                           	callstack 22
  4315  004894  0EBF               	movlw	191
  4316  004896  6E0D               	movwf	??_tolower^0,c
  4317  004898  0EFF               	movlw	255
  4318  00489A  6E0E               	movwf	(??_tolower+1)^0,c
  4319  00489C  C00B  F00F         	movff	tolower@c,??_tolower+2
  4320  0048A0  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4321  0048A4  500D               	movf	??_tolower^0,w,c
  4322  0048A6  260F               	addwf	(??_tolower+2)^0,f,c
  4323  0048A8  500E               	movf	(??_tolower+1)^0,w,c
  4324  0048AA  2210               	addwfc	(??_tolower+3)^0,f,c
  4325  0048AC  5010               	movf	(??_tolower+3)^0,w,c
  4326  0048AE  E10A               	bnz	u7320
  4327  0048B0  0E1A               	movlw	26
  4328  0048B2  5C0F               	subwf	(??_tolower+2)^0,w,c
  4329  0048B4  A0D8               	btfss	status,0,c
  4330  0048B6  EF5F  F024         	goto	u7321
  4331  0048BA  EF62  F024         	goto	u7320
  4332  0048BE                     u7321:
  4333  0048BE  0E01               	movlw	1
  4334  0048C0  EF63  F024         	goto	u7330
  4335  0048C4                     u7320:
  4336  0048C4  0E00               	movlw	0
  4337  0048C6                     u7330:
  4338  0048C6  6E11               	movwf	_tolower$2262^0,c
  4339  0048C8  6A12               	clrf	(_tolower$2262+1)^0,c
  4340  0048CA  5011               	movf	_tolower$2262^0,w,c
  4341  0048CC  1012               	iorwf	(_tolower$2262+1)^0,w,c
  4342  0048CE  B4D8               	btfsc	status,2,c
  4343  0048D0  EF6C  F024         	goto	u7341
  4344  0048D4  EF6E  F024         	goto	u7340
  4345  0048D8                     u7341:
  4346  0048D8  EF75  F024         	goto	l1694
  4347  0048DC                     u7340:
  4348  0048DC  0E20               	movlw	32
  4349  0048DE  100B               	iorwf	tolower@c^0,w,c
  4350  0048E0  6E0B               	movwf	?_tolower^0,c
  4351  0048E2  500C               	movf	(tolower@c+1)^0,w,c
  4352  0048E4  6E0C               	movwf	(?_tolower+1)^0,c
  4353  0048E6  EF79  F024         	goto	l1699
  4354  0048EA                     l1694:
  4355  0048EA  C00B  F00B         	movff	tolower@c,?_tolower
  4356  0048EE  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4357  0048F2                     l1699:
  4358  0048F2  0012               	return		;funcret
  4359  0048F4                     __end_of_tolower:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _isupper *****************
  4363 ;; Defined at:
  4364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  c               2    4[COMRAM] int 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2    4[COMRAM] int 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;Total ram usage:        6 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 4
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_efgtoa
  4389 ;;		_vfpfcnvrt
  4390 ;;		_tolower
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text7
  4395  004BA0                     __ptext7:
  4396                           	callstack 0
  4397  004BA0                     _isupper:
  4398                           	callstack 22
  4399  004BA0  0EBF               	movlw	191
  4400  004BA2  6E07               	movwf	??_isupper^0,c
  4401  004BA4  0EFF               	movlw	255
  4402  004BA6  6E08               	movwf	(??_isupper+1)^0,c
  4403  004BA8  C005  F009         	movff	isupper@c,??_isupper+2
  4404  004BAC  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4405  004BB0  5007               	movf	??_isupper^0,w,c
  4406  004BB2  2609               	addwf	(??_isupper+2)^0,f,c
  4407  004BB4  5008               	movf	(??_isupper+1)^0,w,c
  4408  004BB6  220A               	addwfc	(??_isupper+3)^0,f,c
  4409  004BB8  500A               	movf	(??_isupper+3)^0,w,c
  4410  004BBA  E10A               	bnz	u6470
  4411  004BBC  0E1A               	movlw	26
  4412  004BBE  5C09               	subwf	(??_isupper+2)^0,w,c
  4413  004BC0  A0D8               	btfss	status,0,c
  4414  004BC2  EFE5  F025         	goto	u6471
  4415  004BC6  EFE8  F025         	goto	u6470
  4416  004BCA                     u6471:
  4417  004BCA  0E01               	movlw	1
  4418  004BCC  EFE9  F025         	goto	u6480
  4419  004BD0                     u6470:
  4420  004BD0  0E00               	movlw	0
  4421  004BD2                     u6480:
  4422  004BD2  6E05               	movwf	?_isupper^0,c
  4423  004BD4  6A06               	clrf	(?_isupper+1)^0,c
  4424  004BD6  0012               	return		;funcret
  4425  004BD8                     __end_of_isupper:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _strcpy *****************
  4429 ;; Defined at:
  4430 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4433 ;;		 -> dbuf(80), 
  4434 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4435 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4436 ;;		 -> dbuf(80), 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  d               2   12[COMRAM] PTR unsigned char 
  4439 ;;		 -> dbuf(80), 
  4440 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4441 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4442 ;;		 -> dbuf(80), 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2    4[COMRAM] PTR unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:       10 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 4
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_efgtoa
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text8
  4467  0048F4                     __ptext8:
  4468                           	callstack 0
  4469  0048F4                     _strcpy:
  4470                           	callstack 22
  4471  0048F4  C007  F00B         	movff	strcpy@src,strcpy@s
  4472  0048F8  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4473  0048FC  C005  F00D         	movff	strcpy@dest,strcpy@d
  4474  004900  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4475  004904                     l6942:
  4476  004904  500B               	movf	strcpy@s^0,w,c
  4477  004906  6E09               	movwf	??_strcpy^0,c
  4478  004908  500C               	movf	(strcpy@s+1)^0,w,c
  4479  00490A  6E0A               	movwf	(??_strcpy+1)^0,c
  4480  00490C  4A0B               	infsnz	strcpy@s^0,f,c
  4481  00490E  2A0C               	incf	(strcpy@s+1)^0,f,c
  4482  004910  C009  FFF6         	movff	??_strcpy,tblptrl
  4483  004914  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4484  004918  0E00               	movlw	low (__smallconst shr (0+16))
  4485  00491A  6EF8               	movwf	tblptru,c
  4486  00491C  C00D  FFD9         	movff	strcpy@d,fsr2l
  4487  004920  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4488  004924  4A0D               	infsnz	strcpy@d^0,f,c
  4489  004926  2A0E               	incf	(strcpy@d+1)^0,f,c
  4490  004928  0E0F               	movlw	(high __ramtop+-1)
  4491  00492A  64F7               	cpfsgt	tblptrh,c
  4492  00492C  D003               	bra	u7307
  4493  00492E  0008               	tblrd		*
  4494  004930  50F5               	movf	tablat,w,c
  4495  004932  D005               	bra	u7300
  4496  004934                     u7307:
  4497  004934  CFF6 FFE9          	movff	tblptrl,fsr0l
  4498  004938  CFF7 FFEA          	movff	tblptrh,fsr0h
  4499  00493C  50EF               	movf	indf0,w,c
  4500  00493E                     u7300:
  4501  00493E  6EDF               	movwf	indf2,c
  4502  004940  50DF               	movf	indf2,w,c
  4503  004942  A4D8               	btfss	status,2,c
  4504  004944  EFA6  F024         	goto	u7311
  4505  004948  EFA8  F024         	goto	u7310
  4506  00494C                     u7311:
  4507  00494C  EF82  F024         	goto	l6942
  4508  004950                     u7310:
  4509  004950  0012               	return		;funcret
  4510  004952                     __end_of_strcpy:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function _pad *****************
  4514 ;; Defined at:
  4515 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4518 ;;		 -> NULL(0), 
  4519 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4520 ;;		 -> dbuf(80), 
  4521 ;;  p               2   26[COMRAM] int 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  w               2   31[COMRAM] int 
  4524 ;;  i               2   29[COMRAM] int 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2   22[COMRAM] int 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:       11 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 8
  4541 ;; This function calls:
  4542 ;;		_fputc
  4543 ;;		_fputs
  4544 ;;		_strlen
  4545 ;; This function is called by:
  4546 ;;		_efgtoa
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text9
  4551  003DB0                     __ptext9:
  4552                           	callstack 0
  4553  003DB0                     _pad:
  4554                           	callstack 18
  4555  003DB0                     
  4556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4557  003DB0  0100               	movlb	0	; () banked
  4558  003DB2  A1F5               	btfss	_flags& (0+255),0,b
  4559  003DB4  EFDE  F01E         	goto	u7191
  4560  003DB8  EFE0  F01E         	goto	u7190
  4561  003DBC                     u7191:
  4562  003DBC  EFEA  F01E         	goto	l6900
  4563  003DC0                     u7190:
  4564  003DC0                     
  4565                           ; BSR set to: 0
  4566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4567  003DC0  C019  F010         	movff	pad@buf,fputs@s
  4568  003DC4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4569  003DC8  C017  F012         	movff	pad@fp,fputs@fp
  4570  003DCC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4571  003DD0  EC4B  F025         	call	_fputs	;wreg free
  4572  003DD4                     l6900:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4575  003DD4  BE1C               	btfsc	(pad@p+1)^0,7,c
  4576  003DD6  EFEF  F01E         	goto	u7201
  4577  003DDA  EFF1  F01E         	goto	u7200
  4578  003DDE                     u7201:
  4579  003DDE  EFF7  F01E         	goto	l6904
  4580  003DE2                     u7200:
  4581  003DE2  C01B  F020         	movff	pad@p,pad@w
  4582  003DE6  C01C  F021         	movff	pad@p+1,pad@w+1
  4583  003DEA  EFFB  F01E         	goto	l1444
  4584  003DEE                     l6904:
  4585  003DEE  0E00               	movlw	0
  4586  003DF0  6E21               	movwf	(pad@w+1)^0,c
  4587  003DF2  0E00               	movlw	0
  4588  003DF4  6E20               	movwf	pad@w^0,c
  4589  003DF6                     l1444:
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4592  003DF6  0E00               	movlw	0
  4593  003DF8  6E1F               	movwf	(pad@i+1)^0,c
  4594  003DFA  0E00               	movlw	0
  4595  003DFC  6E1E               	movwf	pad@i^0,c
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4598  003DFE  EF0D  F01F         	goto	l6910
  4599  003E02                     l6906:
  4600                           
  4601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4602  003E02  0E00               	movlw	0
  4603  003E04  6E08               	movwf	(fputc@c+1)^0,c
  4604  003E06  0E20               	movlw	32
  4605  003E08  6E07               	movwf	fputc@c^0,c
  4606  003E0A  C017  F009         	movff	pad@fp,fputc@fp
  4607  003E0E  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4608  003E12  ECB6  F021         	call	_fputc	;wreg free
  4609  003E16                     
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4611  003E16  4A1E               	infsnz	pad@i^0,f,c
  4612  003E18  2A1F               	incf	(pad@i+1)^0,f,c
  4613  003E1A                     l6910:
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4616  003E1A  5020               	movf	pad@w^0,w,c
  4617  003E1C  5C1E               	subwf	pad@i^0,w,c
  4618  003E1E  501F               	movf	(pad@i+1)^0,w,c
  4619  003E20  0A80               	xorlw	128
  4620  003E22  6E1D               	movwf	??_pad^0,c
  4621  003E24  5021               	movf	(pad@w+1)^0,w,c
  4622  003E26  0A80               	xorlw	128
  4623  003E28  581D               	subwfb	??_pad^0,w,c
  4624  003E2A  A0D8               	btfss	status,0,c
  4625  003E2C  EF1A  F01F         	goto	u7211
  4626  003E30  EF1C  F01F         	goto	u7210
  4627  003E34                     u7211:
  4628  003E34  EF01  F01F         	goto	l6906
  4629  003E38                     u7210:
  4630  003E38                     
  4631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4632  003E38  0100               	movlb	0	; () banked
  4633  003E3A  B1F5               	btfsc	_flags& (0+255),0,b
  4634  003E3C  EF22  F01F         	goto	u7221
  4635  003E40  EF24  F01F         	goto	u7220
  4636  003E44                     u7221:
  4637  003E44  EF2E  F01F         	goto	l6914
  4638  003E48                     u7220:
  4639  003E48                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4642  003E48  C019  F010         	movff	pad@buf,fputs@s
  4643  003E4C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4644  003E50  C017  F012         	movff	pad@fp,fputs@fp
  4645  003E54  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4646  003E58  EC4B  F025         	call	_fputs	;wreg free
  4647  003E5C                     l6914:
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4650  003E5C  C019  F005         	movff	pad@buf,strlen@s
  4651  003E60  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4652  003E64  EC24  F026         	call	_strlen	;wreg free
  4653  003E68  5020               	movf	pad@w^0,w,c
  4654  003E6A  2405               	addwf	?_strlen^0,w,c
  4655  003E6C  6E17               	movwf	?_pad^0,c
  4656  003E6E  5021               	movf	(pad@w+1)^0,w,c
  4657  003E70  2006               	addwfc	(?_strlen+1)^0,w,c
  4658  003E72  6E18               	movwf	(?_pad+1)^0,c
  4659  003E74  0012               	return		;funcret
  4660  003E76                     __end_of_pad:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _strlen *****************
  4664 ;; Defined at:
  4665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4668 ;;		 -> dbuf(80), 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4671 ;;		 -> dbuf(80), 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2    4[COMRAM] unsigned int 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        4 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 4
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_pad
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text10
  4696  004C48                     __ptext10:
  4697                           	callstack 0
  4698  004C48                     _strlen:
  4699                           	callstack 21
  4700  004C48  C005  F007         	movff	strlen@s,strlen@a
  4701  004C4C  C006  F008         	movff	strlen@s+1,strlen@a+1
  4702  004C50  EF2C  F026         	goto	l6436
  4703  004C54                     l6434:
  4704  004C54  4A05               	infsnz	strlen@s^0,f,c
  4705  004C56  2A06               	incf	(strlen@s+1)^0,f,c
  4706  004C58                     l6436:
  4707  004C58  C005  FFD9         	movff	strlen@s,fsr2l
  4708  004C5C  C006  FFDA         	movff	strlen@s+1,fsr2h
  4709  004C60  50DF               	movf	indf2,w,c
  4710  004C62  A4D8               	btfss	status,2,c
  4711  004C64  EF36  F026         	goto	u6461
  4712  004C68  EF38  F026         	goto	u6460
  4713  004C6C                     u6461:
  4714  004C6C  EF2A  F026         	goto	l6434
  4715  004C70                     u6460:
  4716  004C70  5007               	movf	strlen@a^0,w,c
  4717  004C72  5C05               	subwf	strlen@s^0,w,c
  4718  004C74  6E05               	movwf	?_strlen^0,c
  4719  004C76  5008               	movf	(strlen@a+1)^0,w,c
  4720  004C78  5806               	subwfb	(strlen@s+1)^0,w,c
  4721  004C7A  6E06               	movwf	(?_strlen+1)^0,c
  4722  004C7C  0012               	return		;funcret
  4723  004C7E                     __end_of_strlen:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _fputs *****************
  4727 ;; Defined at:
  4728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4731 ;;		 -> dbuf(80), 
  4732 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4733 ;;		 -> NULL(0), 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  i               2   20[COMRAM] int 
  4736 ;;  c               1   19[COMRAM] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2   15[COMRAM] int 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:        7 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 7
  4753 ;; This function calls:
  4754 ;;		_fputc
  4755 ;; This function is called by:
  4756 ;;		_pad
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text11
  4761  004A96                     __ptext11:
  4762                           	callstack 0
  4763  004A96                     _fputs:
  4764                           	callstack 18
  4765  004A96  0E00               	movlw	0
  4766  004A98  6E16               	movwf	(fputs@i+1)^0,c
  4767  004A9A  0E00               	movlw	0
  4768  004A9C  6E15               	movwf	fputs@i^0,c
  4769  004A9E  EF5C  F025         	goto	l6430
  4770  004AA2                     l6426:
  4771  004AA2  C014  F007         	movff	fputs@c,fputc@c
  4772  004AA6  6A08               	clrf	(fputc@c+1)^0,c
  4773  004AA8  C012  F009         	movff	fputs@fp,fputc@fp
  4774  004AAC  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4775  004AB0  ECB6  F021         	call	_fputc	;wreg free
  4776  004AB4  4A15               	infsnz	fputs@i^0,f,c
  4777  004AB6  2A16               	incf	(fputs@i+1)^0,f,c
  4778  004AB8                     l6430:
  4779  004AB8  5015               	movf	fputs@i^0,w,c
  4780  004ABA  2410               	addwf	fputs@s^0,w,c
  4781  004ABC  6ED9               	movwf	fsr2l,c
  4782  004ABE  5016               	movf	(fputs@i+1)^0,w,c
  4783  004AC0  2011               	addwfc	(fputs@s+1)^0,w,c
  4784  004AC2  6EDA               	movwf	fsr2h,c
  4785  004AC4  50DF               	movf	indf2,w,c
  4786  004AC6  6E14               	movwf	fputs@c^0,c
  4787  004AC8  5014               	movf	fputs@c^0,w,c
  4788  004ACA  A4D8               	btfss	status,2,c
  4789  004ACC  EF6A  F025         	goto	u6451
  4790  004AD0  EF6C  F025         	goto	u6450
  4791  004AD4                     u6451:
  4792  004AD4  EF51  F025         	goto	l6426
  4793  004AD8                     u6450:
  4794  004AD8  0012               	return		;funcret
  4795  004ADA                     __end_of_fputs:
  4796                           	callstack 0
  4797                           
  4798 ;; *************** function _fputc *****************
  4799 ;; Defined at:
  4800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  c               2    6[COMRAM] int 
  4803 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4804 ;;		 -> NULL(0), 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  2    6[COMRAM] int 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;Total ram usage:        9 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 6
  4823 ;; This function calls:
  4824 ;;		_putch
  4825 ;; This function is called by:
  4826 ;;		_pad
  4827 ;;		_vfpfcnvrt
  4828 ;;		_fputs
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text12
  4833  00436C                     __ptext12:
  4834                           	callstack 0
  4835  00436C                     _fputc:
  4836                           	callstack 21
  4837  00436C  5009               	movf	fputc@fp^0,w,c
  4838  00436E  100A               	iorwf	(fputc@fp+1)^0,w,c
  4839  004370  B4D8               	btfsc	status,2,c
  4840  004372  EFBD  F021         	goto	u6021
  4841  004376  EFBF  F021         	goto	u6020
  4842  00437A                     u6021:
  4843  00437A  EFC8  F021         	goto	l6212
  4844  00437E                     u6020:
  4845  00437E  5009               	movf	fputc@fp^0,w,c
  4846  004380  100A               	iorwf	(fputc@fp+1)^0,w,c
  4847  004382  A4D8               	btfss	status,2,c
  4848  004384  EFC6  F021         	goto	u6031
  4849  004388  EFC8  F021         	goto	u6030
  4850  00438C                     u6031:
  4851  00438C  EFCD  F021         	goto	l6214
  4852  004390                     u6030:
  4853  004390                     l6212:
  4854  004390  5007               	movf	fputc@c^0,w,c
  4855  004392  EC95  F027         	call	_putch
  4856  004396  EF00  F022         	goto	l1660
  4857  00439A                     l6214:
  4858  00439A  EE20 F004          	lfsr	2,4
  4859  00439E  5009               	movf	fputc@fp^0,w,c
  4860  0043A0  26D9               	addwf	fsr2l,f,c
  4861  0043A2  500A               	movf	(fputc@fp+1)^0,w,c
  4862  0043A4  22DA               	addwfc	fsr2h,f,c
  4863  0043A6  50DE               	movf	postinc2,w,c
  4864  0043A8  10DE               	iorwf	postinc2,w,c
  4865  0043AA  B4D8               	btfsc	status,2,c
  4866  0043AC  EFDA  F021         	goto	u6041
  4867  0043B0  EFDC  F021         	goto	u6040
  4868  0043B4                     u6041:
  4869  0043B4  EFF7  F021         	goto	l6218
  4870  0043B8                     u6040:
  4871  0043B8  EE20 F004          	lfsr	2,4
  4872  0043BC  5009               	movf	fputc@fp^0,w,c
  4873  0043BE  26D9               	addwf	fsr2l,f,c
  4874  0043C0  500A               	movf	(fputc@fp+1)^0,w,c
  4875  0043C2  22DA               	addwfc	fsr2h,f,c
  4876  0043C4  EE10 F002          	lfsr	1,2
  4877  0043C8  5009               	movf	fputc@fp^0,w,c
  4878  0043CA  26E1               	addwf	fsr1l,f,c
  4879  0043CC  500A               	movf	(fputc@fp+1)^0,w,c
  4880  0043CE  22E2               	addwfc	fsr1h,f,c
  4881  0043D0  50DE               	movf	postinc2,w,c
  4882  0043D2  5CE6               	subwf	postinc1,w,c
  4883  0043D4  50E6               	movf	postinc1,w,c
  4884  0043D6  0A80               	xorlw	128
  4885  0043D8  6E0F               	movwf	(??_fputc+4)^0,c
  4886  0043DA  50DE               	movf	postinc2,w,c
  4887  0043DC  0A80               	xorlw	128
  4888  0043DE  580F               	subwfb	(??_fputc+4)^0,w,c
  4889  0043E0  B0D8               	btfsc	status,0,c
  4890  0043E2  EFF5  F021         	goto	u6051
  4891  0043E6  EFF7  F021         	goto	u6050
  4892  0043EA                     u6051:
  4893  0043EA  EF00  F022         	goto	l1660
  4894  0043EE                     u6050:
  4895  0043EE                     l6218:
  4896  0043EE  EE20 F002          	lfsr	2,2
  4897  0043F2  5009               	movf	fputc@fp^0,w,c
  4898  0043F4  26D9               	addwf	fsr2l,f,c
  4899  0043F6  500A               	movf	(fputc@fp+1)^0,w,c
  4900  0043F8  22DA               	addwfc	fsr2h,f,c
  4901  0043FA  2ADE               	incf	postinc2,f,c
  4902  0043FC  0E00               	movlw	0
  4903  0043FE  22DD               	addwfc	postdec2,f,c
  4904  004400                     l1660:
  4905  004400  0012               	return		;funcret
  4906  004402                     __end_of_fputc:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _putch *****************
  4910 ;; Defined at:
  4911 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  txData          1    wreg     unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  txData          1    5[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;Total ram usage:        1 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 5
  4932 ;; This function calls:
  4933 ;;		_EUSART_Write
  4934 ;; This function is called by:
  4935 ;;		_fputc
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text13
  4940  004F2A                     __ptext13:
  4941                           	callstack 0
  4942  004F2A                     _putch:
  4943                           	callstack 21
  4944                           
  4945                           ;incstack = 0
  4946                           ;putch@txData stored from wreg
  4947  004F2A  6E06               	movwf	putch@txData^0,c
  4948  004F2C                     
  4949                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4950  004F2C  5006               	movf	putch@txData^0,w,c
  4951  004F2E  ECA9  F024         	call	_EUSART_Write
  4952  004F32  0012               	return		;funcret
  4953  004F34                     __end_of_putch:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function _EUSART_Write *****************
  4957 ;; Defined at:
  4958 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  txData          1    wreg     unsigned char 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  txData          1    4[COMRAM] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;Total ram usage:        1 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 4
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_putch
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text14
  4987  004952                     __ptext14:
  4988                           	callstack 0
  4989  004952                     _EUSART_Write:
  4990                           	callstack 21
  4991                           
  4992                           ;incstack = 0
  4993                           ;EUSART_Write@txData stored from wreg
  4994  004952  6E05               	movwf	EUSART_Write@txData^0,c
  4995  004954                     l6190:
  4996                           
  4997                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4998  004954  0100               	movlb	0	; () banked
  4999  004956  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  5000  004958  B4D8               	btfsc	status,2,c
  5001  00495A  EFB1  F024         	goto	u5991
  5002  00495E  EFB3  F024         	goto	u5990
  5003  004962                     u5991:
  5004  004962  EFAA  F024         	goto	l6190
  5005  004966                     u5990:
  5006  004966                     
  5007                           ; BSR set to: 0
  5008                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  5009  004966  B89D               	btfsc	157,4,c	;volatile
  5010  004968  EFB8  F024         	goto	u6001
  5011  00496C  EFBA  F024         	goto	u6000
  5012  004970                     u6001:
  5013  004970  EFBE  F024         	goto	l621
  5014  004974                     u6000:
  5015  004974                     
  5016                           ; BSR set to: 0
  5017                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  5018  004974  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  5019                           
  5020                           ;mcc_generated_files/eusart.c: 182:     }
  5021  004978  EFD3  F024         	goto	l6204
  5022  00497C                     l621:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  5026  00497C  989D               	bcf	157,4,c	;volatile
  5027  00497E                     
  5028                           ; BSR set to: 0
  5029                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5030  00497E  0E10               	movlw	low _eusartTxBuffer
  5031  004980  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  5032  004982  6ED9               	movwf	fsr2l,c
  5033  004984  6ADA               	clrf	fsr2h,c
  5034  004986  0E01               	movlw	high _eusartTxBuffer
  5035  004988  22DA               	addwfc	fsr2h,f,c
  5036  00498A  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5037  00498E                     
  5038                           ; BSR set to: 0
  5039  00498E  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  5040  004990                     
  5041                           ; BSR set to: 0
  5042                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5043  004990  0E07               	movlw	7
  5044  004992  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  5045  004994  EFCE  F024         	goto	u6011
  5046  004998  EFD0  F024         	goto	u6010
  5047  00499C                     u6011:
  5048  00499C  EFD2  F024         	goto	l6202
  5049  0049A0                     u6010:
  5050  0049A0                     
  5051                           ; BSR set to: 0
  5052                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5053  0049A0  0E00               	movlw	0
  5054  0049A2  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  5055  0049A4                     l6202:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5059  0049A4  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5060  0049A6                     l6204:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5064  0049A6  889D               	bsf	157,4,c	;volatile
  5065  0049A8                     
  5066                           ; BSR set to: 0
  5067  0049A8  0012               	return		;funcret
  5068  0049AA                     __end_of_EUSART_Write:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _floorf *****************
  5072 ;; Defined at:
  5073 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  x               4   29[COMRAM] float 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  u               4   45[COMRAM] struct .
  5078 ;;  m               4   39[COMRAM] unsigned long 
  5079 ;;  e               2   43[COMRAM] int 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  4   29[COMRAM] float 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:       20 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 4
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_efgtoa
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text15
  5104  0032F6                     __ptext15:
  5105                           	callstack 0
  5106  0032F6                     _floorf:
  5107                           	callstack 22
  5108  0032F6  C0E4  F02E         	movff	floorf@F527,floorf@u
  5109  0032FA  C0E5  F02F         	movff	floorf@F527+1,floorf@u+1
  5110  0032FE  C0E6  F030         	movff	floorf@F527+2,floorf@u+2
  5111  003302  C0E7  F031         	movff	floorf@F527+3,floorf@u+3
  5112  003306  C01E  F02E         	movff	floorf@x,floorf@u
  5113  00330A  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  5114  00330E  C020  F030         	movff	floorf@x+2,floorf@u+2
  5115  003312  C021  F031         	movff	floorf@x+3,floorf@u+3
  5116  003316  0E81               	movlw	129
  5117  003318  6E22               	movwf	??_floorf^0,c
  5118  00331A  0EFF               	movlw	255
  5119  00331C  6E23               	movwf	(??_floorf+1)^0,c
  5120  00331E  C02E  F024         	movff	floorf@u,??_floorf+2
  5121  003322  C02F  F025         	movff	floorf@u+1,??_floorf+3
  5122  003326  C030  F026         	movff	floorf@u+2,??_floorf+4
  5123  00332A  C031  F027         	movff	floorf@u+3,??_floorf+5
  5124  00332E  0E18               	movlw	24
  5125  003330  EF9F  F019         	goto	u7350
  5126  003334                     u7355:
  5127  003334  90D8               	bcf	status,0,c
  5128  003336  3227               	rrcf	(??_floorf+5)^0,f,c
  5129  003338  3226               	rrcf	(??_floorf+4)^0,f,c
  5130  00333A  3225               	rrcf	(??_floorf+3)^0,f,c
  5131  00333C  3224               	rrcf	(??_floorf+2)^0,f,c
  5132  00333E                     u7350:
  5133  00333E  2EE8               	decfsz	wreg,f,c
  5134  003340  EF9A  F019         	goto	u7355
  5135  003344  5024               	movf	(??_floorf+2)^0,w,c
  5136  003346  2422               	addwf	??_floorf^0,w,c
  5137  003348  6E2C               	movwf	floorf@e^0,c
  5138  00334A  0E00               	movlw	0
  5139  00334C  2023               	addwfc	(??_floorf+1)^0,w,c
  5140  00334E  6E2D               	movwf	(floorf@e+1)^0,c
  5141  003350  BE2D               	btfsc	(floorf@e+1)^0,7,c
  5142  003352  EFB4  F019         	goto	u7361
  5143  003356  502D               	movf	(floorf@e+1)^0,w,c
  5144  003358  E109               	bnz	u7360
  5145  00335A  0E17               	movlw	23
  5146  00335C  5C2C               	subwf	floorf@e^0,w,c
  5147  00335E  A0D8               	btfss	status,0,c
  5148  003360  EFB4  F019         	goto	u7361
  5149  003364  EFB6  F019         	goto	u7360
  5150  003368                     u7361:
  5151  003368  EFC0  F019         	goto	l6960
  5152  00336C                     u7360:
  5153  00336C                     l6958:
  5154  00336C  C01E  F01E         	movff	floorf@x,?_floorf
  5155  003370  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  5156  003374  C020  F020         	movff	floorf@x+2,?_floorf+2
  5157  003378  C021  F021         	movff	floorf@x+3,?_floorf+3
  5158  00337C  EF83  F01A         	goto	l1621
  5159  003380                     l6960:
  5160  003380  BE2D               	btfsc	(floorf@e+1)^0,7,c
  5161  003382  EFC5  F019         	goto	u7371
  5162  003386  EFC7  F019         	goto	u7370
  5163  00338A                     u7371:
  5164  00338A  EF37  F01A         	goto	l6970
  5165  00338E                     u7370:
  5166  00338E  C02C  F022         	movff	floorf@e,??_floorf
  5167  003392  0EFF               	movlw	255
  5168  003394  6E23               	movwf	(??_floorf+1)^0,c
  5169  003396  0EFF               	movlw	255
  5170  003398  6E24               	movwf	(??_floorf+2)^0,c
  5171  00339A  0E7F               	movlw	127
  5172  00339C  6E25               	movwf	(??_floorf+3)^0,c
  5173  00339E  0E00               	movlw	0
  5174  0033A0  6E26               	movwf	(??_floorf+4)^0,c
  5175  0033A2                     u7385:
  5176  0033A2  6622               	tstfsz	??_floorf^0,c
  5177  0033A4  EFD6  F019         	goto	u7386
  5178  0033A8  EFDE  F019         	goto	u7387
  5179  0033AC                     u7386:
  5180  0033AC  3426               	rlcf	(??_floorf+4)^0,w,c
  5181  0033AE  3226               	rrcf	(??_floorf+4)^0,f,c
  5182  0033B0  3225               	rrcf	(??_floorf+3)^0,f,c
  5183  0033B2  3224               	rrcf	(??_floorf+2)^0,f,c
  5184  0033B4  3223               	rrcf	(??_floorf+1)^0,f,c
  5185  0033B6  2E22               	decfsz	??_floorf^0,f,c
  5186  0033B8  EFD1  F019         	goto	u7385
  5187  0033BC                     u7387:
  5188  0033BC  C023  F028         	movff	??_floorf+1,floorf@m
  5189  0033C0  C024  F029         	movff	??_floorf+2,floorf@m+1
  5190  0033C4  C025  F02A         	movff	??_floorf+3,floorf@m+2
  5191  0033C8  C026  F02B         	movff	??_floorf+4,floorf@m+3
  5192  0033CC  5028               	movf	floorf@m^0,w,c
  5193  0033CE  142E               	andwf	floorf@u^0,w,c
  5194  0033D0  6E22               	movwf	??_floorf^0,c
  5195  0033D2  5029               	movf	(floorf@m+1)^0,w,c
  5196  0033D4  142F               	andwf	(floorf@u+1)^0,w,c
  5197  0033D6  6E23               	movwf	(??_floorf+1)^0,c
  5198  0033D8  502A               	movf	(floorf@m+2)^0,w,c
  5199  0033DA  1430               	andwf	(floorf@u+2)^0,w,c
  5200  0033DC  6E24               	movwf	(??_floorf+2)^0,c
  5201  0033DE  502B               	movf	(floorf@m+3)^0,w,c
  5202  0033E0  1431               	andwf	(floorf@u+3)^0,w,c
  5203  0033E2  6E25               	movwf	(??_floorf+3)^0,c
  5204  0033E4  5022               	movf	??_floorf^0,w,c
  5205  0033E6  1023               	iorwf	(??_floorf+1)^0,w,c
  5206  0033E8  1024               	iorwf	(??_floorf+2)^0,w,c
  5207  0033EA  1025               	iorwf	(??_floorf+3)^0,w,c
  5208  0033EC  A4D8               	btfss	status,2,c
  5209  0033EE  EFFB  F019         	goto	u7391
  5210  0033F2  EFFD  F019         	goto	u7390
  5211  0033F6                     u7391:
  5212  0033F6  EFFF  F019         	goto	l6966
  5213  0033FA                     u7390:
  5214  0033FA  EFB6  F019         	goto	l6958
  5215  0033FE                     l6966:
  5216  0033FE  C02E  F022         	movff	floorf@u,??_floorf
  5217  003402  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5218  003406  C030  F024         	movff	floorf@u+2,??_floorf+2
  5219  00340A  C031  F025         	movff	floorf@u+3,??_floorf+3
  5220  00340E  0E20               	movlw	32
  5221  003410  EF0F  F01A         	goto	u7400
  5222  003414                     u7405:
  5223  003414  90D8               	bcf	status,0,c
  5224  003416  3225               	rrcf	(??_floorf+3)^0,f,c
  5225  003418  3224               	rrcf	(??_floorf+2)^0,f,c
  5226  00341A  3223               	rrcf	(??_floorf+1)^0,f,c
  5227  00341C  3222               	rrcf	??_floorf^0,f,c
  5228  00341E                     u7400:
  5229  00341E  2EE8               	decfsz	wreg,f,c
  5230  003420  EF0A  F01A         	goto	u7405
  5231  003424  5022               	movf	??_floorf^0,w,c
  5232  003426  1023               	iorwf	(??_floorf+1)^0,w,c
  5233  003428  1024               	iorwf	(??_floorf+2)^0,w,c
  5234  00342A  1025               	iorwf	(??_floorf+3)^0,w,c
  5235  00342C  B4D8               	btfsc	status,2,c
  5236  00342E  EF1B  F01A         	goto	u7411
  5237  003432  EF1D  F01A         	goto	u7410
  5238  003436                     u7411:
  5239  003436  EF25  F01A         	goto	l1624
  5240  00343A                     u7410:
  5241  00343A  5028               	movf	floorf@m^0,w,c
  5242  00343C  262E               	addwf	floorf@u^0,f,c
  5243  00343E  5029               	movf	(floorf@m+1)^0,w,c
  5244  003440  222F               	addwfc	(floorf@u+1)^0,f,c
  5245  003442  502A               	movf	(floorf@m+2)^0,w,c
  5246  003444  2230               	addwfc	(floorf@u+2)^0,f,c
  5247  003446  502B               	movf	(floorf@m+3)^0,w,c
  5248  003448  2231               	addwfc	(floorf@u+3)^0,f,c
  5249  00344A                     l1624:
  5250  00344A  1C28               	comf	floorf@m^0,w,c
  5251  00344C  6E22               	movwf	??_floorf^0,c
  5252  00344E  1C29               	comf	(floorf@m+1)^0,w,c
  5253  003450  6E23               	movwf	(??_floorf+1)^0,c
  5254  003452  1C2A               	comf	(floorf@m+2)^0,w,c
  5255  003454  6E24               	movwf	(??_floorf+2)^0,c
  5256  003456  1C2B               	comf	(floorf@m+3)^0,w,c
  5257  003458  6E25               	movwf	(??_floorf+3)^0,c
  5258  00345A  5022               	movf	??_floorf^0,w,c
  5259  00345C  162E               	andwf	floorf@u^0,f,c
  5260  00345E  5023               	movf	(??_floorf+1)^0,w,c
  5261  003460  162F               	andwf	(floorf@u+1)^0,f,c
  5262  003462  5024               	movf	(??_floorf+2)^0,w,c
  5263  003464  1630               	andwf	(floorf@u+2)^0,f,c
  5264  003466  5025               	movf	(??_floorf+3)^0,w,c
  5265  003468  1631               	andwf	(floorf@u+3)^0,f,c
  5266  00346A  EF7B  F01A         	goto	l6978
  5267  00346E                     l6970:
  5268  00346E  C02E  F022         	movff	floorf@u,??_floorf
  5269  003472  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5270  003476  C030  F024         	movff	floorf@u+2,??_floorf+2
  5271  00347A  C031  F025         	movff	floorf@u+3,??_floorf+3
  5272  00347E  0E20               	movlw	32
  5273  003480  EF47  F01A         	goto	u7420
  5274  003484                     u7425:
  5275  003484  90D8               	bcf	status,0,c
  5276  003486  3225               	rrcf	(??_floorf+3)^0,f,c
  5277  003488  3224               	rrcf	(??_floorf+2)^0,f,c
  5278  00348A  3223               	rrcf	(??_floorf+1)^0,f,c
  5279  00348C  3222               	rrcf	??_floorf^0,f,c
  5280  00348E                     u7420:
  5281  00348E  2EE8               	decfsz	wreg,f,c
  5282  003490  EF42  F01A         	goto	u7425
  5283  003494  5022               	movf	??_floorf^0,w,c
  5284  003496  1023               	iorwf	(??_floorf+1)^0,w,c
  5285  003498  1024               	iorwf	(??_floorf+2)^0,w,c
  5286  00349A  1025               	iorwf	(??_floorf+3)^0,w,c
  5287  00349C  A4D8               	btfss	status,2,c
  5288  00349E  EF53  F01A         	goto	u7431
  5289  0034A2  EF55  F01A         	goto	u7430
  5290  0034A6                     u7431:
  5291  0034A6  EF5F  F01A         	goto	l6974
  5292  0034AA                     u7430:
  5293  0034AA  0E00               	movlw	0
  5294  0034AC  6E2E               	movwf	floorf@u^0,c
  5295  0034AE  0E00               	movlw	0
  5296  0034B0  6E2F               	movwf	(floorf@u+1)^0,c
  5297  0034B2  0E00               	movlw	0
  5298  0034B4  6E30               	movwf	(floorf@u+2)^0,c
  5299  0034B6  0E00               	movlw	0
  5300  0034B8  6E31               	movwf	(floorf@u+3)^0,c
  5301  0034BA  EF7B  F01A         	goto	l6978
  5302  0034BE                     l6974:
  5303  0034BE  90D8               	bcf	status,0,c
  5304  0034C0  342E               	rlcf	floorf@u^0,w,c
  5305  0034C2  6E22               	movwf	??_floorf^0,c
  5306  0034C4  342F               	rlcf	(floorf@u+1)^0,w,c
  5307  0034C6  6E23               	movwf	(??_floorf+1)^0,c
  5308  0034C8  3430               	rlcf	(floorf@u+2)^0,w,c
  5309  0034CA  6E24               	movwf	(??_floorf+2)^0,c
  5310  0034CC  3431               	rlcf	(floorf@u+3)^0,w,c
  5311  0034CE  6E25               	movwf	(??_floorf+3)^0,c
  5312  0034D0  5022               	movf	??_floorf^0,w,c
  5313  0034D2  1023               	iorwf	(??_floorf+1)^0,w,c
  5314  0034D4  1024               	iorwf	(??_floorf+2)^0,w,c
  5315  0034D6  1025               	iorwf	(??_floorf+3)^0,w,c
  5316  0034D8  B4D8               	btfsc	status,2,c
  5317  0034DA  EF71  F01A         	goto	u7441
  5318  0034DE  EF73  F01A         	goto	u7440
  5319  0034E2                     u7441:
  5320  0034E2  EF7B  F01A         	goto	l6978
  5321  0034E6                     u7440:
  5322  0034E6  0E00               	movlw	0
  5323  0034E8  6E2E               	movwf	floorf@u^0,c
  5324  0034EA  0E00               	movlw	0
  5325  0034EC  6E2F               	movwf	(floorf@u+1)^0,c
  5326  0034EE  0E80               	movlw	128
  5327  0034F0  6E30               	movwf	(floorf@u+2)^0,c
  5328  0034F2  0EBF               	movlw	191
  5329  0034F4  6E31               	movwf	(floorf@u+3)^0,c
  5330  0034F6                     l6978:
  5331  0034F6  C02E  F01E         	movff	floorf@u,?_floorf
  5332  0034FA  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  5333  0034FE  C030  F020         	movff	floorf@u+2,?_floorf+2
  5334  003502  C031  F021         	movff	floorf@u+3,?_floorf+3
  5335  003506                     l1621:
  5336  003506  0012               	return		;funcret
  5337  003508                     __end_of_floorf:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function ___fpclassifyf *****************
  5341 ;; Defined at:
  5342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  x               4    4[COMRAM] float 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  u               4   14[COMRAM] struct .
  5347 ;;  e               2   12[COMRAM] int 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2    4[COMRAM] int 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;Total ram usage:       14 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 4
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_efgtoa
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text16
  5372  003BD6                     __ptext16:
  5373                           	callstack 0
  5374  003BD6                     ___fpclassifyf:
  5375                           	callstack 22
  5376  003BD6  C0E8  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5377  003BDA  C0E9  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5378  003BDE  C0EA  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5379  003BE2  C0EB  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5380  003BE6  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5381  003BEA  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5382  003BEE  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5383  003BF2  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5384  003BF6  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5385  003BFA  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5386  003BFE  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5387  003C02  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5388  003C06  0E18               	movlw	24
  5389  003C08  EF0B  F01E         	goto	u7230
  5390  003C0C                     u7235:
  5391  003C0C  90D8               	bcf	status,0,c
  5392  003C0E  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5393  003C10  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5394  003C12  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5395  003C14  3209               	rrcf	??___fpclassifyf^0,f,c
  5396  003C16                     u7230:
  5397  003C16  2EE8               	decfsz	wreg,f,c
  5398  003C18  EF06  F01E         	goto	u7235
  5399  003C1C  5009               	movf	??___fpclassifyf^0,w,c
  5400  003C1E  6E0D               	movwf	___fpclassifyf@e^0,c
  5401  003C20  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5402  003C22  500D               	movf	___fpclassifyf@e^0,w,c
  5403  003C24  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5404  003C26  A4D8               	btfss	status,2,c
  5405  003C28  EF18  F01E         	goto	u7241
  5406  003C2C  EF1A  F01E         	goto	u7240
  5407  003C30                     u7241:
  5408  003C30  EF3A  F01E         	goto	l6930
  5409  003C34                     u7240:
  5410  003C34  90D8               	bcf	status,0,c
  5411  003C36  340F               	rlcf	___fpclassifyf@u^0,w,c
  5412  003C38  6E09               	movwf	??___fpclassifyf^0,c
  5413  003C3A  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5414  003C3C  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5415  003C3E  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5416  003C40  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5417  003C42  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5418  003C44  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5419  003C46  5009               	movf	??___fpclassifyf^0,w,c
  5420  003C48  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5421  003C4A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5422  003C4C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5423  003C4E  A4D8               	btfss	status,2,c
  5424  003C50  EF2C  F01E         	goto	u7251
  5425  003C54  EF2E  F01E         	goto	u7250
  5426  003C58                     u7251:
  5427  003C58  EF34  F01E         	goto	l6926
  5428  003C5C                     u7250:
  5429  003C5C  0E00               	movlw	0
  5430  003C5E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5431  003C60  0E02               	movlw	2
  5432  003C62  6E05               	movwf	?___fpclassifyf^0,c
  5433  003C64  EF69  F01E         	goto	l1583
  5434  003C68                     l6926:
  5435  003C68  0E00               	movlw	0
  5436  003C6A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5437  003C6C  0E03               	movlw	3
  5438  003C6E  6E05               	movwf	?___fpclassifyf^0,c
  5439  003C70  EF69  F01E         	goto	l1583
  5440  003C74                     l6930:
  5441  003C74  280D               	incf	___fpclassifyf@e^0,w,c
  5442  003C76  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5443  003C78  A4D8               	btfss	status,2,c
  5444  003C7A  EF41  F01E         	goto	u7261
  5445  003C7E  EF43  F01E         	goto	u7260
  5446  003C82                     u7261:
  5447  003C82  EF65  F01E         	goto	l6936
  5448  003C86                     u7260:
  5449  003C86  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5450  003C8A  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5451  003C8E  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5452  003C92  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5453  003C96  0E09               	movlw	9
  5454  003C98                     u7275:
  5455  003C98  90D8               	bcf	status,0,c
  5456  003C9A  3609               	rlcf	??___fpclassifyf^0,f,c
  5457  003C9C  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5458  003C9E  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5459  003CA0  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5460  003CA2  2EE8               	decfsz	wreg,f,c
  5461  003CA4  EF4C  F01E         	goto	u7275
  5462  003CA8  5009               	movf	??___fpclassifyf^0,w,c
  5463  003CAA  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5464  003CAC  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5465  003CAE  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5466  003CB0  B4D8               	btfsc	status,2,c
  5467  003CB2  EF5D  F01E         	goto	u7281
  5468  003CB6  EF60  F01E         	goto	u7280
  5469  003CBA                     u7281:
  5470  003CBA  0E01               	movlw	1
  5471  003CBC  EF61  F01E         	goto	u7290
  5472  003CC0                     u7280:
  5473  003CC0  0E00               	movlw	0
  5474  003CC2                     u7290:
  5475  003CC2  6E05               	movwf	?___fpclassifyf^0,c
  5476  003CC4  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5477  003CC6  EF69  F01E         	goto	l1583
  5478  003CCA                     l6936:
  5479  003CCA  0E00               	movlw	0
  5480  003CCC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5481  003CCE  0E04               	movlw	4
  5482  003CD0  6E05               	movwf	?___fpclassifyf^0,c
  5483  003CD2                     l1583:
  5484  003CD2  0012               	return		;funcret
  5485  003CD4                     __end_of___fpclassifyf:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function ___fltol *****************
  5489 ;; Defined at:
  5490 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  f1              4    4[COMRAM] int 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  exp1            1   13[COMRAM] unsigned char 
  5495 ;;  sign1           1   12[COMRAM] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4    4[COMRAM] long 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;Total ram usage:       10 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 4
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_efgtoa
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text17
  5520  0039CC                     __ptext17:
  5521                           	callstack 0
  5522  0039CC                     ___fltol:
  5523                           	callstack 22
  5524  0039CC  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5525  0039CE  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5526  0039D0  6E0E               	movwf	___fltol@exp1^0,c
  5527  0039D2  500E               	movf	___fltol@exp1^0,w,c
  5528  0039D4  A4D8               	btfss	status,2,c
  5529  0039D6  EFEF  F01C         	goto	u7121
  5530  0039DA  EFF1  F01C         	goto	u7120
  5531  0039DE                     u7121:
  5532  0039DE  EFFB  F01C         	goto	l6858
  5533  0039E2                     u7120:
  5534  0039E2                     l6854:
  5535  0039E2  0E00               	movlw	0
  5536  0039E4  6E05               	movwf	?___fltol^0,c
  5537  0039E6  0E00               	movlw	0
  5538  0039E8  6E06               	movwf	(?___fltol+1)^0,c
  5539  0039EA  0E00               	movlw	0
  5540  0039EC  6E07               	movwf	(?___fltol+2)^0,c
  5541  0039EE  0E00               	movlw	0
  5542  0039F0  6E08               	movwf	(?___fltol+3)^0,c
  5543  0039F2  EF68  F01D         	goto	l1022
  5544  0039F6                     l6858:
  5545  0039F6  C005  F009         	movff	___fltol@f1,??___fltol
  5546  0039FA  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5547  0039FE  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5548  003A02  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5549  003A06  0E20               	movlw	32
  5550  003A08  EF0B  F01D         	goto	u7130
  5551  003A0C                     u7135:
  5552  003A0C  90D8               	bcf	status,0,c
  5553  003A0E  320C               	rrcf	(??___fltol+3)^0,f,c
  5554  003A10  320B               	rrcf	(??___fltol+2)^0,f,c
  5555  003A12  320A               	rrcf	(??___fltol+1)^0,f,c
  5556  003A14  3209               	rrcf	??___fltol^0,f,c
  5557  003A16                     u7130:
  5558  003A16  2EE8               	decfsz	wreg,f,c
  5559  003A18  EF06  F01D         	goto	u7135
  5560  003A1C  5009               	movf	??___fltol^0,w,c
  5561  003A1E  6E0D               	movwf	___fltol@sign1^0,c
  5562  003A20  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5563  003A22  0EFF               	movlw	255
  5564  003A24  1605               	andwf	___fltol@f1^0,f,c
  5565  003A26  0EFF               	movlw	255
  5566  003A28  1606               	andwf	(___fltol@f1+1)^0,f,c
  5567  003A2A  0EFF               	movlw	255
  5568  003A2C  1607               	andwf	(___fltol@f1+2)^0,f,c
  5569  003A2E  0E00               	movlw	0
  5570  003A30  1608               	andwf	(___fltol@f1+3)^0,f,c
  5571  003A32  0E96               	movlw	150
  5572  003A34  5E0E               	subwf	___fltol@exp1^0,f,c
  5573  003A36  BE0E               	btfsc	___fltol@exp1^0,7,c
  5574  003A38  EF22  F01D         	goto	u7140
  5575  003A3C  EF20  F01D         	goto	u7141
  5576  003A40                     u7141:
  5577  003A40  EF38  F01D         	goto	l6878
  5578  003A44                     u7140:
  5579  003A44  500E               	movf	___fltol@exp1^0,w,c
  5580  003A46  0A80               	xorlw	128
  5581  003A48  0F97               	addlw	151
  5582  003A4A  B0D8               	btfsc	status,0,c
  5583  003A4C  EF2A  F01D         	goto	u7151
  5584  003A50  EF2C  F01D         	goto	u7150
  5585  003A54                     u7151:
  5586  003A54  EF2E  F01D         	goto	l6874
  5587  003A58                     u7150:
  5588  003A58  EFF1  F01C         	goto	l6854
  5589  003A5C                     l6874:
  5590  003A5C  90D8               	bcf	status,0,c
  5591  003A5E  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5592  003A60  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5593  003A62  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5594  003A64  3205               	rrcf	___fltol@f1^0,f,c
  5595  003A66  3E0E               	incfsz	___fltol@exp1^0,f,c
  5596  003A68  EF2E  F01D         	goto	l6874
  5597  003A6C  EF50  F01D         	goto	l6888
  5598  003A70                     l6878:
  5599  003A70  0E1F               	movlw	31
  5600  003A72  640E               	cpfsgt	___fltol@exp1^0,c
  5601  003A74  EF3E  F01D         	goto	u7161
  5602  003A78  EF40  F01D         	goto	u7160
  5603  003A7C                     u7161:
  5604  003A7C  EF48  F01D         	goto	l6886
  5605  003A80                     u7160:
  5606  003A80  EFF1  F01C         	goto	l6854
  5607  003A84                     l6884:
  5608  003A84  90D8               	bcf	status,0,c
  5609  003A86  3605               	rlcf	___fltol@f1^0,f,c
  5610  003A88  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5611  003A8A  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5612  003A8C  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5613  003A8E  060E               	decf	___fltol@exp1^0,f,c
  5614  003A90                     l6886:
  5615  003A90  500E               	movf	___fltol@exp1^0,w,c
  5616  003A92  A4D8               	btfss	status,2,c
  5617  003A94  EF4E  F01D         	goto	u7171
  5618  003A98  EF50  F01D         	goto	u7170
  5619  003A9C                     u7171:
  5620  003A9C  EF42  F01D         	goto	l6884
  5621  003AA0                     u7170:
  5622  003AA0                     l6888:
  5623  003AA0  500D               	movf	___fltol@sign1^0,w,c
  5624  003AA2  B4D8               	btfsc	status,2,c
  5625  003AA4  EF56  F01D         	goto	u7181
  5626  003AA8  EF58  F01D         	goto	u7180
  5627  003AAC                     u7181:
  5628  003AAC  EF60  F01D         	goto	l6892
  5629  003AB0                     u7180:
  5630  003AB0  1E08               	comf	(___fltol@f1+3)^0,f,c
  5631  003AB2  1E07               	comf	(___fltol@f1+2)^0,f,c
  5632  003AB4  1E06               	comf	(___fltol@f1+1)^0,f,c
  5633  003AB6  6C05               	negf	___fltol@f1^0,c
  5634  003AB8  0E00               	movlw	0
  5635  003ABA  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5636  003ABC  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5637  003ABE  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5638  003AC0                     l6892:
  5639  003AC0  C005  F005         	movff	___fltol@f1,?___fltol
  5640  003AC4  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5641  003AC8  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5642  003ACC  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5643  003AD0                     l1022:
  5644  003AD0  0012               	return		;funcret
  5645  003AD2                     __end_of___fltol:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function ___flsub *****************
  5649 ;; Defined at:
  5650 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  b               4   29[COMRAM] long 
  5653 ;;  a               4   33[COMRAM] long 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  4   29[COMRAM] long 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5665 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;Total ram usage:        8 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; Hardware stack levels required when called: 5
  5672 ;; This function calls:
  5673 ;;		___fladd
  5674 ;; This function is called by:
  5675 ;;		_efgtoa
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text18
  5680  004A50                     __ptext18:
  5681                           	callstack 0
  5682  004A50                     ___flsub:
  5683                           	callstack 21
  5684  004A50  0E00               	movlw	0
  5685  004A52  1A22               	xorwf	___flsub@a^0,f,c
  5686  004A54  0E00               	movlw	0
  5687  004A56  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5688  004A58  0E00               	movlw	0
  5689  004A5A  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5690  004A5C  0E80               	movlw	128
  5691  004A5E  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5692  004A60  C01E  F005         	movff	___flsub@b,___fladd@b
  5693  004A64  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  5694  004A68  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  5695  004A6C  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  5696  004A70  C022  F009         	movff	___flsub@a,___fladd@a
  5697  004A74  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  5698  004A78  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  5699  004A7C  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  5700  004A80  ECE9  F010         	call	___fladd	;wreg free
  5701  004A84  C005  F01E         	movff	?___fladd,?___flsub
  5702  004A88  C006  F01F         	movff	?___fladd+1,?___flsub+1
  5703  004A8C  C007  F020         	movff	?___fladd+2,?___flsub+2
  5704  004A90  C008  F021         	movff	?___fladd+3,?___flsub+3
  5705  004A94  0012               	return		;funcret
  5706  004A96                     __end_of___flsub:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function ___fladd *****************
  5710 ;; Defined at:
  5711 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  b               4    4[COMRAM] long 
  5714 ;;  a               4    8[COMRAM] long 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  grs             1   19[COMRAM] unsigned char 
  5717 ;;  bexp            1   18[COMRAM] unsigned char 
  5718 ;;  aexp            1   17[COMRAM] unsigned char 
  5719 ;;  signs           1   16[COMRAM] unsigned char 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  4    4[COMRAM] unsigned char 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5729 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;Total ram usage:       16 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; Hardware stack levels required when called: 4
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		___flsub
  5740 ;;		_efgtoa
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text19
  5745  0021D2                     __ptext19:
  5746                           	callstack 0
  5747  0021D2                     ___fladd:
  5748                           	callstack 21
  5749  0021D2  5008               	movf	(___fladd@b+3)^0,w,c
  5750  0021D4  0B80               	andlw	128
  5751  0021D6  6E11               	movwf	___fladd@signs^0,c
  5752  0021D8  5008               	movf	(___fladd@b+3)^0,w,c
  5753  0021DA  2408               	addwf	(___fladd@b+3)^0,w,c
  5754  0021DC  6E13               	movwf	___fladd@bexp^0,c
  5755  0021DE  AE07               	btfss	(___fladd@b+2)^0,7,c
  5756  0021E0  EFF4  F010         	goto	u6061
  5757  0021E4  EFF6  F010         	goto	u6060
  5758  0021E8                     u6061:
  5759  0021E8  EFF7  F010         	goto	l6228
  5760  0021EC                     u6060:
  5761  0021EC  8013               	bsf	___fladd@bexp^0,0,c
  5762  0021EE                     l6228:
  5763  0021EE  5013               	movf	___fladd@bexp^0,w,c
  5764  0021F0  B4D8               	btfsc	status,2,c
  5765  0021F2  EFFD  F010         	goto	u6071
  5766  0021F6  EFFF  F010         	goto	u6070
  5767  0021FA                     u6071:
  5768  0021FA  EF14  F011         	goto	l6238
  5769  0021FE                     u6070:
  5770  0021FE  2813               	incf	___fladd@bexp^0,w,c
  5771  002200  A4D8               	btfss	status,2,c
  5772  002202  EF05  F011         	goto	u6081
  5773  002206  EF07  F011         	goto	u6080
  5774  00220A                     u6081:
  5775  00220A  EF0F  F011         	goto	l6234
  5776  00220E                     u6080:
  5777  00220E  0E00               	movlw	0
  5778  002210  6E05               	movwf	___fladd@b^0,c
  5779  002212  0E00               	movlw	0
  5780  002214  6E06               	movwf	(___fladd@b+1)^0,c
  5781  002216  0E00               	movlw	0
  5782  002218  6E07               	movwf	(___fladd@b+2)^0,c
  5783  00221A  0E00               	movlw	0
  5784  00221C  6E08               	movwf	(___fladd@b+3)^0,c
  5785  00221E                     l6234:
  5786  00221E  8E07               	bsf	(___fladd@b+2)^0,7,c
  5787  002220  0E00               	movlw	0
  5788  002222  6E08               	movwf	(___fladd@b+3)^0,c
  5789  002224  EF1C  F011         	goto	l6240
  5790  002228                     l6238:
  5791  002228  0E00               	movlw	0
  5792  00222A  6E05               	movwf	___fladd@b^0,c
  5793  00222C  0E00               	movlw	0
  5794  00222E  6E06               	movwf	(___fladd@b+1)^0,c
  5795  002230  0E00               	movlw	0
  5796  002232  6E07               	movwf	(___fladd@b+2)^0,c
  5797  002234  0E00               	movlw	0
  5798  002236  6E08               	movwf	(___fladd@b+3)^0,c
  5799  002238                     l6240:
  5800  002238  500C               	movf	(___fladd@a+3)^0,w,c
  5801  00223A  0B80               	andlw	128
  5802  00223C  6E12               	movwf	___fladd@aexp^0,c
  5803  00223E  5011               	movf	___fladd@signs^0,w,c
  5804  002240  1812               	xorwf	___fladd@aexp^0,w,c
  5805  002242  B4D8               	btfsc	status,2,c
  5806  002244  EF26  F011         	goto	u6091
  5807  002248  EF28  F011         	goto	u6090
  5808  00224C                     u6091:
  5809  00224C  EF29  F011         	goto	l6246
  5810  002250                     u6090:
  5811  002250  8C11               	bsf	___fladd@signs^0,6,c
  5812  002252                     l6246:
  5813  002252  500C               	movf	(___fladd@a+3)^0,w,c
  5814  002254  240C               	addwf	(___fladd@a+3)^0,w,c
  5815  002256  6E12               	movwf	___fladd@aexp^0,c
  5816  002258  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5817  00225A  EF31  F011         	goto	u6101
  5818  00225E  EF33  F011         	goto	u6100
  5819  002262                     u6101:
  5820  002262  EF34  F011         	goto	l6252
  5821  002266                     u6100:
  5822  002266  8012               	bsf	___fladd@aexp^0,0,c
  5823  002268                     l6252:
  5824  002268  5012               	movf	___fladd@aexp^0,w,c
  5825  00226A  B4D8               	btfsc	status,2,c
  5826  00226C  EF3A  F011         	goto	u6111
  5827  002270  EF3C  F011         	goto	u6110
  5828  002274                     u6111:
  5829  002274  EF51  F011         	goto	l6262
  5830  002278                     u6110:
  5831  002278  2812               	incf	___fladd@aexp^0,w,c
  5832  00227A  A4D8               	btfss	status,2,c
  5833  00227C  EF42  F011         	goto	u6121
  5834  002280  EF44  F011         	goto	u6120
  5835  002284                     u6121:
  5836  002284  EF4C  F011         	goto	l6258
  5837  002288                     u6120:
  5838  002288  0E00               	movlw	0
  5839  00228A  6E09               	movwf	___fladd@a^0,c
  5840  00228C  0E00               	movlw	0
  5841  00228E  6E0A               	movwf	(___fladd@a+1)^0,c
  5842  002290  0E00               	movlw	0
  5843  002292  6E0B               	movwf	(___fladd@a+2)^0,c
  5844  002294  0E00               	movlw	0
  5845  002296  6E0C               	movwf	(___fladd@a+3)^0,c
  5846  002298                     l6258:
  5847  002298  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5848  00229A  0E00               	movlw	0
  5849  00229C  6E0C               	movwf	(___fladd@a+3)^0,c
  5850  00229E  EF59  F011         	goto	l6264
  5851  0022A2                     l6262:
  5852  0022A2  0E00               	movlw	0
  5853  0022A4  6E09               	movwf	___fladd@a^0,c
  5854  0022A6  0E00               	movlw	0
  5855  0022A8  6E0A               	movwf	(___fladd@a+1)^0,c
  5856  0022AA  0E00               	movlw	0
  5857  0022AC  6E0B               	movwf	(___fladd@a+2)^0,c
  5858  0022AE  0E00               	movlw	0
  5859  0022B0  6E0C               	movwf	(___fladd@a+3)^0,c
  5860  0022B2                     l6264:
  5861  0022B2  5013               	movf	___fladd@bexp^0,w,c
  5862  0022B4  5C12               	subwf	___fladd@aexp^0,w,c
  5863  0022B6  B0D8               	btfsc	status,0,c
  5864  0022B8  EF60  F011         	goto	u6131
  5865  0022BC  EF62  F011         	goto	u6130
  5866  0022C0                     u6131:
  5867  0022C0  EF89  F011         	goto	l6300
  5868  0022C4                     u6130:
  5869  0022C4  AC11               	btfss	___fladd@signs^0,6,c
  5870  0022C6  EF67  F011         	goto	u6141
  5871  0022CA  EF69  F011         	goto	u6140
  5872  0022CE                     u6141:
  5873  0022CE  EF6B  F011         	goto	l6270
  5874  0022D2                     u6140:
  5875  0022D2  0E80               	movlw	128
  5876  0022D4  1A11               	xorwf	___fladd@signs^0,f,c
  5877  0022D6                     l6270:
  5878  0022D6  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5879  0022DA  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5880  0022DE  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5881  0022E2  C005  F014         	movff	___fladd@b,___fladd@grs
  5882  0022E6  C009  F005         	movff	___fladd@a,___fladd@b
  5883  0022EA  C014  F009         	movff	___fladd@grs,___fladd@a
  5884  0022EE  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5885  0022F2  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5886  0022F6  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5887  0022FA  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5888  0022FE  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5889  002302  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5890  002306  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5891  00230A  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5892  00230E  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5893  002312                     l6300:
  5894  002312  0E00               	movlw	0
  5895  002314  6E14               	movwf	___fladd@grs^0,c
  5896  002316  5013               	movf	___fladd@bexp^0,w,c
  5897  002318  C012  F00D         	movff	___fladd@aexp,??___fladd
  5898  00231C  6A0E               	clrf	(??___fladd+1)^0,c
  5899  00231E  5E0D               	subwf	??___fladd^0,f,c
  5900  002320  0E00               	movlw	0
  5901  002322  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5902  002324  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5903  002326  EF9E  F011         	goto	u6151
  5904  00232A  500E               	movf	(??___fladd+1)^0,w,c
  5905  00232C  E109               	bnz	u6150
  5906  00232E  0E1A               	movlw	26
  5907  002330  5C0D               	subwf	??___fladd^0,w,c
  5908  002332  A0D8               	btfss	status,0,c
  5909  002334  EF9E  F011         	goto	u6151
  5910  002338  EFA0  F011         	goto	u6150
  5911  00233C                     u6151:
  5912  00233C  EFD7  F011         	goto	l1254
  5913  002340                     u6150:
  5914  002340  5005               	movf	___fladd@b^0,w,c
  5915  002342  1006               	iorwf	(___fladd@b+1)^0,w,c
  5916  002344  1007               	iorwf	(___fladd@b+2)^0,w,c
  5917  002346  1008               	iorwf	(___fladd@b+3)^0,w,c
  5918  002348  A4D8               	btfss	status,2,c
  5919  00234A  EFA9  F011         	goto	u6161
  5920  00234E  EFAC  F011         	goto	u6160
  5921  002352                     u6161:
  5922  002352  0E01               	movlw	1
  5923  002354  EFAD  F011         	goto	u6170
  5924  002358                     u6160:
  5925  002358  0E00               	movlw	0
  5926  00235A                     u6170:
  5927  00235A  6E14               	movwf	___fladd@grs^0,c
  5928  00235C  0E00               	movlw	0
  5929  00235E  6E05               	movwf	___fladd@b^0,c
  5930  002360  0E00               	movlw	0
  5931  002362  6E06               	movwf	(___fladd@b+1)^0,c
  5932  002364  0E00               	movlw	0
  5933  002366  6E07               	movwf	(___fladd@b+2)^0,c
  5934  002368  0E00               	movlw	0
  5935  00236A  6E08               	movwf	(___fladd@b+3)^0,c
  5936  00236C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5937  002370  EFE0  F011         	goto	l1253
  5938  002374                     l1255:
  5939  002374  A014               	btfss	___fladd@grs^0,0,c
  5940  002376  EFBF  F011         	goto	u6181
  5941  00237A  EFC1  F011         	goto	u6180
  5942  00237E                     u6181:
  5943  00237E  EFC7  F011         	goto	l6312
  5944  002382                     u6180:
  5945  002382  90D8               	bcf	status,0,c
  5946  002384  3014               	rrcf	___fladd@grs^0,w,c
  5947  002386  0901               	iorlw	1
  5948  002388  6E14               	movwf	___fladd@grs^0,c
  5949  00238A  EFC9  F011         	goto	l6314
  5950  00238E                     l6312:
  5951  00238E  90D8               	bcf	status,0,c
  5952  002390  3214               	rrcf	___fladd@grs^0,f,c
  5953  002392                     l6314:
  5954  002392  A005               	btfss	___fladd@b^0,0,c
  5955  002394  EFCE  F011         	goto	u6191
  5956  002398  EFD0  F011         	goto	u6190
  5957  00239C                     u6191:
  5958  00239C  EFD1  F011         	goto	l6318
  5959  0023A0                     u6190:
  5960  0023A0  8E14               	bsf	___fladd@grs^0,7,c
  5961  0023A2                     l6318:
  5962  0023A2  3408               	rlcf	(___fladd@b+3)^0,w,c
  5963  0023A4  3208               	rrcf	(___fladd@b+3)^0,f,c
  5964  0023A6  3207               	rrcf	(___fladd@b+2)^0,f,c
  5965  0023A8  3206               	rrcf	(___fladd@b+1)^0,f,c
  5966  0023AA  3205               	rrcf	___fladd@b^0,f,c
  5967  0023AC  2A13               	incf	___fladd@bexp^0,f,c
  5968  0023AE                     l1254:
  5969  0023AE  5012               	movf	___fladd@aexp^0,w,c
  5970  0023B0  5C13               	subwf	___fladd@bexp^0,w,c
  5971  0023B2  A0D8               	btfss	status,0,c
  5972  0023B4  EFDE  F011         	goto	u6201
  5973  0023B8  EFE0  F011         	goto	u6200
  5974  0023BC                     u6201:
  5975  0023BC  EFBA  F011         	goto	l1255
  5976  0023C0                     u6200:
  5977  0023C0                     l1253:
  5978  0023C0  BC11               	btfsc	___fladd@signs^0,6,c
  5979  0023C2  EFE5  F011         	goto	u6211
  5980  0023C6  EFE7  F011         	goto	u6210
  5981  0023CA                     u6211:
  5982  0023CA  EF27  F012         	goto	l6346
  5983  0023CE                     u6210:
  5984  0023CE  5013               	movf	___fladd@bexp^0,w,c
  5985  0023D0  A4D8               	btfss	status,2,c
  5986  0023D2  EFED  F011         	goto	u6221
  5987  0023D6  EFEF  F011         	goto	u6220
  5988  0023DA                     u6221:
  5989  0023DA  EFF9  F011         	goto	l6328
  5990  0023DE                     u6220:
  5991  0023DE  0E00               	movlw	0
  5992  0023E0  6E05               	movwf	?___fladd^0,c
  5993  0023E2  0E00               	movlw	0
  5994  0023E4  6E06               	movwf	(?___fladd+1)^0,c
  5995  0023E6  0E00               	movlw	0
  5996  0023E8  6E07               	movwf	(?___fladd+2)^0,c
  5997  0023EA  0E00               	movlw	0
  5998  0023EC  6E08               	movwf	(?___fladd+3)^0,c
  5999  0023EE  EF48  F013         	goto	l1262
  6000  0023F2                     l6328:
  6001  0023F2  5009               	movf	___fladd@a^0,w,c
  6002  0023F4  2605               	addwf	___fladd@b^0,f,c
  6003  0023F6  500A               	movf	(___fladd@a+1)^0,w,c
  6004  0023F8  2206               	addwfc	(___fladd@b+1)^0,f,c
  6005  0023FA  500B               	movf	(___fladd@a+2)^0,w,c
  6006  0023FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  6007  0023FE  500C               	movf	(___fladd@a+3)^0,w,c
  6008  002400  2208               	addwfc	(___fladd@b+3)^0,f,c
  6009  002402  A008               	btfss	(___fladd@b+3)^0,0,c
  6010  002404  EF06  F012         	goto	u6231
  6011  002408  EF08  F012         	goto	u6230
  6012  00240C                     u6231:
  6013  00240C  EFB4  F012         	goto	l6382
  6014  002410                     u6230:
  6015  002410  A014               	btfss	___fladd@grs^0,0,c
  6016  002412  EF0D  F012         	goto	u6241
  6017  002416  EF0F  F012         	goto	u6240
  6018  00241A                     u6241:
  6019  00241A  EF15  F012         	goto	l6336
  6020  00241E                     u6240:
  6021  00241E  90D8               	bcf	status,0,c
  6022  002420  3014               	rrcf	___fladd@grs^0,w,c
  6023  002422  0901               	iorlw	1
  6024  002424  6E14               	movwf	___fladd@grs^0,c
  6025  002426  EF17  F012         	goto	l6338
  6026  00242A                     l6336:
  6027  00242A  90D8               	bcf	status,0,c
  6028  00242C  3214               	rrcf	___fladd@grs^0,f,c
  6029  00242E                     l6338:
  6030  00242E  A005               	btfss	___fladd@b^0,0,c
  6031  002430  EF1C  F012         	goto	u6251
  6032  002434  EF1E  F012         	goto	u6250
  6033  002438                     u6251:
  6034  002438  EF1F  F012         	goto	l6342
  6035  00243C                     u6250:
  6036  00243C  8E14               	bsf	___fladd@grs^0,7,c
  6037  00243E                     l6342:
  6038  00243E  3408               	rlcf	(___fladd@b+3)^0,w,c
  6039  002440  3208               	rrcf	(___fladd@b+3)^0,f,c
  6040  002442  3207               	rrcf	(___fladd@b+2)^0,f,c
  6041  002444  3206               	rrcf	(___fladd@b+1)^0,f,c
  6042  002446  3205               	rrcf	___fladd@b^0,f,c
  6043  002448  2A13               	incf	___fladd@bexp^0,f,c
  6044  00244A  EFB4  F012         	goto	l6382
  6045  00244E                     l6346:
  6046  00244E  5009               	movf	___fladd@a^0,w,c
  6047  002450  5C05               	subwf	___fladd@b^0,w,c
  6048  002452  500A               	movf	(___fladd@a+1)^0,w,c
  6049  002454  5806               	subwfb	(___fladd@b+1)^0,w,c
  6050  002456  500B               	movf	(___fladd@a+2)^0,w,c
  6051  002458  5807               	subwfb	(___fladd@b+2)^0,w,c
  6052  00245A  5008               	movf	(___fladd@b+3)^0,w,c
  6053  00245C  0A80               	xorlw	128
  6054  00245E  6E0D               	movwf	??___fladd^0,c
  6055  002460  500C               	movf	(___fladd@a+3)^0,w,c
  6056  002462  0A80               	xorlw	128
  6057  002464  580D               	subwfb	??___fladd^0,w,c
  6058  002466  B0D8               	btfsc	status,0,c
  6059  002468  EF38  F012         	goto	u6261
  6060  00246C  EF3A  F012         	goto	u6260
  6061  002470                     u6261:
  6062  002470  EF65  F012         	goto	l6356
  6063  002474                     u6260:
  6064  002474  5005               	movf	___fladd@b^0,w,c
  6065  002476  5C09               	subwf	___fladd@a^0,w,c
  6066  002478  6E0D               	movwf	??___fladd^0,c
  6067  00247A  5006               	movf	(___fladd@b+1)^0,w,c
  6068  00247C  580A               	subwfb	(___fladd@a+1)^0,w,c
  6069  00247E  6E0E               	movwf	(??___fladd+1)^0,c
  6070  002480  5007               	movf	(___fladd@b+2)^0,w,c
  6071  002482  580B               	subwfb	(___fladd@a+2)^0,w,c
  6072  002484  6E0F               	movwf	(??___fladd+2)^0,c
  6073  002486  5008               	movf	(___fladd@b+3)^0,w,c
  6074  002488  580C               	subwfb	(___fladd@a+3)^0,w,c
  6075  00248A  6E10               	movwf	(??___fladd+3)^0,c
  6076  00248C  0EFF               	movlw	255
  6077  00248E  240D               	addwf	??___fladd^0,w,c
  6078  002490  6E05               	movwf	___fladd@b^0,c
  6079  002492  0EFF               	movlw	255
  6080  002494  200E               	addwfc	(??___fladd+1)^0,w,c
  6081  002496  6E06               	movwf	(___fladd@b+1)^0,c
  6082  002498  0EFF               	movlw	255
  6083  00249A  200F               	addwfc	(??___fladd+2)^0,w,c
  6084  00249C  6E07               	movwf	(___fladd@b+2)^0,c
  6085  00249E  0EFF               	movlw	255
  6086  0024A0  2010               	addwfc	(??___fladd+3)^0,w,c
  6087  0024A2  6E08               	movwf	(___fladd@b+3)^0,c
  6088  0024A4  0E80               	movlw	128
  6089  0024A6  1A11               	xorwf	___fladd@signs^0,f,c
  6090  0024A8  6C14               	negf	___fladd@grs^0,c
  6091  0024AA  5014               	movf	___fladd@grs^0,w,c
  6092  0024AC  A4D8               	btfss	status,2,c
  6093  0024AE  EF5B  F012         	goto	u6271
  6094  0024B2  EF5D  F012         	goto	u6270
  6095  0024B6                     u6271:
  6096  0024B6  EF6D  F012         	goto	l1270
  6097  0024BA                     u6270:
  6098  0024BA  0E01               	movlw	1
  6099  0024BC  2605               	addwf	___fladd@b^0,f,c
  6100  0024BE  0E00               	movlw	0
  6101  0024C0  2206               	addwfc	(___fladd@b+1)^0,f,c
  6102  0024C2  2207               	addwfc	(___fladd@b+2)^0,f,c
  6103  0024C4  2208               	addwfc	(___fladd@b+3)^0,f,c
  6104  0024C6  EF6D  F012         	goto	l1270
  6105  0024CA                     l6356:
  6106  0024CA  5009               	movf	___fladd@a^0,w,c
  6107  0024CC  5E05               	subwf	___fladd@b^0,f,c
  6108  0024CE  500A               	movf	(___fladd@a+1)^0,w,c
  6109  0024D0  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6110  0024D2  500B               	movf	(___fladd@a+2)^0,w,c
  6111  0024D4  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6112  0024D6  500C               	movf	(___fladd@a+3)^0,w,c
  6113  0024D8  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6114  0024DA                     l1270:
  6115  0024DA  5005               	movf	___fladd@b^0,w,c
  6116  0024DC  1006               	iorwf	(___fladd@b+1)^0,w,c
  6117  0024DE  1007               	iorwf	(___fladd@b+2)^0,w,c
  6118  0024E0  1008               	iorwf	(___fladd@b+3)^0,w,c
  6119  0024E2  A4D8               	btfss	status,2,c
  6120  0024E4  EF76  F012         	goto	u6281
  6121  0024E8  EF78  F012         	goto	u6280
  6122  0024EC                     u6281:
  6123  0024EC  EFAD  F012         	goto	l6380
  6124  0024F0                     u6280:
  6125  0024F0  5014               	movf	___fladd@grs^0,w,c
  6126  0024F2  A4D8               	btfss	status,2,c
  6127  0024F4  EF7E  F012         	goto	u6291
  6128  0024F8  EF80  F012         	goto	u6290
  6129  0024FC                     u6291:
  6130  0024FC  EFAD  F012         	goto	l6380
  6131  002500                     u6290:
  6132  002500  0E00               	movlw	0
  6133  002502  6E05               	movwf	?___fladd^0,c
  6134  002504  0E00               	movlw	0
  6135  002506  6E06               	movwf	(?___fladd+1)^0,c
  6136  002508  0E00               	movlw	0
  6137  00250A  6E07               	movwf	(?___fladd+2)^0,c
  6138  00250C  0E00               	movlw	0
  6139  00250E  6E08               	movwf	(?___fladd+3)^0,c
  6140  002510  EF48  F013         	goto	l1262
  6141  002514                     l6364:
  6142  002514  90D8               	bcf	status,0,c
  6143  002516  3605               	rlcf	___fladd@b^0,f,c
  6144  002518  3606               	rlcf	(___fladd@b+1)^0,f,c
  6145  00251A  3607               	rlcf	(___fladd@b+2)^0,f,c
  6146  00251C  3608               	rlcf	(___fladd@b+3)^0,f,c
  6147  00251E  AE14               	btfss	___fladd@grs^0,7,c
  6148  002520  EF94  F012         	goto	u6301
  6149  002524  EF96  F012         	goto	u6300
  6150  002528                     u6301:
  6151  002528  EF97  F012         	goto	l6370
  6152  00252C                     u6300:
  6153  00252C  8005               	bsf	___fladd@b^0,0,c
  6154  00252E                     l6370:
  6155  00252E  A014               	btfss	___fladd@grs^0,0,c
  6156  002530  EF9C  F012         	goto	u6311
  6157  002534  EF9E  F012         	goto	u6310
  6158  002538                     u6311:
  6159  002538  EFA2  F012         	goto	l6374
  6160  00253C                     u6310:
  6161  00253C  80D8               	bsf	status,0,c
  6162  00253E  3614               	rlcf	___fladd@grs^0,f,c
  6163  002540  EFA4  F012         	goto	l6376
  6164  002544                     l6374:
  6165  002544  90D8               	bcf	status,0,c
  6166  002546  3614               	rlcf	___fladd@grs^0,f,c
  6167  002548                     l6376:
  6168  002548  5013               	movf	___fladd@bexp^0,w,c
  6169  00254A  B4D8               	btfsc	status,2,c
  6170  00254C  EFAA  F012         	goto	u6321
  6171  002550  EFAC  F012         	goto	u6320
  6172  002554                     u6321:
  6173  002554  EFAD  F012         	goto	l6380
  6174  002558                     u6320:
  6175  002558  0613               	decf	___fladd@bexp^0,f,c
  6176  00255A                     l6380:
  6177  00255A  AE07               	btfss	(___fladd@b+2)^0,7,c
  6178  00255C  EFB2  F012         	goto	u6331
  6179  002560  EFB4  F012         	goto	u6330
  6180  002564                     u6331:
  6181  002564  EF8A  F012         	goto	l6364
  6182  002568                     u6330:
  6183  002568                     l6382:
  6184  002568  0E00               	movlw	0
  6185  00256A  6E12               	movwf	___fladd@aexp^0,c
  6186  00256C  AE14               	btfss	___fladd@grs^0,7,c
  6187  00256E  EFBB  F012         	goto	u6341
  6188  002572  EFBD  F012         	goto	u6340
  6189  002576                     u6341:
  6190  002576  EFD5  F012         	goto	l1279
  6191  00257A                     u6340:
  6192  00257A  C014  F00D         	movff	___fladd@grs,??___fladd
  6193  00257E  0E7F               	movlw	127
  6194  002580  160D               	andwf	??___fladd^0,f,c
  6195  002582  B4D8               	btfsc	status,2,c
  6196  002584  EFC6  F012         	goto	u6351
  6197  002588  EFC8  F012         	goto	u6350
  6198  00258C                     u6351:
  6199  00258C  EFCC  F012         	goto	l1280
  6200  002590                     u6350:
  6201  002590                     l6388:
  6202  002590  0E01               	movlw	1
  6203  002592  6E12               	movwf	___fladd@aexp^0,c
  6204  002594  EFD5  F012         	goto	l1279
  6205  002598                     l1280:
  6206  002598  A005               	btfss	___fladd@b^0,0,c
  6207  00259A  EFD1  F012         	goto	u6361
  6208  00259E  EFD3  F012         	goto	u6360
  6209  0025A2                     u6361:
  6210  0025A2  EFD5  F012         	goto	l1279
  6211  0025A6                     u6360:
  6212  0025A6  EFC8  F012         	goto	l6388
  6213  0025AA                     l1279:
  6214  0025AA  5012               	movf	___fladd@aexp^0,w,c
  6215  0025AC  B4D8               	btfsc	status,2,c
  6216  0025AE  EFDB  F012         	goto	u6371
  6217  0025B2  EFDD  F012         	goto	u6370
  6218  0025B6                     u6371:
  6219  0025B6  EF08  F013         	goto	l6400
  6220  0025BA                     u6370:
  6221  0025BA  0E01               	movlw	1
  6222  0025BC  2605               	addwf	___fladd@b^0,f,c
  6223  0025BE  0E00               	movlw	0
  6224  0025C0  2206               	addwfc	(___fladd@b+1)^0,f,c
  6225  0025C2  2207               	addwfc	(___fladd@b+2)^0,f,c
  6226  0025C4  2208               	addwfc	(___fladd@b+3)^0,f,c
  6227  0025C6  A008               	btfss	(___fladd@b+3)^0,0,c
  6228  0025C8  EFE8  F012         	goto	u6381
  6229  0025CC  EFEA  F012         	goto	u6380
  6230  0025D0                     u6381:
  6231  0025D0  EF08  F013         	goto	l6400
  6232  0025D4                     u6380:
  6233  0025D4  C005  F00D         	movff	___fladd@b,??___fladd
  6234  0025D8  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6235  0025DC  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6236  0025E0  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6237  0025E4  3410               	rlcf	(??___fladd+3)^0,w,c
  6238  0025E6  3210               	rrcf	(??___fladd+3)^0,f,c
  6239  0025E8  320F               	rrcf	(??___fladd+2)^0,f,c
  6240  0025EA  320E               	rrcf	(??___fladd+1)^0,f,c
  6241  0025EC  320D               	rrcf	??___fladd^0,f,c
  6242  0025EE  C00D  F005         	movff	??___fladd,___fladd@b
  6243  0025F2  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6244  0025F6  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6245  0025FA  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6246  0025FE  2813               	incf	___fladd@bexp^0,w,c
  6247  002600  B4D8               	btfsc	status,2,c
  6248  002602  EF05  F013         	goto	u6391
  6249  002606  EF07  F013         	goto	u6390
  6250  00260A                     u6391:
  6251  00260A  EF08  F013         	goto	l6400
  6252  00260E                     u6390:
  6253  00260E  2A13               	incf	___fladd@bexp^0,f,c
  6254  002610                     l6400:
  6255  002610  2813               	incf	___fladd@bexp^0,w,c
  6256  002612  B4D8               	btfsc	status,2,c
  6257  002614  EF0E  F013         	goto	u6401
  6258  002618  EF10  F013         	goto	u6400
  6259  00261C                     u6401:
  6260  00261C  EF18  F013         	goto	l6404
  6261  002620                     u6400:
  6262  002620  5013               	movf	___fladd@bexp^0,w,c
  6263  002622  A4D8               	btfss	status,2,c
  6264  002624  EF16  F013         	goto	u6411
  6265  002628  EF18  F013         	goto	u6410
  6266  00262C                     u6411:
  6267  00262C  EF2A  F013         	goto	l6408
  6268  002630                     u6410:
  6269  002630                     l6404:
  6270  002630  0E00               	movlw	0
  6271  002632  6E05               	movwf	___fladd@b^0,c
  6272  002634  0E00               	movlw	0
  6273  002636  6E06               	movwf	(___fladd@b+1)^0,c
  6274  002638  0E00               	movlw	0
  6275  00263A  6E07               	movwf	(___fladd@b+2)^0,c
  6276  00263C  0E00               	movlw	0
  6277  00263E  6E08               	movwf	(___fladd@b+3)^0,c
  6278  002640  5013               	movf	___fladd@bexp^0,w,c
  6279  002642  A4D8               	btfss	status,2,c
  6280  002644  EF26  F013         	goto	u6421
  6281  002648  EF28  F013         	goto	u6420
  6282  00264C                     u6421:
  6283  00264C  EF2A  F013         	goto	l6408
  6284  002650                     u6420:
  6285  002650  0E00               	movlw	0
  6286  002652  6E11               	movwf	___fladd@signs^0,c
  6287  002654                     l6408:
  6288  002654  A013               	btfss	___fladd@bexp^0,0,c
  6289  002656  EF2F  F013         	goto	u6431
  6290  00265A  EF31  F013         	goto	u6430
  6291  00265E                     u6431:
  6292  00265E  EF34  F013         	goto	l6412
  6293  002662                     u6430:
  6294  002662  8E07               	bsf	(___fladd@b+2)^0,7,c
  6295  002664  EF35  F013         	goto	l6414
  6296  002668                     l6412:
  6297  002668  9E07               	bcf	(___fladd@b+2)^0,7,c
  6298  00266A                     l6414:
  6299  00266A  90D8               	bcf	status,0,c
  6300  00266C  3013               	rrcf	___fladd@bexp^0,w,c
  6301  00266E  6E08               	movwf	(___fladd@b+3)^0,c
  6302  002670  AE11               	btfss	___fladd@signs^0,7,c
  6303  002672  EF3D  F013         	goto	u6441
  6304  002676  EF3F  F013         	goto	u6440
  6305  00267A                     u6441:
  6306  00267A  EF40  F013         	goto	l6420
  6307  00267E                     u6440:
  6308  00267E  8E08               	bsf	(___fladd@b+3)^0,7,c
  6309  002680                     l6420:
  6310  002680  C005  F005         	movff	___fladd@b,?___fladd
  6311  002684  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6312  002688  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6313  00268C  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6314  002690                     l1262:
  6315  002690  0012               	return		;funcret
  6316  002692                     __end_of___fladd:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function ___flneg *****************
  6320 ;; Defined at:
  6321 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  f1              4    4[COMRAM] unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  4    4[COMRAM] unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        4 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 4
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_efgtoa
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text20
  6350  004BD8                     __ptext20:
  6351                           	callstack 0
  6352  004BD8                     ___flneg:
  6353                           	callstack 22
  6354  004BD8  5005               	movf	___flneg@f1^0,w,c
  6355  004BDA  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6356  004BDC  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6357  004BDE  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6358  004BE0  B4D8               	btfsc	status,2,c
  6359  004BE2  EFF5  F025         	goto	u7111
  6360  004BE6  EFF7  F025         	goto	u7110
  6361  004BEA                     u7111:
  6362  004BEA  EFFF  F025         	goto	l6848
  6363  004BEE                     u7110:
  6364  004BEE  0E00               	movlw	0
  6365  004BF0  1A05               	xorwf	___flneg@f1^0,f,c
  6366  004BF2  0E00               	movlw	0
  6367  004BF4  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6368  004BF6  0E00               	movlw	0
  6369  004BF8  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6370  004BFA  0E80               	movlw	128
  6371  004BFC  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6372  004BFE                     l6848:
  6373  004BFE  C005  F005         	movff	___flneg@f1,?___flneg
  6374  004C02  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6375  004C06  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6376  004C0A  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6377  004C0E  0012               	return		;funcret
  6378  004C10                     __end_of___flneg:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function ___flge *****************
  6382 ;; Defined at:
  6383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  ff1             4   29[COMRAM] unsigned char 
  6386 ;;  ff2             4   33[COMRAM] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;Total ram usage:       12 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 4
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_efgtoa
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text21
  6413  003AD2                     __ptext21:
  6414                           	callstack 0
  6415  003AD2                     ___flge:
  6416                           	callstack 22
  6417  003AD2  0E00               	movlw	0
  6418  003AD4  141E               	andwf	___flge@ff1^0,w,c
  6419  003AD6  6E26               	movwf	??___flge^0,c
  6420  003AD8  0E00               	movlw	0
  6421  003ADA  141F               	andwf	(___flge@ff1+1)^0,w,c
  6422  003ADC  6E27               	movwf	(??___flge+1)^0,c
  6423  003ADE  0E80               	movlw	128
  6424  003AE0  1420               	andwf	(___flge@ff1+2)^0,w,c
  6425  003AE2  6E28               	movwf	(??___flge+2)^0,c
  6426  003AE4  0E7F               	movlw	127
  6427  003AE6  1421               	andwf	(___flge@ff1+3)^0,w,c
  6428  003AE8  6E29               	movwf	(??___flge+3)^0,c
  6429  003AEA  5026               	movf	??___flge^0,w,c
  6430  003AEC  1027               	iorwf	(??___flge+1)^0,w,c
  6431  003AEE  1028               	iorwf	(??___flge+2)^0,w,c
  6432  003AF0  1029               	iorwf	(??___flge+3)^0,w,c
  6433  003AF2  A4D8               	btfss	status,2,c
  6434  003AF4  EF7E  F01D         	goto	u7061
  6435  003AF8  EF80  F01D         	goto	u7060
  6436  003AFC                     u7061:
  6437  003AFC  EF88  F01D         	goto	l6826
  6438  003B00                     u7060:
  6439  003B00  0E00               	movlw	0
  6440  003B02  6E1E               	movwf	___flge@ff1^0,c
  6441  003B04  0E00               	movlw	0
  6442  003B06  6E1F               	movwf	(___flge@ff1+1)^0,c
  6443  003B08  0E00               	movlw	0
  6444  003B0A  6E20               	movwf	(___flge@ff1+2)^0,c
  6445  003B0C  0E00               	movlw	0
  6446  003B0E  6E21               	movwf	(___flge@ff1+3)^0,c
  6447  003B10                     l6826:
  6448  003B10  0E00               	movlw	0
  6449  003B12  1422               	andwf	___flge@ff2^0,w,c
  6450  003B14  6E26               	movwf	??___flge^0,c
  6451  003B16  0E00               	movlw	0
  6452  003B18  1423               	andwf	(___flge@ff2+1)^0,w,c
  6453  003B1A  6E27               	movwf	(??___flge+1)^0,c
  6454  003B1C  0E80               	movlw	128
  6455  003B1E  1424               	andwf	(___flge@ff2+2)^0,w,c
  6456  003B20  6E28               	movwf	(??___flge+2)^0,c
  6457  003B22  0E7F               	movlw	127
  6458  003B24  1425               	andwf	(___flge@ff2+3)^0,w,c
  6459  003B26  6E29               	movwf	(??___flge+3)^0,c
  6460  003B28  5026               	movf	??___flge^0,w,c
  6461  003B2A  1027               	iorwf	(??___flge+1)^0,w,c
  6462  003B2C  1028               	iorwf	(??___flge+2)^0,w,c
  6463  003B2E  1029               	iorwf	(??___flge+3)^0,w,c
  6464  003B30  A4D8               	btfss	status,2,c
  6465  003B32  EF9D  F01D         	goto	u7071
  6466  003B36  EF9F  F01D         	goto	u7070
  6467  003B3A                     u7071:
  6468  003B3A  EFA7  F01D         	goto	l6830
  6469  003B3E                     u7070:
  6470  003B3E  0E00               	movlw	0
  6471  003B40  6E22               	movwf	___flge@ff2^0,c
  6472  003B42  0E00               	movlw	0
  6473  003B44  6E23               	movwf	(___flge@ff2+1)^0,c
  6474  003B46  0E00               	movlw	0
  6475  003B48  6E24               	movwf	(___flge@ff2+2)^0,c
  6476  003B4A  0E00               	movlw	0
  6477  003B4C  6E25               	movwf	(___flge@ff2+3)^0,c
  6478  003B4E                     l6830:
  6479  003B4E  AE21               	btfss	(___flge@ff1+3)^0,7,c
  6480  003B50  EFAC  F01D         	goto	u7081
  6481  003B54  EFAE  F01D         	goto	u7080
  6482  003B58                     u7081:
  6483  003B58  EFB7  F01D         	goto	l6834
  6484  003B5C                     u7080:
  6485  003B5C  6C1E               	negf	___flge@ff1^0,c
  6486  003B5E  1E1F               	comf	(___flge@ff1+1)^0,f,c
  6487  003B60  B0D8               	btfsc	status,0,c
  6488  003B62  2A1F               	incf	(___flge@ff1+1)^0,f,c
  6489  003B64  1E20               	comf	(___flge@ff1+2)^0,f,c
  6490  003B66  B0D8               	btfsc	status,0,c
  6491  003B68  2A20               	incf	(___flge@ff1+2)^0,f,c
  6492  003B6A  0E80               	movlw	128
  6493  003B6C  5621               	subfwb	(___flge@ff1+3)^0,f,c
  6494  003B6E                     l6834:
  6495  003B6E  AE25               	btfss	(___flge@ff2+3)^0,7,c
  6496  003B70  EFBC  F01D         	goto	u7091
  6497  003B74  EFBE  F01D         	goto	u7090
  6498  003B78                     u7091:
  6499  003B78  EFC7  F01D         	goto	l990
  6500  003B7C                     u7090:
  6501  003B7C  6C22               	negf	___flge@ff2^0,c
  6502  003B7E  1E23               	comf	(___flge@ff2+1)^0,f,c
  6503  003B80  B0D8               	btfsc	status,0,c
  6504  003B82  2A23               	incf	(___flge@ff2+1)^0,f,c
  6505  003B84  1E24               	comf	(___flge@ff2+2)^0,f,c
  6506  003B86  B0D8               	btfsc	status,0,c
  6507  003B88  2A24               	incf	(___flge@ff2+2)^0,f,c
  6508  003B8A  0E80               	movlw	128
  6509  003B8C  5625               	subfwb	(___flge@ff2+3)^0,f,c
  6510  003B8E                     l990:
  6511  003B8E  0E00               	movlw	0
  6512  003B90  1A1E               	xorwf	___flge@ff1^0,f,c
  6513  003B92  0E00               	movlw	0
  6514  003B94  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  6515  003B96  0E00               	movlw	0
  6516  003B98  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  6517  003B9A  0E80               	movlw	128
  6518  003B9C  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  6519  003B9E  0E00               	movlw	0
  6520  003BA0  1A22               	xorwf	___flge@ff2^0,f,c
  6521  003BA2  0E00               	movlw	0
  6522  003BA4  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  6523  003BA6  0E00               	movlw	0
  6524  003BA8  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  6525  003BAA  0E80               	movlw	128
  6526  003BAC  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  6527  003BAE  5022               	movf	___flge@ff2^0,w,c
  6528  003BB0  5C1E               	subwf	___flge@ff1^0,w,c
  6529  003BB2  5023               	movf	(___flge@ff2+1)^0,w,c
  6530  003BB4  581F               	subwfb	(___flge@ff1+1)^0,w,c
  6531  003BB6  5024               	movf	(___flge@ff2+2)^0,w,c
  6532  003BB8  5820               	subwfb	(___flge@ff1+2)^0,w,c
  6533  003BBA  5025               	movf	(___flge@ff2+3)^0,w,c
  6534  003BBC  5821               	subwfb	(___flge@ff1+3)^0,w,c
  6535  003BBE  B0D8               	btfsc	status,0,c
  6536  003BC0  EFE4  F01D         	goto	u7101
  6537  003BC4  EFE6  F01D         	goto	u7100
  6538  003BC8                     u7101:
  6539  003BC8  EFE9  F01D         	goto	l6840
  6540  003BCC                     u7100:
  6541  003BCC  90D8               	bcf	status,0,c
  6542  003BCE  EFEA  F01D         	goto	l995
  6543  003BD2                     l6840:
  6544  003BD2  80D8               	bsf	status,0,c
  6545  003BD4                     l995:
  6546  003BD4  0012               	return		;funcret
  6547  003BD6                     __end_of___flge:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function ___fleq *****************
  6551 ;; Defined at:
  6552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  ff1             4    4[COMRAM] unsigned char 
  6555 ;;  ff2             4    8[COMRAM] unsigned char 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;Total ram usage:       12 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; Hardware stack levels required when called: 4
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_efgtoa
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text22
  6582  00421C                     __ptext22:
  6583                           	callstack 0
  6584  00421C                     ___fleq:
  6585                           	callstack 22
  6586  00421C  0E00               	movlw	0
  6587  00421E  1405               	andwf	___fleq@ff1^0,w,c
  6588  004220  6E0D               	movwf	??___fleq^0,c
  6589  004222  0E00               	movlw	0
  6590  004224  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6591  004226  6E0E               	movwf	(??___fleq+1)^0,c
  6592  004228  0E80               	movlw	128
  6593  00422A  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6594  00422C  6E0F               	movwf	(??___fleq+2)^0,c
  6595  00422E  0E7F               	movlw	127
  6596  004230  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6597  004232  6E10               	movwf	(??___fleq+3)^0,c
  6598  004234  500D               	movf	??___fleq^0,w,c
  6599  004236  100E               	iorwf	(??___fleq+1)^0,w,c
  6600  004238  100F               	iorwf	(??___fleq+2)^0,w,c
  6601  00423A  1010               	iorwf	(??___fleq+3)^0,w,c
  6602  00423C  A4D8               	btfss	status,2,c
  6603  00423E  EF23  F021         	goto	u7031
  6604  004242  EF25  F021         	goto	u7030
  6605  004246                     u7031:
  6606  004246  EF2D  F021         	goto	l6810
  6607  00424A                     u7030:
  6608  00424A  0E00               	movlw	0
  6609  00424C  6E05               	movwf	___fleq@ff1^0,c
  6610  00424E  0E00               	movlw	0
  6611  004250  6E06               	movwf	(___fleq@ff1+1)^0,c
  6612  004252  0E00               	movlw	0
  6613  004254  6E07               	movwf	(___fleq@ff1+2)^0,c
  6614  004256  0E00               	movlw	0
  6615  004258  6E08               	movwf	(___fleq@ff1+3)^0,c
  6616  00425A                     l6810:
  6617  00425A  0E00               	movlw	0
  6618  00425C  1409               	andwf	___fleq@ff2^0,w,c
  6619  00425E  6E0D               	movwf	??___fleq^0,c
  6620  004260  0E00               	movlw	0
  6621  004262  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6622  004264  6E0E               	movwf	(??___fleq+1)^0,c
  6623  004266  0E80               	movlw	128
  6624  004268  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6625  00426A  6E0F               	movwf	(??___fleq+2)^0,c
  6626  00426C  0E7F               	movlw	127
  6627  00426E  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6628  004270  6E10               	movwf	(??___fleq+3)^0,c
  6629  004272  500D               	movf	??___fleq^0,w,c
  6630  004274  100E               	iorwf	(??___fleq+1)^0,w,c
  6631  004276  100F               	iorwf	(??___fleq+2)^0,w,c
  6632  004278  1010               	iorwf	(??___fleq+3)^0,w,c
  6633  00427A  A4D8               	btfss	status,2,c
  6634  00427C  EF42  F021         	goto	u7041
  6635  004280  EF44  F021         	goto	u7040
  6636  004284                     u7041:
  6637  004284  EF4C  F021         	goto	l6814
  6638  004288                     u7040:
  6639  004288  0E00               	movlw	0
  6640  00428A  6E09               	movwf	___fleq@ff2^0,c
  6641  00428C  0E00               	movlw	0
  6642  00428E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6643  004290  0E00               	movlw	0
  6644  004292  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6645  004294  0E00               	movlw	0
  6646  004296  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6647  004298                     l6814:
  6648  004298  5009               	movf	___fleq@ff2^0,w,c
  6649  00429A  1805               	xorwf	___fleq@ff1^0,w,c
  6650  00429C  E10F               	bnz	u7050
  6651  00429E  500A               	movf	(___fleq@ff2+1)^0,w,c
  6652  0042A0  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6653  0042A2  E10C               	bnz	u7050
  6654  0042A4  500B               	movf	(___fleq@ff2+2)^0,w,c
  6655  0042A6  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6656  0042A8  E109               	bnz	u7050
  6657  0042AA  500C               	movf	(___fleq@ff2+3)^0,w,c
  6658  0042AC  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6659  0042AE  B4D8               	btfsc	status,2,c
  6660  0042B0  EF5C  F021         	goto	u7051
  6661  0042B4  EF5E  F021         	goto	u7050
  6662  0042B8                     u7051:
  6663  0042B8  EF61  F021         	goto	l6818
  6664  0042BC                     u7050:
  6665  0042BC  90D8               	bcf	status,0,c
  6666  0042BE  EF62  F021         	goto	l984
  6667  0042C2                     l6818:
  6668  0042C2  80D8               	bsf	status,0,c
  6669  0042C4                     l984:
  6670  0042C4  0012               	return		;funcret
  6671  0042C6                     __end_of___fleq:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function ___fldiv *****************
  6675 ;; Defined at:
  6676 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  b               4    4[COMRAM] unsigned char 
  6679 ;;  a               4    8[COMRAM] unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  grs             4   23[COMRAM] unsigned long 
  6682 ;;  rem             4   16[COMRAM] unsigned long 
  6683 ;;  new_exp         2   21[COMRAM] short 
  6684 ;;  aexp            1   28[COMRAM] unsigned char 
  6685 ;;  bexp            1   27[COMRAM] unsigned char 
  6686 ;;  sign            1   20[COMRAM] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  4    4[COMRAM] unsigned char 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;Total ram usage:       25 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 4
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_efgtoa
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text23
  6711  002F5C                     __ptext23:
  6712                           	callstack 0
  6713  002F5C                     ___fldiv:
  6714                           	callstack 22
  6715  002F5C  5008               	movf	(___fldiv@b+3)^0,w,c
  6716  002F5E  0B80               	andlw	128
  6717  002F60  6E15               	movwf	___fldiv@sign^0,c
  6718  002F62  5008               	movf	(___fldiv@b+3)^0,w,c
  6719  002F64  2408               	addwf	(___fldiv@b+3)^0,w,c
  6720  002F66  6E1C               	movwf	___fldiv@bexp^0,c
  6721  002F68  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6722  002F6A  EFB9  F017         	goto	u6491
  6723  002F6E  EFBB  F017         	goto	u6490
  6724  002F72                     u6491:
  6725  002F72  EFBC  F017         	goto	l6458
  6726  002F76                     u6490:
  6727  002F76  801C               	bsf	___fldiv@bexp^0,0,c
  6728  002F78                     l6458:
  6729  002F78  501C               	movf	___fldiv@bexp^0,w,c
  6730  002F7A  B4D8               	btfsc	status,2,c
  6731  002F7C  EFC2  F017         	goto	u6501
  6732  002F80  EFC4  F017         	goto	u6500
  6733  002F84                     u6501:
  6734  002F84  EFD9  F017         	goto	l6468
  6735  002F88                     u6500:
  6736  002F88  281C               	incf	___fldiv@bexp^0,w,c
  6737  002F8A  A4D8               	btfss	status,2,c
  6738  002F8C  EFCA  F017         	goto	u6511
  6739  002F90  EFCC  F017         	goto	u6510
  6740  002F94                     u6511:
  6741  002F94  EFD4  F017         	goto	l6464
  6742  002F98                     u6510:
  6743  002F98  0E00               	movlw	0
  6744  002F9A  6E05               	movwf	___fldiv@b^0,c
  6745  002F9C  0E00               	movlw	0
  6746  002F9E  6E06               	movwf	(___fldiv@b+1)^0,c
  6747  002FA0  0E00               	movlw	0
  6748  002FA2  6E07               	movwf	(___fldiv@b+2)^0,c
  6749  002FA4  0E00               	movlw	0
  6750  002FA6  6E08               	movwf	(___fldiv@b+3)^0,c
  6751  002FA8                     l6464:
  6752  002FA8  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6753  002FAA  0E00               	movlw	0
  6754  002FAC  6E08               	movwf	(___fldiv@b+3)^0,c
  6755  002FAE  EFE1  F017         	goto	l6470
  6756  002FB2                     l6468:
  6757  002FB2  0E00               	movlw	0
  6758  002FB4  6E05               	movwf	___fldiv@b^0,c
  6759  002FB6  0E00               	movlw	0
  6760  002FB8  6E06               	movwf	(___fldiv@b+1)^0,c
  6761  002FBA  0E00               	movlw	0
  6762  002FBC  6E07               	movwf	(___fldiv@b+2)^0,c
  6763  002FBE  0E00               	movlw	0
  6764  002FC0  6E08               	movwf	(___fldiv@b+3)^0,c
  6765  002FC2                     l6470:
  6766  002FC2  500C               	movf	(___fldiv@a+3)^0,w,c
  6767  002FC4  0B80               	andlw	128
  6768  002FC6  1A15               	xorwf	___fldiv@sign^0,f,c
  6769  002FC8  500C               	movf	(___fldiv@a+3)^0,w,c
  6770  002FCA  240C               	addwf	(___fldiv@a+3)^0,w,c
  6771  002FCC  6E1D               	movwf	___fldiv@aexp^0,c
  6772  002FCE  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6773  002FD0  EFEC  F017         	goto	u6521
  6774  002FD4  EFEE  F017         	goto	u6520
  6775  002FD8                     u6521:
  6776  002FD8  EFEF  F017         	goto	l6478
  6777  002FDC                     u6520:
  6778  002FDC  801D               	bsf	___fldiv@aexp^0,0,c
  6779  002FDE                     l6478:
  6780  002FDE  501D               	movf	___fldiv@aexp^0,w,c
  6781  002FE0  B4D8               	btfsc	status,2,c
  6782  002FE2  EFF5  F017         	goto	u6531
  6783  002FE6  EFF7  F017         	goto	u6530
  6784  002FEA                     u6531:
  6785  002FEA  EF0C  F018         	goto	l6488
  6786  002FEE                     u6530:
  6787  002FEE  281D               	incf	___fldiv@aexp^0,w,c
  6788  002FF0  A4D8               	btfss	status,2,c
  6789  002FF2  EFFD  F017         	goto	u6541
  6790  002FF6  EFFF  F017         	goto	u6540
  6791  002FFA                     u6541:
  6792  002FFA  EF07  F018         	goto	l6484
  6793  002FFE                     u6540:
  6794  002FFE  0E00               	movlw	0
  6795  003000  6E09               	movwf	___fldiv@a^0,c
  6796  003002  0E00               	movlw	0
  6797  003004  6E0A               	movwf	(___fldiv@a+1)^0,c
  6798  003006  0E00               	movlw	0
  6799  003008  6E0B               	movwf	(___fldiv@a+2)^0,c
  6800  00300A  0E00               	movlw	0
  6801  00300C  6E0C               	movwf	(___fldiv@a+3)^0,c
  6802  00300E                     l6484:
  6803  00300E  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6804  003010  0E00               	movlw	0
  6805  003012  6E0C               	movwf	(___fldiv@a+3)^0,c
  6806  003014  EF14  F018         	goto	l6490
  6807  003018                     l6488:
  6808  003018  0E00               	movlw	0
  6809  00301A  6E09               	movwf	___fldiv@a^0,c
  6810  00301C  0E00               	movlw	0
  6811  00301E  6E0A               	movwf	(___fldiv@a+1)^0,c
  6812  003020  0E00               	movlw	0
  6813  003022  6E0B               	movwf	(___fldiv@a+2)^0,c
  6814  003024  0E00               	movlw	0
  6815  003026  6E0C               	movwf	(___fldiv@a+3)^0,c
  6816  003028                     l6490:
  6817  003028  5009               	movf	___fldiv@a^0,w,c
  6818  00302A  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6819  00302C  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6820  00302E  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6821  003030  A4D8               	btfss	status,2,c
  6822  003032  EF1D  F018         	goto	u6551
  6823  003036  EF1F  F018         	goto	u6550
  6824  00303A                     u6551:
  6825  00303A  EF37  F018         	goto	l6502
  6826  00303E                     u6550:
  6827  00303E  0E00               	movlw	0
  6828  003040  6E05               	movwf	___fldiv@b^0,c
  6829  003042  0E00               	movlw	0
  6830  003044  6E06               	movwf	(___fldiv@b+1)^0,c
  6831  003046  0E00               	movlw	0
  6832  003048  6E07               	movwf	(___fldiv@b+2)^0,c
  6833  00304A  0E00               	movlw	0
  6834  00304C  6E08               	movwf	(___fldiv@b+3)^0,c
  6835  00304E  0E80               	movlw	128
  6836  003050  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6837  003052  0E7F               	movlw	127
  6838  003054  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6839  003056                     l6496:
  6840  003056  5015               	movf	___fldiv@sign^0,w,c
  6841  003058  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6842  00305A  C005  F005         	movff	___fldiv@b,?___fldiv
  6843  00305E  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6844  003062  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6845  003066  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6846  00306A  EF7A  F019         	goto	l1307
  6847  00306E                     l6502:
  6848  00306E  501C               	movf	___fldiv@bexp^0,w,c
  6849  003070  A4D8               	btfss	status,2,c
  6850  003072  EF3D  F018         	goto	u6561
  6851  003076  EF3F  F018         	goto	u6560
  6852  00307A                     u6561:
  6853  00307A  EF49  F018         	goto	l6510
  6854  00307E                     u6560:
  6855  00307E  0E00               	movlw	0
  6856  003080  6E05               	movwf	?___fldiv^0,c
  6857  003082  0E00               	movlw	0
  6858  003084  6E06               	movwf	(?___fldiv+1)^0,c
  6859  003086  0E00               	movlw	0
  6860  003088  6E07               	movwf	(?___fldiv+2)^0,c
  6861  00308A  0E00               	movlw	0
  6862  00308C  6E08               	movwf	(?___fldiv+3)^0,c
  6863  00308E  EF7A  F019         	goto	l1307
  6864  003092                     l6510:
  6865  003092  501D               	movf	___fldiv@aexp^0,w,c
  6866  003094  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6867  003098  6A0E               	clrf	(??___fldiv+1)^0,c
  6868  00309A  5E0D               	subwf	??___fldiv^0,f,c
  6869  00309C  0E00               	movlw	0
  6870  00309E  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6871  0030A0  0E7F               	movlw	127
  6872  0030A2  240D               	addwf	??___fldiv^0,w,c
  6873  0030A4  6E16               	movwf	___fldiv@new_exp^0,c
  6874  0030A6  0E00               	movlw	0
  6875  0030A8  200E               	addwfc	(??___fldiv+1)^0,w,c
  6876  0030AA  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6877  0030AC  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6878  0030B0  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6879  0030B4  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6880  0030B8  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6881  0030BC  0E00               	movlw	0
  6882  0030BE  6E05               	movwf	___fldiv@b^0,c
  6883  0030C0  0E00               	movlw	0
  6884  0030C2  6E06               	movwf	(___fldiv@b+1)^0,c
  6885  0030C4  0E00               	movlw	0
  6886  0030C6  6E07               	movwf	(___fldiv@b+2)^0,c
  6887  0030C8  0E00               	movlw	0
  6888  0030CA  6E08               	movwf	(___fldiv@b+3)^0,c
  6889  0030CC  0E00               	movlw	0
  6890  0030CE  6E18               	movwf	___fldiv@grs^0,c
  6891  0030D0  0E00               	movlw	0
  6892  0030D2  6E19               	movwf	(___fldiv@grs+1)^0,c
  6893  0030D4  0E00               	movlw	0
  6894  0030D6  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6895  0030D8  0E00               	movlw	0
  6896  0030DA  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6897  0030DC  0E00               	movlw	0
  6898  0030DE  6E1D               	movwf	___fldiv@aexp^0,c
  6899  0030E0  EFAA  F018         	goto	l1309
  6900  0030E4                     l6520:
  6901  0030E4  501D               	movf	___fldiv@aexp^0,w,c
  6902  0030E6  B4D8               	btfsc	status,2,c
  6903  0030E8  EF78  F018         	goto	u6571
  6904  0030EC  EF7A  F018         	goto	u6570
  6905  0030F0                     u6571:
  6906  0030F0  EF91  F018         	goto	l6528
  6907  0030F4                     u6570:
  6908  0030F4  90D8               	bcf	status,0,c
  6909  0030F6  3611               	rlcf	___fldiv@rem^0,f,c
  6910  0030F8  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6911  0030FA  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6912  0030FC  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6913  0030FE  90D8               	bcf	status,0,c
  6914  003100  3605               	rlcf	___fldiv@b^0,f,c
  6915  003102  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6916  003104  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6917  003106  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6918  003108  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6919  00310A  EF89  F018         	goto	u6581
  6920  00310E  EF8B  F018         	goto	u6580
  6921  003112                     u6581:
  6922  003112  EF8C  F018         	goto	l1312
  6923  003116                     u6580:
  6924  003116  8005               	bsf	___fldiv@b^0,0,c
  6925  003118                     l1312:
  6926  003118  90D8               	bcf	status,0,c
  6927  00311A  3618               	rlcf	___fldiv@grs^0,f,c
  6928  00311C  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6929  00311E  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6930  003120  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6931  003122                     l6528:
  6932  003122  5009               	movf	___fldiv@a^0,w,c
  6933  003124  5C11               	subwf	___fldiv@rem^0,w,c
  6934  003126  500A               	movf	(___fldiv@a+1)^0,w,c
  6935  003128  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6936  00312A  500B               	movf	(___fldiv@a+2)^0,w,c
  6937  00312C  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6938  00312E  500C               	movf	(___fldiv@a+3)^0,w,c
  6939  003130  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6940  003132  A0D8               	btfss	status,0,c
  6941  003134  EF9E  F018         	goto	u6591
  6942  003138  EFA0  F018         	goto	u6590
  6943  00313C                     u6591:
  6944  00313C  EFA9  F018         	goto	l6534
  6945  003140                     u6590:
  6946  003140  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6947  003142  5009               	movf	___fldiv@a^0,w,c
  6948  003144  5E11               	subwf	___fldiv@rem^0,f,c
  6949  003146  500A               	movf	(___fldiv@a+1)^0,w,c
  6950  003148  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6951  00314A  500B               	movf	(___fldiv@a+2)^0,w,c
  6952  00314C  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6953  00314E  500C               	movf	(___fldiv@a+3)^0,w,c
  6954  003150  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6955  003152                     l6534:
  6956  003152  2A1D               	incf	___fldiv@aexp^0,f,c
  6957  003154                     l1309:
  6958  003154  0E19               	movlw	25
  6959  003156  641D               	cpfsgt	___fldiv@aexp^0,c
  6960  003158  EFB0  F018         	goto	u6601
  6961  00315C  EFB2  F018         	goto	u6600
  6962  003160                     u6601:
  6963  003160  EF72  F018         	goto	l6520
  6964  003164                     u6600:
  6965  003164  5011               	movf	___fldiv@rem^0,w,c
  6966  003166  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6967  003168  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6968  00316A  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6969  00316C  B4D8               	btfsc	status,2,c
  6970  00316E  EFBB  F018         	goto	u6611
  6971  003172  EFBD  F018         	goto	u6610
  6972  003176                     u6611:
  6973  003176  EFD5  F018         	goto	l6546
  6974  00317A                     u6610:
  6975  00317A  8018               	bsf	___fldiv@grs^0,0,c
  6976  00317C  EFD5  F018         	goto	l6546
  6977  003180                     l6540:
  6978  003180  90D8               	bcf	status,0,c
  6979  003182  3605               	rlcf	___fldiv@b^0,f,c
  6980  003184  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6981  003186  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6982  003188  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6983  00318A  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6984  00318C  EFCA  F018         	goto	u6621
  6985  003190  EFCC  F018         	goto	u6620
  6986  003194                     u6621:
  6987  003194  EFCD  F018         	goto	l1318
  6988  003198                     u6620:
  6989  003198  8005               	bsf	___fldiv@b^0,0,c
  6990  00319A                     l1318:
  6991  00319A  90D8               	bcf	status,0,c
  6992  00319C  3618               	rlcf	___fldiv@grs^0,f,c
  6993  00319E  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6994  0031A0  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6995  0031A2  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6996  0031A4  0616               	decf	___fldiv@new_exp^0,f,c
  6997  0031A6  A0D8               	btfss	status,0,c
  6998  0031A8  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6999  0031AA                     l6546:
  7000  0031AA  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7001  0031AC  EFDA  F018         	goto	u6631
  7002  0031B0  EFDC  F018         	goto	u6630
  7003  0031B4                     u6631:
  7004  0031B4  EFC0  F018         	goto	l6540
  7005  0031B8                     u6630:
  7006  0031B8  0E00               	movlw	0
  7007  0031BA  6E1D               	movwf	___fldiv@aexp^0,c
  7008  0031BC  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7009  0031BE  EFE3  F018         	goto	u6641
  7010  0031C2  EFE5  F018         	goto	u6640
  7011  0031C6                     u6641:
  7012  0031C6  EF09  F019         	goto	l1320
  7013  0031CA                     u6640:
  7014  0031CA  0EFF               	movlw	255
  7015  0031CC  1418               	andwf	___fldiv@grs^0,w,c
  7016  0031CE  6E0D               	movwf	??___fldiv^0,c
  7017  0031D0  0EFF               	movlw	255
  7018  0031D2  1419               	andwf	(___fldiv@grs+1)^0,w,c
  7019  0031D4  6E0E               	movwf	(??___fldiv+1)^0,c
  7020  0031D6  0EFF               	movlw	255
  7021  0031D8  141A               	andwf	(___fldiv@grs+2)^0,w,c
  7022  0031DA  6E0F               	movwf	(??___fldiv+2)^0,c
  7023  0031DC  0E7F               	movlw	127
  7024  0031DE  141B               	andwf	(___fldiv@grs+3)^0,w,c
  7025  0031E0  6E10               	movwf	(??___fldiv+3)^0,c
  7026  0031E2  500D               	movf	??___fldiv^0,w,c
  7027  0031E4  100E               	iorwf	(??___fldiv+1)^0,w,c
  7028  0031E6  100F               	iorwf	(??___fldiv+2)^0,w,c
  7029  0031E8  1010               	iorwf	(??___fldiv+3)^0,w,c
  7030  0031EA  B4D8               	btfsc	status,2,c
  7031  0031EC  EFFA  F018         	goto	u6651
  7032  0031F0  EFFC  F018         	goto	u6650
  7033  0031F4                     u6651:
  7034  0031F4  EF00  F019         	goto	l1321
  7035  0031F8                     u6650:
  7036  0031F8                     l6554:
  7037  0031F8  0E01               	movlw	1
  7038  0031FA  6E1D               	movwf	___fldiv@aexp^0,c
  7039  0031FC  EF09  F019         	goto	l1320
  7040  003200                     l1321:
  7041  003200  A005               	btfss	___fldiv@b^0,0,c
  7042  003202  EF05  F019         	goto	u6661
  7043  003206  EF07  F019         	goto	u6660
  7044  00320A                     u6661:
  7045  00320A  EF09  F019         	goto	l1320
  7046  00320E                     u6660:
  7047  00320E  EFFC  F018         	goto	l6554
  7048  003212                     l1320:
  7049  003212  501D               	movf	___fldiv@aexp^0,w,c
  7050  003214  B4D8               	btfsc	status,2,c
  7051  003216  EF0F  F019         	goto	u6671
  7052  00321A  EF11  F019         	goto	u6670
  7053  00321E                     u6671:
  7054  00321E  EF35  F019         	goto	l6566
  7055  003222                     u6670:
  7056  003222  0E01               	movlw	1
  7057  003224  2605               	addwf	___fldiv@b^0,f,c
  7058  003226  0E00               	movlw	0
  7059  003228  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7060  00322A  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7061  00322C  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7062  00322E  A008               	btfss	(___fldiv@b+3)^0,0,c
  7063  003230  EF1C  F019         	goto	u6681
  7064  003234  EF1E  F019         	goto	u6680
  7065  003238                     u6681:
  7066  003238  EF35  F019         	goto	l6566
  7067  00323C                     u6680:
  7068  00323C  C005  F00D         	movff	___fldiv@b,??___fldiv
  7069  003240  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7070  003244  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7071  003248  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7072  00324C  3410               	rlcf	(??___fldiv+3)^0,w,c
  7073  00324E  3210               	rrcf	(??___fldiv+3)^0,f,c
  7074  003250  320F               	rrcf	(??___fldiv+2)^0,f,c
  7075  003252  320E               	rrcf	(??___fldiv+1)^0,f,c
  7076  003254  320D               	rrcf	??___fldiv^0,f,c
  7077  003256  C00D  F005         	movff	??___fldiv,___fldiv@b
  7078  00325A  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7079  00325E  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7080  003262  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7081  003266  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7082  003268  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7083  00326A                     l6566:
  7084  00326A  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7085  00326C  EF40  F019         	goto	u6691
  7086  003270  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7087  003272  E108               	bnz	u6690
  7088  003274  2816               	incf	___fldiv@new_exp^0,w,c
  7089  003276  A0D8               	btfss	status,0,c
  7090  003278  EF40  F019         	goto	u6691
  7091  00327C  EF42  F019         	goto	u6690
  7092  003280                     u6691:
  7093  003280  EF4D  F019         	goto	l6570
  7094  003284                     u6690:
  7095  003284  0E00               	movlw	0
  7096  003286  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7097  003288  6816               	setf	___fldiv@new_exp^0,c
  7098  00328A  0E00               	movlw	0
  7099  00328C  6E05               	movwf	___fldiv@b^0,c
  7100  00328E  0E00               	movlw	0
  7101  003290  6E06               	movwf	(___fldiv@b+1)^0,c
  7102  003292  0E00               	movlw	0
  7103  003294  6E07               	movwf	(___fldiv@b+2)^0,c
  7104  003296  0E00               	movlw	0
  7105  003298  6E08               	movwf	(___fldiv@b+3)^0,c
  7106  00329A                     l6570:
  7107  00329A  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7108  00329C  EF5A  F019         	goto	u6700
  7109  0032A0  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7110  0032A2  E106               	bnz	u6701
  7111  0032A4  0416               	decf	___fldiv@new_exp^0,w,c
  7112  0032A6  B0D8               	btfsc	status,0,c
  7113  0032A8  EF58  F019         	goto	u6701
  7114  0032AC  EF5A  F019         	goto	u6700
  7115  0032B0                     u6701:
  7116  0032B0  EF68  F019         	goto	l6574
  7117  0032B4                     u6700:
  7118  0032B4  0E00               	movlw	0
  7119  0032B6  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7120  0032B8  0E00               	movlw	0
  7121  0032BA  6E16               	movwf	___fldiv@new_exp^0,c
  7122  0032BC  0E00               	movlw	0
  7123  0032BE  6E05               	movwf	___fldiv@b^0,c
  7124  0032C0  0E00               	movlw	0
  7125  0032C2  6E06               	movwf	(___fldiv@b+1)^0,c
  7126  0032C4  0E00               	movlw	0
  7127  0032C6  6E07               	movwf	(___fldiv@b+2)^0,c
  7128  0032C8  0E00               	movlw	0
  7129  0032CA  6E08               	movwf	(___fldiv@b+3)^0,c
  7130  0032CC  0E00               	movlw	0
  7131  0032CE  6E15               	movwf	___fldiv@sign^0,c
  7132  0032D0                     l6574:
  7133  0032D0  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7134  0032D4  A01C               	btfss	___fldiv@bexp^0,0,c
  7135  0032D6  EF6F  F019         	goto	u6711
  7136  0032DA  EF71  F019         	goto	u6710
  7137  0032DE                     u6711:
  7138  0032DE  EF74  F019         	goto	l6580
  7139  0032E2                     u6710:
  7140  0032E2  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7141  0032E4  EF75  F019         	goto	l6582
  7142  0032E8                     l6580:
  7143  0032E8  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7144  0032EA                     l6582:
  7145  0032EA  90D8               	bcf	status,0,c
  7146  0032EC  301C               	rrcf	___fldiv@bexp^0,w,c
  7147  0032EE  6E08               	movwf	(___fldiv@b+3)^0,c
  7148  0032F0  EF2B  F018         	goto	l6496
  7149  0032F4                     l1307:
  7150  0032F4  0012               	return		;funcret
  7151  0032F6                     __end_of___fldiv:
  7152                           	callstack 0
  7153                           
  7154 ;; *************** function ___awmod *****************
  7155 ;; Defined at:
  7156 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  dividend        2    4[COMRAM] int 
  7159 ;;  divisor         2    6[COMRAM] int 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  sign            1    9[COMRAM] unsigned char 
  7162 ;;  counter         1    8[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2    4[COMRAM] int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;Total ram usage:        6 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 4
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_efgtoa
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text24
  7187  0040BC                     __ptext24:
  7188                           	callstack 0
  7189  0040BC                     ___awmod:
  7190                           	callstack 22
  7191  0040BC  0E00               	movlw	0
  7192  0040BE  6E0A               	movwf	___awmod@sign^0,c
  7193  0040C0  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7194  0040C2  EF67  F020         	goto	u6970
  7195  0040C6  EF65  F020         	goto	u6971
  7196  0040CA                     u6971:
  7197  0040CA  EF6D  F020         	goto	l6778
  7198  0040CE                     u6970:
  7199  0040CE  6C05               	negf	___awmod@dividend^0,c
  7200  0040D0  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7201  0040D2  B0D8               	btfsc	status,0,c
  7202  0040D4  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7203  0040D6  0E01               	movlw	1
  7204  0040D8  6E0A               	movwf	___awmod@sign^0,c
  7205  0040DA                     l6778:
  7206  0040DA  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7207  0040DC  EF74  F020         	goto	u6980
  7208  0040E0  EF72  F020         	goto	u6981
  7209  0040E4                     u6981:
  7210  0040E4  EF78  F020         	goto	l6782
  7211  0040E8                     u6980:
  7212  0040E8  6C07               	negf	___awmod@divisor^0,c
  7213  0040EA  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7214  0040EC  B0D8               	btfsc	status,0,c
  7215  0040EE  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7216  0040F0                     l6782:
  7217  0040F0  5007               	movf	___awmod@divisor^0,w,c
  7218  0040F2  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7219  0040F4  B4D8               	btfsc	status,2,c
  7220  0040F6  EF7F  F020         	goto	u6991
  7221  0040FA  EF81  F020         	goto	u6990
  7222  0040FE                     u6991:
  7223  0040FE  EFA5  F020         	goto	l6798
  7224  004102                     u6990:
  7225  004102  0E01               	movlw	1
  7226  004104  6E09               	movwf	___awmod@counter^0,c
  7227  004106  EF89  F020         	goto	l6788
  7228  00410A                     l6786:
  7229  00410A  90D8               	bcf	status,0,c
  7230  00410C  3607               	rlcf	___awmod@divisor^0,f,c
  7231  00410E  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7232  004110  2A09               	incf	___awmod@counter^0,f,c
  7233  004112                     l6788:
  7234  004112  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7235  004114  EF8E  F020         	goto	u7001
  7236  004118  EF90  F020         	goto	u7000
  7237  00411C                     u7001:
  7238  00411C  EF85  F020         	goto	l6786
  7239  004120                     u7000:
  7240  004120                     l6790:
  7241  004120  5007               	movf	___awmod@divisor^0,w,c
  7242  004122  5C05               	subwf	___awmod@dividend^0,w,c
  7243  004124  5008               	movf	(___awmod@divisor+1)^0,w,c
  7244  004126  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7245  004128  A0D8               	btfss	status,0,c
  7246  00412A  EF99  F020         	goto	u7011
  7247  00412E  EF9B  F020         	goto	u7010
  7248  004132                     u7011:
  7249  004132  EF9F  F020         	goto	l6794
  7250  004136                     u7010:
  7251  004136  5007               	movf	___awmod@divisor^0,w,c
  7252  004138  5E05               	subwf	___awmod@dividend^0,f,c
  7253  00413A  5008               	movf	(___awmod@divisor+1)^0,w,c
  7254  00413C  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7255  00413E                     l6794:
  7256  00413E  90D8               	bcf	status,0,c
  7257  004140  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7258  004142  3207               	rrcf	___awmod@divisor^0,f,c
  7259  004144  2E09               	decfsz	___awmod@counter^0,f,c
  7260  004146  EF90  F020         	goto	l6790
  7261  00414A                     l6798:
  7262  00414A  500A               	movf	___awmod@sign^0,w,c
  7263  00414C  B4D8               	btfsc	status,2,c
  7264  00414E  EFAB  F020         	goto	u7021
  7265  004152  EFAD  F020         	goto	u7020
  7266  004156                     u7021:
  7267  004156  EFB1  F020         	goto	l6802
  7268  00415A                     u7020:
  7269  00415A  6C05               	negf	___awmod@dividend^0,c
  7270  00415C  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7271  00415E  B0D8               	btfsc	status,0,c
  7272  004160  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7273  004162                     l6802:
  7274  004162  C005  F005         	movff	___awmod@dividend,?___awmod
  7275  004166  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7276  00416A  0012               	return		;funcret
  7277  00416C                     __end_of___awmod:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function ___awdiv *****************
  7281 ;; Defined at:
  7282 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  dividend        2    4[COMRAM] int 
  7285 ;;  divisor         2    6[COMRAM] int 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  quotient        2   10[COMRAM] int 
  7288 ;;  sign            1    9[COMRAM] unsigned char 
  7289 ;;  counter         1    8[COMRAM] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  2    4[COMRAM] int 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;Total ram usage:        8 bytes
  7304 ;; Hardware stack levels used: 1
  7305 ;; Hardware stack levels required when called: 4
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_efgtoa
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text25
  7314  003E76                     __ptext25:
  7315                           	callstack 0
  7316  003E76                     ___awdiv:
  7317                           	callstack 22
  7318  003E76  0E00               	movlw	0
  7319  003E78  6E0A               	movwf	___awdiv@sign^0,c
  7320  003E7A  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7321  003E7C  EF44  F01F         	goto	u6910
  7322  003E80  EF42  F01F         	goto	u6911
  7323  003E84                     u6911:
  7324  003E84  EF4A  F01F         	goto	l6734
  7325  003E88                     u6910:
  7326  003E88  6C07               	negf	___awdiv@divisor^0,c
  7327  003E8A  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7328  003E8C  B0D8               	btfsc	status,0,c
  7329  003E8E  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7330  003E90  0E01               	movlw	1
  7331  003E92  6E0A               	movwf	___awdiv@sign^0,c
  7332  003E94                     l6734:
  7333  003E94  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7334  003E96  EF51  F01F         	goto	u6920
  7335  003E9A  EF4F  F01F         	goto	u6921
  7336  003E9E                     u6921:
  7337  003E9E  EF57  F01F         	goto	l6740
  7338  003EA2                     u6920:
  7339  003EA2  6C05               	negf	___awdiv@dividend^0,c
  7340  003EA4  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7341  003EA6  B0D8               	btfsc	status,0,c
  7342  003EA8  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7343  003EAA  0E01               	movlw	1
  7344  003EAC  1A0A               	xorwf	___awdiv@sign^0,f,c
  7345  003EAE                     l6740:
  7346  003EAE  0E00               	movlw	0
  7347  003EB0  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7348  003EB2  0E00               	movlw	0
  7349  003EB4  6E0B               	movwf	___awdiv@quotient^0,c
  7350  003EB6  5007               	movf	___awdiv@divisor^0,w,c
  7351  003EB8  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7352  003EBA  B4D8               	btfsc	status,2,c
  7353  003EBC  EF62  F01F         	goto	u6931
  7354  003EC0  EF64  F01F         	goto	u6930
  7355  003EC4                     u6931:
  7356  003EC4  EF8C  F01F         	goto	l6762
  7357  003EC8                     u6930:
  7358  003EC8  0E01               	movlw	1
  7359  003ECA  6E09               	movwf	___awdiv@counter^0,c
  7360  003ECC  EF6C  F01F         	goto	l6748
  7361  003ED0                     l6746:
  7362  003ED0  90D8               	bcf	status,0,c
  7363  003ED2  3607               	rlcf	___awdiv@divisor^0,f,c
  7364  003ED4  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7365  003ED6  2A09               	incf	___awdiv@counter^0,f,c
  7366  003ED8                     l6748:
  7367  003ED8  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7368  003EDA  EF71  F01F         	goto	u6941
  7369  003EDE  EF73  F01F         	goto	u6940
  7370  003EE2                     u6941:
  7371  003EE2  EF68  F01F         	goto	l6746
  7372  003EE6                     u6940:
  7373  003EE6                     l6750:
  7374  003EE6  90D8               	bcf	status,0,c
  7375  003EE8  360B               	rlcf	___awdiv@quotient^0,f,c
  7376  003EEA  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7377  003EEC  5007               	movf	___awdiv@divisor^0,w,c
  7378  003EEE  5C05               	subwf	___awdiv@dividend^0,w,c
  7379  003EF0  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7380  003EF2  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7381  003EF4  A0D8               	btfss	status,0,c
  7382  003EF6  EF7F  F01F         	goto	u6951
  7383  003EFA  EF81  F01F         	goto	u6950
  7384  003EFE                     u6951:
  7385  003EFE  EF86  F01F         	goto	l6758
  7386  003F02                     u6950:
  7387  003F02  5007               	movf	___awdiv@divisor^0,w,c
  7388  003F04  5E05               	subwf	___awdiv@dividend^0,f,c
  7389  003F06  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7390  003F08  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7391  003F0A  800B               	bsf	___awdiv@quotient^0,0,c
  7392  003F0C                     l6758:
  7393  003F0C  90D8               	bcf	status,0,c
  7394  003F0E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7395  003F10  3207               	rrcf	___awdiv@divisor^0,f,c
  7396  003F12  2E09               	decfsz	___awdiv@counter^0,f,c
  7397  003F14  EF73  F01F         	goto	l6750
  7398  003F18                     l6762:
  7399  003F18  500A               	movf	___awdiv@sign^0,w,c
  7400  003F1A  B4D8               	btfsc	status,2,c
  7401  003F1C  EF92  F01F         	goto	u6961
  7402  003F20  EF94  F01F         	goto	u6960
  7403  003F24                     u6961:
  7404  003F24  EF98  F01F         	goto	l6766
  7405  003F28                     u6960:
  7406  003F28  6C0B               	negf	___awdiv@quotient^0,c
  7407  003F2A  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7408  003F2C  B0D8               	btfsc	status,0,c
  7409  003F2E  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7410  003F30                     l6766:
  7411  003F30  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7412  003F34  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7413  003F38  0012               	return		;funcret
  7414  003F3A                     __end_of___awdiv:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _atoi *****************
  7418 ;; Defined at:
  7419 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7422 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(42), 
  7423 ;;		 -> STR_7(42), STR_6(42), STR_5(42), STR_4(42), 
  7424 ;;		 -> STR_3(42), STR_2(42), STR_1(42), 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  n               2   24[COMRAM] int 
  7427 ;;  neg             2   17[COMRAM] int 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  2   11[COMRAM] int 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;Total ram usage:       15 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 5
  7444 ;; This function calls:
  7445 ;;		___wmul
  7446 ;;		_isdigit
  7447 ;;		_isspace
  7448 ;; This function is called by:
  7449 ;;		_vfpfcnvrt
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text26
  7454  0036BC                     __ptext26:
  7455                           	callstack 0
  7456  0036BC                     _atoi:
  7457                           	callstack 22
  7458  0036BC  0E00               	movlw	0
  7459  0036BE  6E1A               	movwf	(atoi@n+1)^0,c
  7460  0036C0  0E00               	movlw	0
  7461  0036C2  6E19               	movwf	atoi@n^0,c
  7462  0036C4  0E00               	movlw	0
  7463  0036C6  6E13               	movwf	(atoi@neg+1)^0,c
  7464  0036C8  0E00               	movlw	0
  7465  0036CA  6E12               	movwf	atoi@neg^0,c
  7466  0036CC  EF6A  F01B         	goto	l7310
  7467  0036D0                     l7308:
  7468  0036D0  4A0C               	infsnz	atoi@s^0,f,c
  7469  0036D2  2A0D               	incf	(atoi@s+1)^0,f,c
  7470  0036D4                     l7310:
  7471  0036D4  0E01               	movlw	1
  7472  0036D6  6E18               	movwf	_atoi$2174^0,c
  7473  0036D8  C00C  FFF6         	movff	atoi@s,tblptrl
  7474  0036DC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7475  0036E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7476  0036E0  6AF8               	clrf	tblptru,c
  7477  0036E2                     	endif
  7478  0036E2                     	if	0	;tblptru may be non-zero
  7479  0036E2                     	endif
  7480  0036E2  0008               	tblrd		*
  7481  0036E4  50F5               	movf	tablat,w,c
  7482  0036E6  0A20               	xorlw	32
  7483  0036E8  B4D8               	btfsc	status,2,c
  7484  0036EA  EF79  F01B         	goto	u8031
  7485  0036EE  EF7B  F01B         	goto	u8030
  7486  0036F2                     u8031:
  7487  0036F2  EF99  F01B         	goto	l7318
  7488  0036F6                     u8030:
  7489  0036F6  0EF7               	movlw	247
  7490  0036F8  6E0E               	movwf	??_atoi^0,c
  7491  0036FA  0EFF               	movlw	255
  7492  0036FC  6E0F               	movwf	(??_atoi+1)^0,c
  7493  0036FE  C00C  FFF6         	movff	atoi@s,tblptrl
  7494  003702  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7495  003706                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7496  003706  6AF8               	clrf	tblptru,c
  7497  003708                     	endif
  7498  003708                     	if	0	;tblptru may be non-zero
  7499  003708                     	endif
  7500  003708  0008               	tblrd		*
  7501  00370A  50F5               	movf	tablat,w,c
  7502  00370C  6E10               	movwf	(??_atoi+2)^0,c
  7503  00370E  6A11               	clrf	(??_atoi+3)^0,c
  7504  003710  500E               	movf	??_atoi^0,w,c
  7505  003712  2610               	addwf	(??_atoi+2)^0,f,c
  7506  003714  500F               	movf	(??_atoi+1)^0,w,c
  7507  003716  2211               	addwfc	(??_atoi+3)^0,f,c
  7508  003718  5011               	movf	(??_atoi+3)^0,w,c
  7509  00371A  E109               	bnz	u8040
  7510  00371C  0E05               	movlw	5
  7511  00371E  5C10               	subwf	(??_atoi+2)^0,w,c
  7512  003720  A0D8               	btfss	status,0,c
  7513  003722  EF95  F01B         	goto	u8041
  7514  003726  EF97  F01B         	goto	u8040
  7515  00372A                     u8041:
  7516  00372A  EF99  F01B         	goto	l7318
  7517  00372E                     u8040:
  7518  00372E  0E00               	movlw	0
  7519  003730  6E18               	movwf	_atoi$2174^0,c
  7520  003732                     l7318:
  7521  003732  C018  F014         	movff	_atoi$2174,_atoi$2173
  7522  003736  6A15               	clrf	(_atoi$2173+1)^0,c
  7523  003738  5014               	movf	_atoi$2173^0,w,c
  7524  00373A  1015               	iorwf	(_atoi$2173+1)^0,w,c
  7525  00373C  A4D8               	btfss	status,2,c
  7526  00373E  EFA3  F01B         	goto	u8051
  7527  003742  EFA5  F01B         	goto	u8050
  7528  003746                     u8051:
  7529  003746  EF68  F01B         	goto	l7308
  7530  00374A                     u8050:
  7531  00374A  EFAF  F01B         	goto	l7328
  7532  00374E                     l7324:
  7533  00374E  0E00               	movlw	0
  7534  003750  6E13               	movwf	(atoi@neg+1)^0,c
  7535  003752  0E01               	movlw	1
  7536  003754  6E12               	movwf	atoi@neg^0,c
  7537  003756                     l7326:
  7538  003756  4A0C               	infsnz	atoi@s^0,f,c
  7539  003758  2A0D               	incf	(atoi@s+1)^0,f,c
  7540  00375A  EFE6  F01B         	goto	l7334
  7541  00375E                     l7328:
  7542  00375E  C00C  FFF6         	movff	atoi@s,tblptrl
  7543  003762  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7544  003766                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7545  003766  6AF8               	clrf	tblptru,c
  7546  003768                     	endif
  7547  003768                     	if	0	;tblptru may be non-zero
  7548  003768                     	endif
  7549  003768  0008               	tblrd		*
  7550  00376A  50F5               	movf	tablat,w,c
  7551  00376C  6E0E               	movwf	??_atoi^0,c
  7552  00376E  6A0F               	clrf	(??_atoi+1)^0,c
  7553                           
  7554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7555                           ; Switch size 1, requested type "simple"
  7556                           ; Number of cases is 1, Range of values is 0 to 0
  7557                           ; switch strategies available:
  7558                           ; Name         Instructions Cycles
  7559                           ; simple_byte            4     3 (average)
  7560                           ;	Chosen strategy is simple_byte
  7561  003770  500F               	movf	(??_atoi+1)^0,w,c
  7562  003772  0A00               	xorlw	0	; case 0
  7563  003774  B4D8               	btfsc	status,2,c
  7564  003776  EFBF  F01B         	goto	l7658
  7565  00377A  EFE6  F01B         	goto	l7334
  7566  00377E                     l7658:
  7567                           
  7568                           ; Switch size 1, requested type "simple"
  7569                           ; Number of cases is 2, Range of values is 43 to 45
  7570                           ; switch strategies available:
  7571                           ; Name         Instructions Cycles
  7572                           ; simple_byte            7     4 (average)
  7573                           ;	Chosen strategy is simple_byte
  7574  00377E  500E               	movf	??_atoi^0,w,c
  7575  003780  0A2B               	xorlw	43	; case 43
  7576  003782  B4D8               	btfsc	status,2,c
  7577  003784  EFAB  F01B         	goto	l7326
  7578  003788  0A06               	xorlw	6	; case 45
  7579  00378A  B4D8               	btfsc	status,2,c
  7580  00378C  EFA7  F01B         	goto	l7324
  7581  003790  EFE6  F01B         	goto	l7334
  7582  003794                     l7330:
  7583  003794  C019  F005         	movff	atoi@n,___wmul@multiplier
  7584  003798  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7585  00379C  0E00               	movlw	0
  7586  00379E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7587  0037A0  0E0A               	movlw	10
  7588  0037A2  6E07               	movwf	___wmul@multiplicand^0,c
  7589  0037A4  ECEF  F026         	call	___wmul	;wreg free
  7590  0037A8  C00C  FFF6         	movff	atoi@s,tblptrl
  7591  0037AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7592  0037B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7593  0037B0  6AF8               	clrf	tblptru,c
  7594  0037B2                     	endif
  7595  0037B2                     	if	0	;tblptru may be non-zero
  7596  0037B2                     	endif
  7597  0037B2  0008               	tblrd		*
  7598  0037B4  50F5               	movf	tablat,w,c
  7599  0037B6  5E05               	subwf	?___wmul^0,f,c
  7600  0037B8  0E00               	movlw	0
  7601  0037BA  5A06               	subwfb	(?___wmul+1)^0,f,c
  7602  0037BC  0E30               	movlw	48
  7603  0037BE  2405               	addwf	?___wmul^0,w,c
  7604  0037C0  6E19               	movwf	atoi@n^0,c
  7605  0037C2  0E00               	movlw	0
  7606  0037C4  2006               	addwfc	(?___wmul+1)^0,w,c
  7607  0037C6  6E1A               	movwf	(atoi@n+1)^0,c
  7608  0037C8  EFAB  F01B         	goto	l7326
  7609  0037CC                     l7334:
  7610  0037CC  0ED0               	movlw	208
  7611  0037CE  6E0E               	movwf	??_atoi^0,c
  7612  0037D0  0EFF               	movlw	255
  7613  0037D2  6E0F               	movwf	(??_atoi+1)^0,c
  7614  0037D4  C00C  FFF6         	movff	atoi@s,tblptrl
  7615  0037D8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7616  0037DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7617  0037DC  6AF8               	clrf	tblptru,c
  7618  0037DE                     	endif
  7619  0037DE                     	if	0	;tblptru may be non-zero
  7620  0037DE                     	endif
  7621  0037DE  0008               	tblrd		*
  7622  0037E0  50F5               	movf	tablat,w,c
  7623  0037E2  6E10               	movwf	(??_atoi+2)^0,c
  7624  0037E4  6A11               	clrf	(??_atoi+3)^0,c
  7625  0037E6  500E               	movf	??_atoi^0,w,c
  7626  0037E8  2610               	addwf	(??_atoi+2)^0,f,c
  7627  0037EA  500F               	movf	(??_atoi+1)^0,w,c
  7628  0037EC  2211               	addwfc	(??_atoi+3)^0,f,c
  7629  0037EE  5011               	movf	(??_atoi+3)^0,w,c
  7630  0037F0  E10A               	bnz	u8060
  7631  0037F2  0E0A               	movlw	10
  7632  0037F4  5C10               	subwf	(??_atoi+2)^0,w,c
  7633  0037F6  A0D8               	btfss	status,0,c
  7634  0037F8  EF00  F01C         	goto	u8061
  7635  0037FC  EF03  F01C         	goto	u8060
  7636  003800                     u8061:
  7637  003800  0E01               	movlw	1
  7638  003802  EF04  F01C         	goto	u8070
  7639  003806                     u8060:
  7640  003806  0E00               	movlw	0
  7641  003808                     u8070:
  7642  003808  6E16               	movwf	_atoi$2175^0,c
  7643  00380A  6A17               	clrf	(_atoi$2175+1)^0,c
  7644  00380C  5016               	movf	_atoi$2175^0,w,c
  7645  00380E  1017               	iorwf	(_atoi$2175+1)^0,w,c
  7646  003810  A4D8               	btfss	status,2,c
  7647  003812  EF0D  F01C         	goto	u8081
  7648  003816  EF0F  F01C         	goto	u8080
  7649  00381A                     u8081:
  7650  00381A  EFCA  F01B         	goto	l7330
  7651  00381E                     u8080:
  7652  00381E  5012               	movf	atoi@neg^0,w,c
  7653  003820  1013               	iorwf	(atoi@neg+1)^0,w,c
  7654  003822  A4D8               	btfss	status,2,c
  7655  003824  EF16  F01C         	goto	u8091
  7656  003828  EF18  F01C         	goto	u8090
  7657  00382C                     u8091:
  7658  00382C  EF26  F01C         	goto	l1612
  7659  003830                     u8090:
  7660  003830  C019  F00E         	movff	atoi@n,??_atoi
  7661  003834  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7662  003838  1E0E               	comf	??_atoi^0,f,c
  7663  00383A  1E0F               	comf	(??_atoi+1)^0,f,c
  7664  00383C  4A0E               	infsnz	??_atoi^0,f,c
  7665  00383E  2A0F               	incf	(??_atoi+1)^0,f,c
  7666  003840  C00E  F00C         	movff	??_atoi,?_atoi
  7667  003844  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7668  003848  EF2A  F01C         	goto	l1615
  7669  00384C                     l1612:
  7670  00384C  C019  F00C         	movff	atoi@n,?_atoi
  7671  003850  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7672  003854                     l1615:
  7673  003854  0012               	return		;funcret
  7674  003856                     __end_of_atoi:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function _isspace *****************
  7678 ;; Defined at:
  7679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  c               2    4[COMRAM] int 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  2    4[COMRAM] int 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7696 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;Total ram usage:        7 bytes
  7698 ;; Hardware stack levels used: 1
  7699 ;; Hardware stack levels required when called: 4
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_atoi
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text27
  7708  0049FE                     __ptext27:
  7709                           	callstack 0
  7710  0049FE                     _isspace:
  7711                           	callstack 22
  7712  0049FE  0E01               	movlw	1
  7713  004A00  6E0B               	movwf	_isspace$2204^0,c
  7714  004A02  0E20               	movlw	32
  7715  004A04  1805               	xorwf	isspace@c^0,w,c
  7716  004A06  1006               	iorwf	(isspace@c+1)^0,w,c
  7717  004A08  B4D8               	btfsc	status,2,c
  7718  004A0A  EF09  F025         	goto	u7471
  7719  004A0E  EF0B  F025         	goto	u7470
  7720  004A12                     u7471:
  7721  004A12  EF24  F025         	goto	l6994
  7722  004A16                     u7470:
  7723  004A16  0EF7               	movlw	247
  7724  004A18  6E07               	movwf	??_isspace^0,c
  7725  004A1A  0EFF               	movlw	255
  7726  004A1C  6E08               	movwf	(??_isspace+1)^0,c
  7727  004A1E  C005  F009         	movff	isspace@c,??_isspace+2
  7728  004A22  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7729  004A26  5007               	movf	??_isspace^0,w,c
  7730  004A28  2609               	addwf	(??_isspace+2)^0,f,c
  7731  004A2A  5008               	movf	(??_isspace+1)^0,w,c
  7732  004A2C  220A               	addwfc	(??_isspace+3)^0,f,c
  7733  004A2E  500A               	movf	(??_isspace+3)^0,w,c
  7734  004A30  E109               	bnz	u7480
  7735  004A32  0E05               	movlw	5
  7736  004A34  5C09               	subwf	(??_isspace+2)^0,w,c
  7737  004A36  A0D8               	btfss	status,0,c
  7738  004A38  EF20  F025         	goto	u7481
  7739  004A3C  EF22  F025         	goto	u7480
  7740  004A40                     u7481:
  7741  004A40  EF24  F025         	goto	l6994
  7742  004A44                     u7480:
  7743  004A44  0E00               	movlw	0
  7744  004A46  6E0B               	movwf	_isspace$2204^0,c
  7745  004A48                     l6994:
  7746  004A48  C00B  F005         	movff	_isspace$2204,?_isspace
  7747  004A4C  6A06               	clrf	(?_isspace+1)^0,c
  7748  004A4E  0012               	return		;funcret
  7749  004A50                     __end_of_isspace:
  7750                           	callstack 0
  7751                           
  7752 ;; *************** function _isdigit *****************
  7753 ;; Defined at:
  7754 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  c               2    4[COMRAM] int 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  2    4[COMRAM] int 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;Total ram usage:        6 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 4
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_vfpfcnvrt
  7779 ;;		_atoi
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text28
  7784  004C10                     __ptext28:
  7785                           	callstack 0
  7786  004C10                     _isdigit:
  7787                           	callstack 23
  7788  004C10  0ED0               	movlw	208
  7789  004C12  6E07               	movwf	??_isdigit^0,c
  7790  004C14  0EFF               	movlw	255
  7791  004C16  6E08               	movwf	(??_isdigit+1)^0,c
  7792  004C18  C005  F009         	movff	isdigit@c,??_isdigit+2
  7793  004C1C  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7794  004C20  5007               	movf	??_isdigit^0,w,c
  7795  004C22  2609               	addwf	(??_isdigit+2)^0,f,c
  7796  004C24  5008               	movf	(??_isdigit+1)^0,w,c
  7797  004C26  220A               	addwfc	(??_isdigit+3)^0,f,c
  7798  004C28  500A               	movf	(??_isdigit+3)^0,w,c
  7799  004C2A  E10A               	bnz	u7450
  7800  004C2C  0E0A               	movlw	10
  7801  004C2E  5C09               	subwf	(??_isdigit+2)^0,w,c
  7802  004C30  A0D8               	btfss	status,0,c
  7803  004C32  EF1D  F026         	goto	u7451
  7804  004C36  EF20  F026         	goto	u7450
  7805  004C3A                     u7451:
  7806  004C3A  0E01               	movlw	1
  7807  004C3C  EF21  F026         	goto	u7460
  7808  004C40                     u7450:
  7809  004C40  0E00               	movlw	0
  7810  004C42                     u7460:
  7811  004C42  6E05               	movwf	?_isdigit^0,c
  7812  004C44  6A06               	clrf	(?_isdigit+1)^0,c
  7813  004C46  0012               	return		;funcret
  7814  004C48                     __end_of_isdigit:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function ___wmul *****************
  7818 ;; Defined at:
  7819 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  multiplier      2    4[COMRAM] unsigned int 
  7822 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  product         2    8[COMRAM] unsigned int 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  2    4[COMRAM] unsigned int 
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0, prodl, prodh
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;Total ram usage:        6 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 4
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_atoi
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text29
  7849  004DDE                     __ptext29:
  7850                           	callstack 0
  7851  004DDE                     ___wmul:
  7852                           	callstack 22
  7853  004DDE  5005               	movf	___wmul@multiplier^0,w,c
  7854  004DE0  0207               	mulwf	___wmul@multiplicand^0,c
  7855  004DE2  CFF3 F009          	movff	prodl,___wmul@product
  7856  004DE6  CFF4 F00A          	movff	prodh,___wmul@product+1
  7857  004DEA  5005               	movf	___wmul@multiplier^0,w,c
  7858  004DEC  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7859  004DEE  50F3               	movf	243,w,c
  7860  004DF0  260A               	addwf	(___wmul@product+1)^0,f,c
  7861  004DF2  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7862  004DF4  0207               	mulwf	___wmul@multiplicand^0,c
  7863  004DF6  50F3               	movf	243,w,c
  7864  004DF8  260A               	addwf	(___wmul@product+1)^0,f,c
  7865  004DFA  C009  F005         	movff	___wmul@product,?___wmul
  7866  004DFE  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7867  004E02  0012               	return		;funcret
  7868  004E04                     __end_of___wmul:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _SYSTEM_Initialize *****************
  7872 ;; Defined at:
  7873 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 6
  7894 ;; This function calls:
  7895 ;;		_EUSART_Initialize
  7896 ;;		_I2C_Initialize
  7897 ;;		_INTERRUPT_Initialize
  7898 ;;		_OSCILLATOR_Initialize
  7899 ;;		_PIN_MANAGER_Initialize
  7900 ;; This function is called by:
  7901 ;;		_main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text30
  7906  004E98                     __ptext30:
  7907                           	callstack 0
  7908  004E98                     _SYSTEM_Initialize:
  7909                           	callstack 24
  7910  004E98                     
  7911                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7912  004E98  ECE8  F027         	call	_INTERRUPT_Initialize	;wreg free
  7913  004E9C                     
  7914                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  7915  004E9C  EC57  F027         	call	_I2C_Initialize	;wreg free
  7916  004EA0                     
  7917                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7918  004EA0  EC3F  F026         	call	_PIN_MANAGER_Initialize	;wreg free
  7919  004EA4                     
  7920                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7921  004EA4  EC9A  F027         	call	_OSCILLATOR_Initialize	;wreg free
  7922  004EA8                     
  7923                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7924  004EA8  EC01  F023         	call	_EUSART_Initialize	;wreg free
  7925  004EAC  0012               	return		;funcret
  7926  004EAE                     __end_of_SYSTEM_Initialize:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _PIN_MANAGER_Initialize *****************
  7930 ;; Defined at:
  7931 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;		None
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;Total ram usage:        0 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 4
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_SYSTEM_Initialize
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text31
  7960  004C7E                     __ptext31:
  7961                           	callstack 0
  7962  004C7E                     _PIN_MANAGER_Initialize:
  7963                           	callstack 25
  7964  004C7E                     
  7965                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7966  004C7E  0E00               	movlw	0
  7967  004C80  6E8D               	movwf	141,c	;volatile
  7968                           
  7969                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7970  004C82  0E00               	movlw	0
  7971  004C84  6E8C               	movwf	140,c	;volatile
  7972                           
  7973                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7974  004C86  0E00               	movlw	0
  7975  004C88  6E89               	movwf	137,c	;volatile
  7976                           
  7977                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7978  004C8A  0E00               	movlw	0
  7979  004C8C  6E8A               	movwf	138,c	;volatile
  7980                           
  7981                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7982  004C8E  0E00               	movlw	0
  7983  004C90  6E8B               	movwf	139,c	;volatile
  7984                           
  7985                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7986  004C92  0E07               	movlw	7
  7987  004C94  6E96               	movwf	150,c	;volatile
  7988  004C96                     
  7989                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  7990  004C96  6892               	setf	146,c	;volatile
  7991  004C98                     
  7992                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7993  004C98  6893               	setf	147,c	;volatile
  7994                           
  7995                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7996  004C9A  0EBF               	movlw	191
  7997  004C9C  6E94               	movwf	148,c	;volatile
  7998  004C9E                     
  7999                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8000  004C9E  6895               	setf	149,c	;volatile
  8001  004CA0                     
  8002                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  8003  004CA0  687E               	setf	126,c	;volatile
  8004                           
  8005                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  8006  004CA2  0E1F               	movlw	31
  8007  004CA4  6E7F               	movwf	127,c	;volatile
  8008                           
  8009                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8010  004CA6  0E00               	movlw	0
  8011  004CA8  6E7C               	movwf	124,c	;volatile
  8012  004CAA                     
  8013                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  8014  004CAA  8EF1               	bsf	241,7,c	;volatile
  8015  004CAC  0012               	return		;funcret
  8016  004CAE                     __end_of_PIN_MANAGER_Initialize:
  8017                           	callstack 0
  8018                           
  8019 ;; *************** function _OSCILLATOR_Initialize *****************
  8020 ;; Defined at:
  8021 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;		None
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;		None
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;Total ram usage:        0 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 4
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_SYSTEM_Initialize
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text32
  8050  004F34                     __ptext32:
  8051                           	callstack 0
  8052  004F34                     _OSCILLATOR_Initialize:
  8053                           	callstack 25
  8054  004F34                     
  8055                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x72;
  8056  004F34  0E72               	movlw	114
  8057  004F36  6ED3               	movwf	211,c	;volatile
  8058                           
  8059                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x40;
  8060  004F38  0E40               	movlw	64
  8061  004F3A  6E9B               	movwf	155,c	;volatile
  8062  004F3C  0012               	return		;funcret
  8063  004F3E                     __end_of_OSCILLATOR_Initialize:
  8064                           	callstack 0
  8065                           
  8066 ;; *************** function _INTERRUPT_Initialize *****************
  8067 ;; Defined at:
  8068 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		None
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used: 1
  8088 ;; Hardware stack levels required when called: 4
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_SYSTEM_Initialize
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text33
  8097  004FD0                     __ptext33:
  8098                           	callstack 0
  8099  004FD0                     _INTERRUPT_Initialize:
  8100                           	callstack 25
  8101  004FD0                     
  8102                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8103  004FD0  9ED0               	bcf	208,7,c	;volatile
  8104  004FD2  0012               	return		;funcret
  8105  004FD4                     __end_of_INTERRUPT_Initialize:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _I2C_Initialize *****************
  8109 ;; Defined at:
  8110 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 4
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_SYSTEM_Initialize
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text34
  8139  004EAE                     __ptext34:
  8140                           	callstack 0
  8141  004EAE                     _I2C_Initialize:
  8142                           	callstack 25
  8143  004EAE                     
  8144                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  8145  004EAE  0E00               	movlw	0
  8146  004EB0  6EC7               	movwf	199,c	;volatile
  8147                           
  8148                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  8149  004EB2  0E08               	movlw	8
  8150  004EB4  6EC6               	movwf	198,c	;volatile
  8151                           
  8152                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  8153  004EB6  0E00               	movlw	0
  8154  004EB8  6EC5               	movwf	197,c	;volatile
  8155                           
  8156                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  8157  004EBA  0E27               	movlw	39
  8158  004EBC  6EC8               	movwf	200,c	;volatile
  8159  004EBE                     
  8160                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  8161  004EBE  9AC6               	bcf	198,5,c	;volatile
  8162  004EC0  0012               	return		;funcret
  8163  004EC2                     __end_of_I2C_Initialize:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function _EUSART_Initialize *****************
  8167 ;; Defined at:
  8168 ;;		line 88 in file "mcc_generated_files/eusart.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; Hardware stack levels required when called: 5
  8189 ;; This function calls:
  8190 ;;		_EUSART_SetErrorHandler
  8191 ;;		_EUSART_SetFramingErrorHandler
  8192 ;;		_EUSART_SetOverrunErrorHandler
  8193 ;;		_EUSART_SetRxInterruptHandler
  8194 ;;		_EUSART_SetTxInterruptHandler
  8195 ;; This function is called by:
  8196 ;;		_SYSTEM_Initialize
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text35
  8201  004602                     __ptext35:
  8202                           	callstack 0
  8203  004602                     _EUSART_Initialize:
  8204                           	callstack 24
  8205  004602                     
  8206                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  8207  004602  9A9D               	bcf	157,5,c	;volatile
  8208  004604                     
  8209                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8210  004604  0EFE               	movlw	low _EUSART_Receive_ISR
  8211  004606  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  8212  004608  0E3F               	movlw	high _EUSART_Receive_ISR
  8213  00460A  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  8214  00460C  ECA4  F027         	call	_EUSART_SetRxInterruptHandler	;wreg free
  8215  004610                     
  8216                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  8217  004610  989D               	bcf	157,4,c	;volatile
  8218                           
  8219                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  8220  004612  0E1E               	movlw	low _EUSART_Transmit_ISR
  8221  004614  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  8222  004616  0E4B               	movlw	high _EUSART_Transmit_ISR
  8223  004618  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  8224  00461A  EC9F  F027         	call	_EUSART_SetTxInterruptHandler	;wreg free
  8225  00461E                     
  8226                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  8227  00461E  0E08               	movlw	8
  8228  004620  6EB8               	movwf	184,c	;volatile
  8229  004622                     
  8230                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  8231  004622  0E90               	movlw	144
  8232  004624  6EAB               	movwf	171,c	;volatile
  8233  004626                     
  8234                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  8235  004626  0E24               	movlw	36
  8236  004628  6EAC               	movwf	172,c	;volatile
  8237  00462A                     
  8238                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xA0;
  8239  00462A  0EA0               	movlw	160
  8240  00462C  6EAF               	movwf	175,c	;volatile
  8241  00462E                     
  8242                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x01;
  8243  00462E  0E01               	movlw	1
  8244  004630  6EB0               	movwf	176,c	;volatile
  8245  004632                     
  8246                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  8247  004632  0E00               	movlw	low _EUSART_DefaultFramingErrorHandler
  8248  004634  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  8249  004636  0E50               	movlw	high _EUSART_DefaultFramingErrorHandler
  8250  004638  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  8251  00463A  ECAE  F027         	call	_EUSART_SetFramingErrorHandler	;wreg free
  8252  00463E                     
  8253                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  8254  00463E  0EC4               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8255  004640  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  8256  004642  0E4F               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8257  004644  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8258  004646  ECA9  F027         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  8259  00464A                     
  8260                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  8261  00464A  0ECA               	movlw	low _EUSART_DefaultErrorHandler
  8262  00464C  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  8263  00464E  0E4F               	movlw	high _EUSART_DefaultErrorHandler
  8264  004650  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  8265  004652  ECB3  F027         	call	_EUSART_SetErrorHandler	;wreg free
  8266                           
  8267                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  8268  004656  0E00               	movlw	0
  8269  004658  0100               	movlb	0	; () banked
  8270  00465A  6FF7               	movwf	_eusartRxLastError& (0+255),b	;volatile
  8271                           
  8272                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  8273  00465C  0E00               	movlw	0
  8274  00465E  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  8275                           
  8276                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  8277  004660  0E00               	movlw	0
  8278  004662  6E59               	movwf	_eusartTxTail^0,c	;volatile
  8279                           
  8280                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  8281  004664  0E08               	movlw	8
  8282  004666  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  8283                           
  8284                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  8285  004668  0E00               	movlw	0
  8286  00466A  6E58               	movwf	_eusartRxHead^0,c	;volatile
  8287                           
  8288                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  8289  00466C  0E00               	movlw	0
  8290  00466E  6E57               	movwf	_eusartRxTail^0,c	;volatile
  8291                           
  8292                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  8293  004670  0E00               	movlw	0
  8294  004672  6E56               	movwf	_eusartRxCount^0,c	;volatile
  8295  004674                     
  8296                           ; BSR set to: 0
  8297                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  8298  004674  8A9D               	bsf	157,5,c	;volatile
  8299  004676                     
  8300                           ; BSR set to: 0
  8301  004676  0012               	return		;funcret
  8302  004678                     __end_of_EUSART_Initialize:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8306 ;; Defined at:
  8307 ;;		line 285 in file "mcc_generated_files/eusart.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8310 ;;		 -> EUSART_Transmit_ISR(1), 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:        2 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 4
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_EUSART_Initialize
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text36
  8337  004F3E                     __ptext36:
  8338                           	callstack 0
  8339  004F3E                     _EUSART_SetTxInterruptHandler:
  8340                           	callstack 24
  8341  004F3E                     
  8342                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  8343  004F3E  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  8344  004F42  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  8345  004F46  0012               	return		;funcret
  8346  004F48                     __end_of_EUSART_SetTxInterruptHandler:
  8347                           	callstack 0
  8348                           
  8349 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8350 ;; Defined at:
  8351 ;;		line 289 in file "mcc_generated_files/eusart.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8354 ;;		 -> EUSART_Receive_ISR(1), 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2, status,0
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:        2 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 4
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_EUSART_Initialize
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text37
  8381  004F48                     __ptext37:
  8382                           	callstack 0
  8383  004F48                     _EUSART_SetRxInterruptHandler:
  8384                           	callstack 24
  8385  004F48                     
  8386                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  8387  004F48  C005  F0FA         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  8388  004F4C  C006  F0FB         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  8389  004F50  0012               	return		;funcret
  8390  004F52                     __end_of_EUSART_SetRxInterruptHandler:
  8391                           	callstack 0
  8392                           
  8393 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8394 ;; Defined at:
  8395 ;;		line 277 in file "mcc_generated_files/eusart.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8398 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;Total ram usage:        2 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 4
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_EUSART_Initialize
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text38
  8425  004F52                     __ptext38:
  8426                           	callstack 0
  8427  004F52                     _EUSART_SetOverrunErrorHandler:
  8428                           	callstack 24
  8429  004F52                     
  8430                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  8431  004F52  C005  F16A         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  8432  004F56  C006  F16B         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  8433  004F5A  0012               	return		;funcret
  8434  004F5C                     __end_of_EUSART_SetOverrunErrorHandler:
  8435                           	callstack 0
  8436                           
  8437 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8438 ;; Defined at:
  8439 ;;		line 273 in file "mcc_generated_files/eusart.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8442 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;Total ram usage:        2 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; Hardware stack levels required when called: 4
  8461 ;; This function calls:
  8462 ;;		Nothing
  8463 ;; This function is called by:
  8464 ;;		_EUSART_Initialize
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text39
  8469  004F5C                     __ptext39:
  8470                           	callstack 0
  8471  004F5C                     _EUSART_SetFramingErrorHandler:
  8472                           	callstack 24
  8473  004F5C                     
  8474                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  8475  004F5C  C005  F0F8         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  8476  004F60  C006  F0F9         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  8477  004F64  0012               	return		;funcret
  8478  004F66                     __end_of_EUSART_SetFramingErrorHandler:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _EUSART_SetErrorHandler *****************
  8482 ;; Defined at:
  8483 ;;		line 281 in file "mcc_generated_files/eusart.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8486 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;		None
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      void 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;Total ram usage:        2 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 4
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_EUSART_Initialize
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text40
  8513  004F66                     __ptext40:
  8514                           	callstack 0
  8515  004F66                     _EUSART_SetErrorHandler:
  8516                           	callstack 24
  8517  004F66                     
  8518                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  8519  004F66  C005  F168         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  8520  004F6A  C006  F169         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  8521  004F6E  0012               	return		;funcret
  8522  004F70                     __end_of_EUSART_SetErrorHandler:
  8523                           	callstack 0
  8524                           
  8525 ;; *************** function _AMG8833_Init *****************
  8526 ;; Defined at:
  8527 ;;		line 70 in file "amg8833.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;		None
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;		None
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;Total ram usage:        2 bytes
  8546 ;; Hardware stack levels used: 1
  8547 ;; Hardware stack levels required when called: 13
  8548 ;; This function calls:
  8549 ;;		_I2C_Write1ByteRegister
  8550 ;; This function is called by:
  8551 ;;		_main
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text41
  8556  00416C                     __ptext41:
  8557                           	callstack 0
  8558  00416C                     _AMG8833_Init:
  8559                           	callstack 17
  8560  00416C                     
  8561                           ;amg8833.c: 72:     I2C_Write1ByteRegister(0x69, 0x00, 0x00);
  8562  00416C  0E00               	movlw	0
  8563  00416E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8564  004170  0E00               	movlw	0
  8565  004172  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8566  004174  0E69               	movlw	105
  8567  004176  ECAE  F023         	call	_I2C_Write1ByteRegister
  8568                           
  8569                           ;amg8833.c: 73:     I2C_Write1ByteRegister(0x69, 0x01, 0x30);
  8570  00417A  0E01               	movlw	1
  8571  00417C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8572  00417E  0E30               	movlw	48
  8573  004180  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8574  004182  0E69               	movlw	105
  8575  004184  ECAE  F023         	call	_I2C_Write1ByteRegister
  8576                           
  8577                           ;amg8833.c: 74:     I2C_Write1ByteRegister(0x69, 0x02, 0x00);
  8578  004188  0E02               	movlw	2
  8579  00418A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8580  00418C  0E00               	movlw	0
  8581  00418E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8582  004190  0E69               	movlw	105
  8583  004192  ECAE  F023         	call	_I2C_Write1ByteRegister
  8584  004196                     
  8585                           ;amg8833.c: 75:     _delay((unsigned long)((100)*(16000000/4000.0)));
  8586  004196  0E03               	movlw	3
  8587  004198  6E1A               	movwf	(??_AMG8833_Init+1)^0,c
  8588  00419A  0E08               	movlw	8
  8589  00419C  6E19               	movwf	??_AMG8833_Init^0,c
  8590  00419E  0E77               	movlw	119
  8591  0041A0                     u8357:
  8592  0041A0  2EE8               	decfsz	wreg,f,c
  8593  0041A2  D7FE               	bra	u8357
  8594  0041A4  2E19               	decfsz	??_AMG8833_Init^0,f,c
  8595  0041A6  D7FC               	bra	u8357
  8596  0041A8  2E1A               	decfsz	(??_AMG8833_Init+1)^0,f,c
  8597  0041AA  D7FA               	bra	u8357
  8598  0041AC  F000               	nop	
  8599  0041AE                     
  8600                           ;amg8833.c: 77:     I2C_Write1ByteRegister(0x69, 0x08, 0x30);
  8601  0041AE  0E08               	movlw	8
  8602  0041B0  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8603  0041B2  0E30               	movlw	48
  8604  0041B4  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8605  0041B6  0E69               	movlw	105
  8606  0041B8  ECAE  F023         	call	_I2C_Write1ByteRegister
  8607  0041BC                     
  8608                           ;amg8833.c: 78:     I2C_Write1ByteRegister(0x69, 0x09, 0x00);
  8609  0041BC  0E09               	movlw	9
  8610  0041BE  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8611  0041C0  0E00               	movlw	0
  8612  0041C2  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8613  0041C4  0E69               	movlw	105
  8614  0041C6  ECAE  F023         	call	_I2C_Write1ByteRegister
  8615  0041CA                     
  8616                           ;amg8833.c: 80:     I2C_Write1ByteRegister(0x69, 0x0A, 0x15);
  8617  0041CA  0E0A               	movlw	10
  8618  0041CC  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8619  0041CE  0E15               	movlw	21
  8620  0041D0  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8621  0041D2  0E69               	movlw	105
  8622  0041D4  ECAE  F023         	call	_I2C_Write1ByteRegister
  8623  0041D8                     
  8624                           ;amg8833.c: 81:     I2C_Write1ByteRegister(0x69, 0x0B, 0x00);
  8625  0041D8  0E0B               	movlw	11
  8626  0041DA  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8627  0041DC  0E00               	movlw	0
  8628  0041DE  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8629  0041E0  0E69               	movlw	105
  8630  0041E2  ECAE  F023         	call	_I2C_Write1ByteRegister
  8631  0041E6                     
  8632                           ;amg8833.c: 83:     I2C_Write1ByteRegister(0x69, 0x0C, 0x20);
  8633  0041E6  0E0C               	movlw	12
  8634  0041E8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8635  0041EA  0E20               	movlw	32
  8636  0041EC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8637  0041EE  0E69               	movlw	105
  8638  0041F0  ECAE  F023         	call	_I2C_Write1ByteRegister
  8639  0041F4                     
  8640                           ;amg8833.c: 84:     I2C_Write1ByteRegister(0x69, 0x0D, 0x00);
  8641  0041F4  0E0D               	movlw	13
  8642  0041F6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8643  0041F8  0E00               	movlw	0
  8644  0041FA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8645  0041FC  0E69               	movlw	105
  8646  0041FE  ECAE  F023         	call	_I2C_Write1ByteRegister
  8647  004202                     
  8648                           ;amg8833.c: 85:     _delay((unsigned long)((100)*(16000000/4000.0)));
  8649  004202  0E03               	movlw	3
  8650  004204  6E1A               	movwf	(??_AMG8833_Init+1)^0,c
  8651  004206  0E08               	movlw	8
  8652  004208  6E19               	movwf	??_AMG8833_Init^0,c
  8653  00420A  0E77               	movlw	119
  8654  00420C                     u8367:
  8655  00420C  2EE8               	decfsz	wreg,f,c
  8656  00420E  D7FE               	bra	u8367
  8657  004210  2E19               	decfsz	??_AMG8833_Init^0,f,c
  8658  004212  D7FC               	bra	u8367
  8659  004214  2E1A               	decfsz	(??_AMG8833_Init+1)^0,f,c
  8660  004216  D7FA               	bra	u8367
  8661  004218  F000               	nop	
  8662  00421A  0012               	return		;funcret
  8663  00421C                     __end_of_AMG8833_Init:
  8664                           	callstack 0
  8665                           
  8666 ;; *************** function _I2C_Write1ByteRegister *****************
  8667 ;; Defined at:
  8668 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  address         1    wreg     unsigned char 
  8671 ;;  reg             1   21[COMRAM] unsigned char 
  8672 ;;  data            1   22[COMRAM] unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  address         1   23[COMRAM] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;Total ram usage:        3 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 12
  8691 ;; This function calls:
  8692 ;;		_I2C_Close
  8693 ;;		_I2C_MasterWrite
  8694 ;;		_I2C_Open
  8695 ;;		_I2C_SetAddressNackCallback
  8696 ;;		_I2C_SetBuffer
  8697 ;;		_I2C_SetDataCompleteCallback
  8698 ;; This function is called by:
  8699 ;;		_AMG8833_Init
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text42
  8704  00475C                     __ptext42:
  8705                           	callstack 0
  8706  00475C                     _I2C_Write1ByteRegister:
  8707                           	callstack 17
  8708                           
  8709                           ;incstack = 0
  8710                           ;I2C_Write1ByteRegister@address stored from wreg
  8711  00475C  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  8712  00475E                     l5716:
  8713  00475E  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  8714  004760  EC01  F022         	call	_I2C_Open
  8715  004764  0900               	iorlw	0
  8716  004766  B4D8               	btfsc	status,2,c
  8717  004768  EFB8  F023         	goto	u5631
  8718  00476C  EFBA  F023         	goto	u5630
  8719  004770                     u5631:
  8720  004770  EFAF  F023         	goto	l5716
  8721  004774                     u5630:
  8722  004774                     
  8723                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  8724  004774  0EAE               	movlw	low _wr1RegCompleteHandler
  8725  004776  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  8726  004778  0E4C               	movlw	high _wr1RegCompleteHandler
  8727  00477A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  8728  00477C  0E17               	movlw	low I2C_Write1ByteRegister@data
  8729  00477E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  8730  004780  0E00               	movlw	high I2C_Write1ByteRegister@data
  8731  004782  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  8732  004784  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
  8733  004788                     
  8734                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  8735  004788  0E16               	movlw	low I2C_Write1ByteRegister@reg
  8736  00478A  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  8737  00478C  0E00               	movlw	high I2C_Write1ByteRegister@reg
  8738  00478E  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  8739  004790  0E00               	movlw	0
  8740  004792  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  8741  004794  0E01               	movlw	1
  8742  004796  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  8743  004798  EC02  F027         	call	_I2C_SetBuffer	;wreg free
  8744  00479C                     
  8745                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  8746  00479C  0E00               	movlw	0
  8747  00479E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8748  0047A0  0E00               	movlw	0
  8749  0047A2  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8750  0047A4  0E00               	movlw	0
  8751  0047A6  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8752  0047A8  0E00               	movlw	0
  8753  0047AA  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8754  0047AC  EC34  F027         	call	_I2C_SetAddressNackCallback	;wreg free
  8755  0047B0                     
  8756                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  8757  0047B0  ECB8  F027         	call	_I2C_MasterWrite	;wreg free
  8758  0047B4                     l5726:
  8759  0047B4  ECAF  F026         	call	_I2C_Close	;wreg free
  8760  0047B8  06E8               	decf	wreg,f,c
  8761  0047BA  B4D8               	btfsc	status,2,c
  8762  0047BC  EFE2  F023         	goto	u5641
  8763  0047C0  EFE4  F023         	goto	u5640
  8764  0047C4                     u5641:
  8765  0047C4  EFDA  F023         	goto	l5726
  8766  0047C8                     u5640:
  8767  0047C8  0012               	return		;funcret
  8768  0047CA                     __end_of_I2C_Write1ByteRegister:
  8769                           	callstack 0
  8770                           
  8771 ;; *************** function _AMG8833_GetData *****************
  8772 ;; Defined at:
  8773 ;;		line 88 in file "amg8833.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  y               2   55[COMRAM] int 
  8778 ;;  x               2   53[COMRAM] int 
  8779 ;;  i               2   51[COMRAM] int 
  8780 ;;  pointer         2   49[COMRAM] int 
  8781 ;;  n               2   47[COMRAM] int 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;Total ram usage:       16 bytes
  8796 ;; Hardware stack levels used: 1
  8797 ;; Hardware stack levels required when called: 13
  8798 ;; This function calls:
  8799 ;;		_I2C_Read1ByteRegister
  8800 ;;		_Wertdetekt
  8801 ;; This function is called by:
  8802 ;;		_main
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text43
  8807  003856                     __ptext43:
  8808                           	callstack 0
  8809  003856                     _AMG8833_GetData:
  8810                           	callstack 17
  8811  003856                     
  8812                           ;amg8833.c: 89:     int pointer = 0;
  8813  003856  0E00               	movlw	0
  8814  003858  6E33               	movwf	(AMG8833_GetData@pointer+1)^0,c
  8815  00385A  0E00               	movlw	0
  8816  00385C  6E32               	movwf	AMG8833_GetData@pointer^0,c
  8817                           
  8818                           ;amg8833.c: 90:     int n = 0;
  8819  00385E  0E00               	movlw	0
  8820  003860  6E31               	movwf	(AMG8833_GetData@n+1)^0,c
  8821  003862  0E00               	movlw	0
  8822  003864  6E30               	movwf	AMG8833_GetData@n^0,c
  8823                           
  8824                           ;amg8833.c: 91:     for(int i=0; i<64; i++){
  8825  003866  0E00               	movlw	0
  8826  003868  6E35               	movwf	(AMG8833_GetData@i+1)^0,c
  8827  00386A  0E00               	movlw	0
  8828  00386C  6E34               	movwf	AMG8833_GetData@i^0,c
  8829  00386E                     l7482:
  8830                           
  8831                           ;amg8833.c: 92:         readBuffer[0] = I2C_Read1ByteRegister(0x69,(0x81 + pointer));
  8832  00386E  5032               	movf	AMG8833_GetData@pointer^0,w,c
  8833  003870  0F81               	addlw	129
  8834  003872  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8835  003874  0E69               	movlw	105
  8836  003876  EC3C  F023         	call	_I2C_Read1ByteRegister
  8837  00387A  0100               	movlb	0	; () banked
  8838  00387C  6FEC               	movwf	_readBuffer& (0+255),b
  8839                           
  8840                           ;amg8833.c: 93:         readBuffer[1] = I2C_Read1ByteRegister(0x69,(0x80 + pointer));
  8841  00387E  5032               	movf	AMG8833_GetData@pointer^0,w,c
  8842  003880  0F80               	addlw	128
  8843  003882  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  8844  003884  0E69               	movlw	105
  8845  003886  EC3C  F023         	call	_I2C_Read1ByteRegister
  8846  00388A  0100               	movlb	0	; () banked
  8847  00388C  6FED               	movwf	(_readBuffer+1)& (0+255),b
  8848  00388E                     
  8849                           ; BSR set to: 0
  8850                           ;amg8833.c: 94:         pointer = pointer + 2;
  8851  00388E  0E02               	movlw	2
  8852  003890  2432               	addwf	AMG8833_GetData@pointer^0,w,c
  8853  003892  6E32               	movwf	AMG8833_GetData@pointer^0,c
  8854  003894  0E00               	movlw	0
  8855  003896  2033               	addwfc	(AMG8833_GetData@pointer+1)^0,w,c
  8856  003898  6E33               	movwf	(AMG8833_GetData@pointer+1)^0,c
  8857  00389A                     
  8858                           ; BSR set to: 0
  8859                           ;amg8833.c: 95:         Temp_Data[i] = Wertdetekt();
  8860  00389A  EC48  F022         	call	_Wertdetekt	;wreg free
  8861  00389E  0E00               	movlw	low _Temp_Data
  8862  0038A0  6E2A               	movwf	??_AMG8833_GetData^0,c
  8863  0038A2  0E03               	movlw	high _Temp_Data
  8864  0038A4  6E2B               	movwf	(??_AMG8833_GetData+1)^0,c
  8865  0038A6  90D8               	bcf	status,0,c
  8866  0038A8  3434               	rlcf	AMG8833_GetData@i^0,w,c
  8867  0038AA  6ED9               	movwf	fsr2l,c
  8868  0038AC  3435               	rlcf	(AMG8833_GetData@i+1)^0,w,c
  8869  0038AE  6EDA               	movwf	fsr2h,c
  8870  0038B0  90D8               	bcf	status,0,c
  8871  0038B2  36D9               	rlcf	fsr2l,f,c
  8872  0038B4  36DA               	rlcf	fsr2h,f,c
  8873  0038B6  502A               	movf	??_AMG8833_GetData^0,w,c
  8874  0038B8  26D9               	addwf	fsr2l,f,c
  8875  0038BA  502B               	movf	(??_AMG8833_GetData+1)^0,w,c
  8876  0038BC  22DA               	addwfc	fsr2h,f,c
  8877  0038BE  C01E  FFDE         	movff	?_Wertdetekt,postinc2
  8878  0038C2  C01F  FFDE         	movff	?_Wertdetekt+1,postinc2
  8879  0038C6  C020  FFDE         	movff	?_Wertdetekt+2,postinc2
  8880  0038CA  C021  FFDE         	movff	?_Wertdetekt+3,postinc2
  8881  0038CE                     
  8882                           ;amg8833.c: 96:         _delay((unsigned long)((1)*(16000000/4000.0)));
  8883  0038CE  0E06               	movlw	6
  8884  0038D0  6E2A               	movwf	??_AMG8833_GetData^0,c
  8885  0038D2  0E30               	movlw	48
  8886  0038D4                     u8377:
  8887  0038D4  2EE8               	decfsz	wreg,f,c
  8888  0038D6  D7FE               	bra	u8377
  8889  0038D8  2E2A               	decfsz	??_AMG8833_GetData^0,f,c
  8890  0038DA  D7FC               	bra	u8377
  8891  0038DC  F000 F000          	nop2	
  8892  0038E0                     
  8893                           ;amg8833.c: 97:     }
  8894  0038E0  4A34               	infsnz	AMG8833_GetData@i^0,f,c
  8895  0038E2  2A35               	incf	(AMG8833_GetData@i+1)^0,f,c
  8896  0038E4  BE35               	btfsc	(AMG8833_GetData@i+1)^0,7,c
  8897  0038E6  EF7E  F01C         	goto	u8301
  8898  0038EA  5035               	movf	(AMG8833_GetData@i+1)^0,w,c
  8899  0038EC  E109               	bnz	u8300
  8900  0038EE  0E40               	movlw	64
  8901  0038F0  5C34               	subwf	AMG8833_GetData@i^0,w,c
  8902  0038F2  A0D8               	btfss	status,0,c
  8903  0038F4  EF7E  F01C         	goto	u8301
  8904  0038F8  EF80  F01C         	goto	u8300
  8905  0038FC                     u8301:
  8906  0038FC  EF37  F01C         	goto	l7482
  8907  003900                     u8300:
  8908  003900                     
  8909                           ;amg8833.c: 98:     for(int x=0; x<8; x++){
  8910  003900  0E00               	movlw	0
  8911  003902  6E37               	movwf	(AMG8833_GetData@x+1)^0,c
  8912  003904  0E00               	movlw	0
  8913  003906  6E36               	movwf	AMG8833_GetData@x^0,c
  8914  003908                     l7500:
  8915                           
  8916                           ;amg8833.c: 99:         for(int y=0; y<8; y++){
  8917  003908  0E00               	movlw	0
  8918  00390A  6E39               	movwf	(AMG8833_GetData@y+1)^0,c
  8919  00390C  0E00               	movlw	0
  8920  00390E  6E38               	movwf	AMG8833_GetData@y^0,c
  8921  003910                     l7506:
  8922                           
  8923                           ;amg8833.c: 100:             DataMatrix[x][y] = Temp_Data[n];
  8924  003910  0E00               	movlw	low _Temp_Data
  8925  003912  6E2A               	movwf	??_AMG8833_GetData^0,c
  8926  003914  0E03               	movlw	high _Temp_Data
  8927  003916  6E2B               	movwf	(??_AMG8833_GetData+1)^0,c
  8928  003918  90D8               	bcf	status,0,c
  8929  00391A  3430               	rlcf	AMG8833_GetData@n^0,w,c
  8930  00391C  6ED9               	movwf	fsr2l,c
  8931  00391E  3431               	rlcf	(AMG8833_GetData@n+1)^0,w,c
  8932  003920  6EDA               	movwf	fsr2h,c
  8933  003922  90D8               	bcf	status,0,c
  8934  003924  36D9               	rlcf	fsr2l,f,c
  8935  003926  36DA               	rlcf	fsr2h,f,c
  8936  003928  502A               	movf	??_AMG8833_GetData^0,w,c
  8937  00392A  26D9               	addwf	fsr2l,f,c
  8938  00392C  502B               	movf	(??_AMG8833_GetData+1)^0,w,c
  8939  00392E  22DA               	addwfc	fsr2h,f,c
  8940  003930  C036  F02C         	movff	AMG8833_GetData@x,??_AMG8833_GetData+2
  8941  003934  C037  F02D         	movff	AMG8833_GetData@x+1,??_AMG8833_GetData+3
  8942  003938  0E05               	movlw	5
  8943  00393A                     u8315:
  8944  00393A  90D8               	bcf	status,0,c
  8945  00393C  362C               	rlcf	(??_AMG8833_GetData+2)^0,f,c
  8946  00393E  362D               	rlcf	(??_AMG8833_GetData+3)^0,f,c
  8947  003940  2EE8               	decfsz	wreg,f,c
  8948  003942  EF9D  F01C         	goto	u8315
  8949  003946  0E00               	movlw	low _DataMatrix
  8950  003948  6E2E               	movwf	(??_AMG8833_GetData+4)^0,c
  8951  00394A  0E02               	movlw	high _DataMatrix
  8952  00394C  6E2F               	movwf	(??_AMG8833_GetData+5)^0,c
  8953  00394E  502C               	movf	(??_AMG8833_GetData+2)^0,w,c
  8954  003950  262E               	addwf	(??_AMG8833_GetData+4)^0,f,c
  8955  003952  502D               	movf	(??_AMG8833_GetData+3)^0,w,c
  8956  003954  222F               	addwfc	(??_AMG8833_GetData+5)^0,f,c
  8957  003956  90D8               	bcf	status,0,c
  8958  003958  3438               	rlcf	AMG8833_GetData@y^0,w,c
  8959  00395A  6EE1               	movwf	fsr1l,c
  8960  00395C  3439               	rlcf	(AMG8833_GetData@y+1)^0,w,c
  8961  00395E  6EE2               	movwf	fsr1h,c
  8962  003960  90D8               	bcf	status,0,c
  8963  003962  36E1               	rlcf	fsr1l,f,c
  8964  003964  36E2               	rlcf	fsr1h,f,c
  8965  003966  502E               	movf	(??_AMG8833_GetData+4)^0,w,c
  8966  003968  26E1               	addwf	fsr1l,f,c
  8967  00396A  502F               	movf	(??_AMG8833_GetData+5)^0,w,c
  8968  00396C  22E2               	addwfc	fsr1h,f,c
  8969  00396E  CFDE FFE6          	movff	postinc2,postinc1
  8970  003972  CFDE FFE6          	movff	postinc2,postinc1
  8971  003976  CFDE FFE6          	movff	postinc2,postinc1
  8972  00397A  CFDE FFE6          	movff	postinc2,postinc1
  8973  00397E                     
  8974                           ;amg8833.c: 101:             n = n + 1;
  8975  00397E  0E01               	movlw	1
  8976  003980  2430               	addwf	AMG8833_GetData@n^0,w,c
  8977  003982  6E30               	movwf	AMG8833_GetData@n^0,c
  8978  003984  0E00               	movlw	0
  8979  003986  2031               	addwfc	(AMG8833_GetData@n+1)^0,w,c
  8980  003988  6E31               	movwf	(AMG8833_GetData@n+1)^0,c
  8981  00398A                     
  8982                           ;amg8833.c: 102:         }
  8983  00398A  4A38               	infsnz	AMG8833_GetData@y^0,f,c
  8984  00398C  2A39               	incf	(AMG8833_GetData@y+1)^0,f,c
  8985  00398E  BE39               	btfsc	(AMG8833_GetData@y+1)^0,7,c
  8986  003990  EFD3  F01C         	goto	u8321
  8987  003994  5039               	movf	(AMG8833_GetData@y+1)^0,w,c
  8988  003996  E109               	bnz	u8320
  8989  003998  0E08               	movlw	8
  8990  00399A  5C38               	subwf	AMG8833_GetData@y^0,w,c
  8991  00399C  A0D8               	btfss	status,0,c
  8992  00399E  EFD3  F01C         	goto	u8321
  8993  0039A2  EFD5  F01C         	goto	u8320
  8994  0039A6                     u8321:
  8995  0039A6  EF88  F01C         	goto	l7506
  8996  0039AA                     u8320:
  8997  0039AA                     
  8998                           ;amg8833.c: 103:     }
  8999  0039AA  4A36               	infsnz	AMG8833_GetData@x^0,f,c
  9000  0039AC  2A37               	incf	(AMG8833_GetData@x+1)^0,f,c
  9001  0039AE  BE37               	btfsc	(AMG8833_GetData@x+1)^0,7,c
  9002  0039B0  EFE3  F01C         	goto	u8331
  9003  0039B4  5037               	movf	(AMG8833_GetData@x+1)^0,w,c
  9004  0039B6  E109               	bnz	u8330
  9005  0039B8  0E08               	movlw	8
  9006  0039BA  5C36               	subwf	AMG8833_GetData@x^0,w,c
  9007  0039BC  A0D8               	btfss	status,0,c
  9008  0039BE  EFE3  F01C         	goto	u8331
  9009  0039C2  EFE5  F01C         	goto	u8330
  9010  0039C6                     u8331:
  9011  0039C6  EF84  F01C         	goto	l7500
  9012  0039CA                     u8330:
  9013  0039CA  0012               	return		;funcret
  9014  0039CC                     __end_of_AMG8833_GetData:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function _Wertdetekt *****************
  9018 ;; Defined at:
  9019 ;;		line 106 in file "amg8833.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  tempDataAnz     4   37[COMRAM] float 
  9024 ;;  tempData        2   35[COMRAM] unsigned short 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  4   29[COMRAM] float 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;Total ram usage:       12 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 5
  9041 ;; This function calls:
  9042 ;;		___flmul
  9043 ;;		___xxtofl
  9044 ;; This function is called by:
  9045 ;;		_AMG8833_GetData
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text44
  9050  004490                     __ptext44:
  9051                           	callstack 0
  9052  004490                     _Wertdetekt:
  9053                           	callstack 24
  9054  004490                     
  9055                           ;amg8833.c: 107:     uint16_t tempData;;amg8833.c: 108:     float tempDataAnz;;amg8833.c
      +                          : 110:     tempData = (readBuffer[0] << 8) + readBuffer[1];
  9056  004490  0100               	movlb	0	; () banked
  9057  004492  51EC               	movf	_readBuffer& (0+255),w,b
  9058  004494  6E23               	movwf	(??_Wertdetekt+1)^0,c
  9059  004496  6A22               	clrf	??_Wertdetekt^0,c
  9060  004498  51ED               	movf	(_readBuffer+1)& (0+255),w,b
  9061  00449A  2422               	addwf	??_Wertdetekt^0,w,c
  9062  00449C  6E24               	movwf	Wertdetekt@tempData^0,c
  9063  00449E  0E00               	movlw	0
  9064  0044A0  2023               	addwfc	(??_Wertdetekt+1)^0,w,c
  9065  0044A2  6E25               	movwf	(Wertdetekt@tempData+1)^0,c
  9066  0044A4                     
  9067                           ; BSR set to: 0
  9068                           ;amg8833.c: 111:     tempDataAnz = tempData;
  9069  0044A4  C024  F005         	movff	Wertdetekt@tempData,___xxtofl@val
  9070  0044A8  C025  F006         	movff	Wertdetekt@tempData+1,___xxtofl@val+1
  9071  0044AC  6A07               	clrf	(___xxtofl@val+2)^0,c
  9072  0044AE  6A08               	clrf	(___xxtofl@val+3)^0,c
  9073  0044B0  0E00               	movlw	0
  9074  0044B2  EC84  F01A         	call	___xxtofl
  9075  0044B6  C005  F026         	movff	?___xxtofl,Wertdetekt@tempDataAnz
  9076  0044BA  C006  F027         	movff	?___xxtofl+1,Wertdetekt@tempDataAnz+1
  9077  0044BE  C007  F028         	movff	?___xxtofl+2,Wertdetekt@tempDataAnz+2
  9078  0044C2  C008  F029         	movff	?___xxtofl+3,Wertdetekt@tempDataAnz+3
  9079  0044C6                     
  9080                           ;amg8833.c: 112:     tempDataAnz = tempDataAnz * 0.25L;
  9081  0044C6  C026  F005         	movff	Wertdetekt@tempDataAnz,___flmul@b
  9082  0044CA  C027  F006         	movff	Wertdetekt@tempDataAnz+1,___flmul@b+1
  9083  0044CE  C028  F007         	movff	Wertdetekt@tempDataAnz+2,___flmul@b+2
  9084  0044D2  C029  F008         	movff	Wertdetekt@tempDataAnz+3,___flmul@b+3
  9085  0044D6  0E00               	movlw	0
  9086  0044D8  6E09               	movwf	___flmul@a^0,c
  9087  0044DA  0E00               	movlw	0
  9088  0044DC  6E0A               	movwf	(___flmul@a+1)^0,c
  9089  0044DE  0E80               	movlw	128
  9090  0044E0  6E0B               	movwf	(___flmul@a+2)^0,c
  9091  0044E2  0E3E               	movlw	62
  9092  0044E4  6E0C               	movwf	(___flmul@a+3)^0,c
  9093  0044E6  EC99  F015         	call	___flmul	;wreg free
  9094  0044EA  C005  F026         	movff	?___flmul,Wertdetekt@tempDataAnz
  9095  0044EE  C006  F027         	movff	?___flmul+1,Wertdetekt@tempDataAnz+1
  9096  0044F2  C007  F028         	movff	?___flmul+2,Wertdetekt@tempDataAnz+2
  9097  0044F6  C008  F029         	movff	?___flmul+3,Wertdetekt@tempDataAnz+3
  9098  0044FA                     
  9099                           ;amg8833.c: 113:     return tempDataAnz;
  9100  0044FA  C026  F01E         	movff	Wertdetekt@tempDataAnz,?_Wertdetekt
  9101  0044FE  C027  F01F         	movff	Wertdetekt@tempDataAnz+1,?_Wertdetekt+1
  9102  004502  C028  F020         	movff	Wertdetekt@tempDataAnz+2,?_Wertdetekt+2
  9103  004506  C029  F021         	movff	Wertdetekt@tempDataAnz+3,?_Wertdetekt+3
  9104  00450A  0012               	return		;funcret
  9105  00450C                     __end_of_Wertdetekt:
  9106                           	callstack 0
  9107                           
  9108 ;; *************** function ___xxtofl *****************
  9109 ;; Defined at:
  9110 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  sign            1    wreg     unsigned char 
  9113 ;;  val             4    4[COMRAM] long 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  sign            1   12[COMRAM] unsigned char 
  9116 ;;  arg             4   14[COMRAM] unsigned long 
  9117 ;;  exp             1   13[COMRAM] unsigned char 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  4    4[COMRAM] unsigned char 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;Total ram usage:       14 bytes
  9132 ;; Hardware stack levels used: 1
  9133 ;; Hardware stack levels required when called: 4
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_Wertdetekt
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text45
  9142  003508                     __ptext45:
  9143                           	callstack 0
  9144  003508                     ___xxtofl:
  9145                           	callstack 24
  9146                           
  9147                           ;incstack = 0
  9148                           ;___xxtofl@sign stored from wreg
  9149  003508  6E0D               	movwf	___xxtofl@sign^0,c
  9150  00350A  500D               	movf	___xxtofl@sign^0,w,c
  9151  00350C  B4D8               	btfsc	status,2,c
  9152  00350E  EF8B  F01A         	goto	u5371
  9153  003512  EF8D  F01A         	goto	u5370
  9154  003516                     u5371:
  9155  003516  EFAF  F01A         	goto	l1380
  9156  00351A                     u5370:
  9157  00351A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  9158  00351C  EF94  F01A         	goto	u5380
  9159  003520  EF92  F01A         	goto	u5381
  9160  003524                     u5381:
  9161  003524  EFAF  F01A         	goto	l1380
  9162  003528                     u5380:
  9163  003528  C005  F009         	movff	___xxtofl@val,??___xxtofl
  9164  00352C  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  9165  003530  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  9166  003534  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  9167  003538  1E09               	comf	??___xxtofl^0,f,c
  9168  00353A  1E0A               	comf	(??___xxtofl+1)^0,f,c
  9169  00353C  1E0B               	comf	(??___xxtofl+2)^0,f,c
  9170  00353E  1E0C               	comf	(??___xxtofl+3)^0,f,c
  9171  003540  2A09               	incf	??___xxtofl^0,f,c
  9172  003542  0E00               	movlw	0
  9173  003544  220A               	addwfc	(??___xxtofl+1)^0,f,c
  9174  003546  220B               	addwfc	(??___xxtofl+2)^0,f,c
  9175  003548  220C               	addwfc	(??___xxtofl+3)^0,f,c
  9176  00354A  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  9177  00354E  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  9178  003552  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  9179  003556  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  9180  00355A  EFB7  F01A         	goto	l5566
  9181  00355E                     l1380:
  9182  00355E  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  9183  003562  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9184  003566  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9185  00356A  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9186  00356E                     l5566:
  9187  00356E  5005               	movf	___xxtofl@val^0,w,c
  9188  003570  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  9189  003572  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  9190  003574  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  9191  003576  A4D8               	btfss	status,2,c
  9192  003578  EFC0  F01A         	goto	u5391
  9193  00357C  EFC2  F01A         	goto	u5390
  9194  003580                     u5391:
  9195  003580  EFCC  F01A         	goto	l5572
  9196  003584                     u5390:
  9197  003584  0E00               	movlw	0
  9198  003586  6E05               	movwf	?___xxtofl^0,c
  9199  003588  0E00               	movlw	0
  9200  00358A  6E06               	movwf	(?___xxtofl+1)^0,c
  9201  00358C  0E00               	movlw	0
  9202  00358E  6E07               	movwf	(?___xxtofl+2)^0,c
  9203  003590  0E00               	movlw	0
  9204  003592  6E08               	movwf	(?___xxtofl+3)^0,c
  9205  003594  EF5D  F01B         	goto	l1383
  9206  003598                     l5572:
  9207  003598  0E96               	movlw	150
  9208  00359A  6E0E               	movwf	___xxtofl@exp^0,c
  9209  00359C  EFD6  F01A         	goto	l5576
  9210  0035A0                     l5574:
  9211  0035A0  2A0E               	incf	___xxtofl@exp^0,f,c
  9212  0035A2  90D8               	bcf	status,0,c
  9213  0035A4  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  9214  0035A6  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  9215  0035A8  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  9216  0035AA  320F               	rrcf	___xxtofl@arg^0,f,c
  9217  0035AC                     l5576:
  9218  0035AC  0E00               	movlw	0
  9219  0035AE  140F               	andwf	___xxtofl@arg^0,w,c
  9220  0035B0  6E09               	movwf	??___xxtofl^0,c
  9221  0035B2  0E00               	movlw	0
  9222  0035B4  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  9223  0035B6  6E0A               	movwf	(??___xxtofl+1)^0,c
  9224  0035B8  0E00               	movlw	0
  9225  0035BA  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  9226  0035BC  6E0B               	movwf	(??___xxtofl+2)^0,c
  9227  0035BE  0EFE               	movlw	254
  9228  0035C0  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  9229  0035C2  6E0C               	movwf	(??___xxtofl+3)^0,c
  9230  0035C4  5009               	movf	??___xxtofl^0,w,c
  9231  0035C6  100A               	iorwf	(??___xxtofl+1)^0,w,c
  9232  0035C8  100B               	iorwf	(??___xxtofl+2)^0,w,c
  9233  0035CA  100C               	iorwf	(??___xxtofl+3)^0,w,c
  9234  0035CC  A4D8               	btfss	status,2,c
  9235  0035CE  EFEB  F01A         	goto	u5401
  9236  0035D2  EFED  F01A         	goto	u5400
  9237  0035D6                     u5401:
  9238  0035D6  EFD0  F01A         	goto	l5574
  9239  0035DA                     u5400:
  9240  0035DA  EFFB  F01A         	goto	l1387
  9241  0035DE                     l5578:
  9242  0035DE  2A0E               	incf	___xxtofl@exp^0,f,c
  9243  0035E0  0E01               	movlw	1
  9244  0035E2  260F               	addwf	___xxtofl@arg^0,f,c
  9245  0035E4  0E00               	movlw	0
  9246  0035E6  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  9247  0035E8  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  9248  0035EA  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  9249  0035EC  90D8               	bcf	status,0,c
  9250  0035EE  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  9251  0035F0  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  9252  0035F2  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  9253  0035F4  320F               	rrcf	___xxtofl@arg^0,f,c
  9254  0035F6                     l1387:
  9255  0035F6  0E00               	movlw	0
  9256  0035F8  140F               	andwf	___xxtofl@arg^0,w,c
  9257  0035FA  6E09               	movwf	??___xxtofl^0,c
  9258  0035FC  0E00               	movlw	0
  9259  0035FE  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  9260  003600  6E0A               	movwf	(??___xxtofl+1)^0,c
  9261  003602  0E00               	movlw	0
  9262  003604  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  9263  003606  6E0B               	movwf	(??___xxtofl+2)^0,c
  9264  003608  0EFF               	movlw	255
  9265  00360A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  9266  00360C  6E0C               	movwf	(??___xxtofl+3)^0,c
  9267  00360E  5009               	movf	??___xxtofl^0,w,c
  9268  003610  100A               	iorwf	(??___xxtofl+1)^0,w,c
  9269  003612  100B               	iorwf	(??___xxtofl+2)^0,w,c
  9270  003614  100C               	iorwf	(??___xxtofl+3)^0,w,c
  9271  003616  A4D8               	btfss	status,2,c
  9272  003618  EF10  F01B         	goto	u5411
  9273  00361C  EF12  F01B         	goto	u5410
  9274  003620                     u5411:
  9275  003620  EFEF  F01A         	goto	l5578
  9276  003624                     u5410:
  9277  003624  EF1A  F01B         	goto	l5586
  9278  003628                     l5584:
  9279  003628  060E               	decf	___xxtofl@exp^0,f,c
  9280  00362A  90D8               	bcf	status,0,c
  9281  00362C  360F               	rlcf	___xxtofl@arg^0,f,c
  9282  00362E  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  9283  003630  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  9284  003632  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  9285  003634                     l5586:
  9286  003634  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  9287  003636  EF1F  F01B         	goto	u5421
  9288  00363A  EF21  F01B         	goto	u5420
  9289  00363E                     u5421:
  9290  00363E  EF29  F01B         	goto	l1394
  9291  003642                     u5420:
  9292  003642  0E02               	movlw	2
  9293  003644  600E               	cpfslt	___xxtofl@exp^0,c
  9294  003646  EF27  F01B         	goto	u5431
  9295  00364A  EF29  F01B         	goto	u5430
  9296  00364E                     u5431:
  9297  00364E  EF14  F01B         	goto	l5584
  9298  003652                     u5430:
  9299  003652                     l1394:
  9300  003652  B00E               	btfsc	___xxtofl@exp^0,0,c
  9301  003654  EF2E  F01B         	goto	u5441
  9302  003658  EF30  F01B         	goto	u5440
  9303  00365C                     u5441:
  9304  00365C  EF31  F01B         	goto	l5592
  9305  003660                     u5440:
  9306  003660  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  9307  003662                     l5592:
  9308  003662  90D8               	bcf	status,0,c
  9309  003664  320E               	rrcf	___xxtofl@exp^0,f,c
  9310  003666  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  9311  00366A  6A0A               	clrf	(??___xxtofl+1)^0,c
  9312  00366C  6A0B               	clrf	(??___xxtofl+2)^0,c
  9313  00366E  6A0C               	clrf	(??___xxtofl+3)^0,c
  9314  003670  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  9315  003674  6A0B               	clrf	(??___xxtofl+2)^0,c
  9316  003676  6A0A               	clrf	(??___xxtofl+1)^0,c
  9317  003678  6A09               	clrf	??___xxtofl^0,c
  9318  00367A  5009               	movf	??___xxtofl^0,w,c
  9319  00367C  120F               	iorwf	___xxtofl@arg^0,f,c
  9320  00367E  500A               	movf	(??___xxtofl+1)^0,w,c
  9321  003680  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  9322  003682  500B               	movf	(??___xxtofl+2)^0,w,c
  9323  003684  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  9324  003686  500C               	movf	(??___xxtofl+3)^0,w,c
  9325  003688  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  9326  00368A  500D               	movf	___xxtofl@sign^0,w,c
  9327  00368C  B4D8               	btfsc	status,2,c
  9328  00368E  EF4B  F01B         	goto	u5451
  9329  003692  EF4D  F01B         	goto	u5450
  9330  003696                     u5451:
  9331  003696  EF55  F01B         	goto	l5602
  9332  00369A                     u5450:
  9333  00369A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  9334  00369C  EF54  F01B         	goto	u5460
  9335  0036A0  EF52  F01B         	goto	u5461
  9336  0036A4                     u5461:
  9337  0036A4  EF55  F01B         	goto	l5602
  9338  0036A8                     u5460:
  9339  0036A8  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  9340  0036AA                     l5602:
  9341  0036AA  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  9342  0036AE  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  9343  0036B2  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  9344  0036B6  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  9345  0036BA                     l1383:
  9346  0036BA  0012               	return		;funcret
  9347  0036BC                     __end_of___xxtofl:
  9348                           	callstack 0
  9349                           
  9350 ;; *************** function ___flmul *****************
  9351 ;; Defined at:
  9352 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  b               4    4[COMRAM] unsigned char 
  9355 ;;  a               4    8[COMRAM] unsigned char 
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  prod            4   23[COMRAM] struct .
  9358 ;;  grs             4   18[COMRAM] unsigned long 
  9359 ;;  temp            2   27[COMRAM] struct .
  9360 ;;  bexp            1   22[COMRAM] unsigned char 
  9361 ;;  aexp            1   17[COMRAM] unsigned char 
  9362 ;;  sign            1   16[COMRAM] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  4    4[COMRAM] unsigned char 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0, prodl, prodh
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;Total ram usage:       25 bytes
  9377 ;; Hardware stack levels used: 1
  9378 ;; Hardware stack levels required when called: 4
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_Wertdetekt
  9383 ;;		_efgtoa
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text46
  9388  002B32                     __ptext46:
  9389                           	callstack 0
  9390  002B32                     ___flmul:
  9391                           	callstack 22
  9392  002B32  5008               	movf	(___flmul@b+3)^0,w,c
  9393  002B34  0B80               	andlw	128
  9394  002B36  6E11               	movwf	___flmul@sign^0,c
  9395  002B38  5008               	movf	(___flmul@b+3)^0,w,c
  9396  002B3A  2408               	addwf	(___flmul@b+3)^0,w,c
  9397  002B3C  6E17               	movwf	___flmul@bexp^0,c
  9398  002B3E  AE07               	btfss	(___flmul@b+2)^0,7,c
  9399  002B40  EFA4  F015         	goto	u6721
  9400  002B44  EFA6  F015         	goto	u6720
  9401  002B48                     u6721:
  9402  002B48  EFA7  F015         	goto	l6596
  9403  002B4C                     u6720:
  9404  002B4C  8017               	bsf	___flmul@bexp^0,0,c
  9405  002B4E                     l6596:
  9406  002B4E  5017               	movf	___flmul@bexp^0,w,c
  9407  002B50  B4D8               	btfsc	status,2,c
  9408  002B52  EFAD  F015         	goto	u6731
  9409  002B56  EFAF  F015         	goto	u6730
  9410  002B5A                     u6731:
  9411  002B5A  EFC2  F015         	goto	l6604
  9412  002B5E                     u6730:
  9413  002B5E  2817               	incf	___flmul@bexp^0,w,c
  9414  002B60  A4D8               	btfss	status,2,c
  9415  002B62  EFB5  F015         	goto	u6741
  9416  002B66  EFB7  F015         	goto	u6740
  9417  002B6A                     u6741:
  9418  002B6A  EFBF  F015         	goto	l6602
  9419  002B6E                     u6740:
  9420  002B6E  0E00               	movlw	0
  9421  002B70  6E05               	movwf	___flmul@b^0,c
  9422  002B72  0E00               	movlw	0
  9423  002B74  6E06               	movwf	(___flmul@b+1)^0,c
  9424  002B76  0E00               	movlw	0
  9425  002B78  6E07               	movwf	(___flmul@b+2)^0,c
  9426  002B7A  0E00               	movlw	0
  9427  002B7C  6E08               	movwf	(___flmul@b+3)^0,c
  9428  002B7E                     l6602:
  9429  002B7E  8E07               	bsf	(___flmul@b+2)^0,7,c
  9430  002B80  EFCA  F015         	goto	l6606
  9431  002B84                     l6604:
  9432  002B84  0E00               	movlw	0
  9433  002B86  6E05               	movwf	___flmul@b^0,c
  9434  002B88  0E00               	movlw	0
  9435  002B8A  6E06               	movwf	(___flmul@b+1)^0,c
  9436  002B8C  0E00               	movlw	0
  9437  002B8E  6E07               	movwf	(___flmul@b+2)^0,c
  9438  002B90  0E00               	movlw	0
  9439  002B92  6E08               	movwf	(___flmul@b+3)^0,c
  9440  002B94                     l6606:
  9441  002B94  500C               	movf	(___flmul@a+3)^0,w,c
  9442  002B96  0B80               	andlw	128
  9443  002B98  1A11               	xorwf	___flmul@sign^0,f,c
  9444  002B9A  500C               	movf	(___flmul@a+3)^0,w,c
  9445  002B9C  240C               	addwf	(___flmul@a+3)^0,w,c
  9446  002B9E  6E12               	movwf	___flmul@aexp^0,c
  9447  002BA0  AE0B               	btfss	(___flmul@a+2)^0,7,c
  9448  002BA2  EFD5  F015         	goto	u6751
  9449  002BA6  EFD7  F015         	goto	u6750
  9450  002BAA                     u6751:
  9451  002BAA  EFD8  F015         	goto	l6614
  9452  002BAE                     u6750:
  9453  002BAE  8012               	bsf	___flmul@aexp^0,0,c
  9454  002BB0                     l6614:
  9455  002BB0  5012               	movf	___flmul@aexp^0,w,c
  9456  002BB2  B4D8               	btfsc	status,2,c
  9457  002BB4  EFDE  F015         	goto	u6761
  9458  002BB8  EFE0  F015         	goto	u6760
  9459  002BBC                     u6761:
  9460  002BBC  EFF3  F015         	goto	l6622
  9461  002BC0                     u6760:
  9462  002BC0  2812               	incf	___flmul@aexp^0,w,c
  9463  002BC2  A4D8               	btfss	status,2,c
  9464  002BC4  EFE6  F015         	goto	u6771
  9465  002BC8  EFE8  F015         	goto	u6770
  9466  002BCC                     u6771:
  9467  002BCC  EFF0  F015         	goto	l6620
  9468  002BD0                     u6770:
  9469  002BD0  0E00               	movlw	0
  9470  002BD2  6E09               	movwf	___flmul@a^0,c
  9471  002BD4  0E00               	movlw	0
  9472  002BD6  6E0A               	movwf	(___flmul@a+1)^0,c
  9473  002BD8  0E00               	movlw	0
  9474  002BDA  6E0B               	movwf	(___flmul@a+2)^0,c
  9475  002BDC  0E00               	movlw	0
  9476  002BDE  6E0C               	movwf	(___flmul@a+3)^0,c
  9477  002BE0                     l6620:
  9478  002BE0  8E0B               	bsf	(___flmul@a+2)^0,7,c
  9479  002BE2  EFFB  F015         	goto	l1339
  9480  002BE6                     l6622:
  9481  002BE6  0E00               	movlw	0
  9482  002BE8  6E09               	movwf	___flmul@a^0,c
  9483  002BEA  0E00               	movlw	0
  9484  002BEC  6E0A               	movwf	(___flmul@a+1)^0,c
  9485  002BEE  0E00               	movlw	0
  9486  002BF0  6E0B               	movwf	(___flmul@a+2)^0,c
  9487  002BF2  0E00               	movlw	0
  9488  002BF4  6E0C               	movwf	(___flmul@a+3)^0,c
  9489  002BF6                     l1339:
  9490  002BF6  5012               	movf	___flmul@aexp^0,w,c
  9491  002BF8  B4D8               	btfsc	status,2,c
  9492  002BFA  EF01  F016         	goto	u6781
  9493  002BFE  EF03  F016         	goto	u6780
  9494  002C02                     u6781:
  9495  002C02  EF0B  F016         	goto	l6626
  9496  002C06                     u6780:
  9497  002C06  5017               	movf	___flmul@bexp^0,w,c
  9498  002C08  A4D8               	btfss	status,2,c
  9499  002C0A  EF09  F016         	goto	u6791
  9500  002C0E  EF0B  F016         	goto	u6790
  9501  002C12                     u6791:
  9502  002C12  EF15  F016         	goto	l6630
  9503  002C16                     u6790:
  9504  002C16                     l6626:
  9505  002C16  0E00               	movlw	0
  9506  002C18  6E05               	movwf	?___flmul^0,c
  9507  002C1A  0E00               	movlw	0
  9508  002C1C  6E06               	movwf	(?___flmul+1)^0,c
  9509  002C1E  0E00               	movlw	0
  9510  002C20  6E07               	movwf	(?___flmul+2)^0,c
  9511  002C22  0E00               	movlw	0
  9512  002C24  6E08               	movwf	(?___flmul+3)^0,c
  9513  002C26  EFAD  F017         	goto	l1343
  9514  002C2A                     l6630:
  9515  002C2A  500B               	movf	(___flmul@a+2)^0,w,c
  9516  002C2C  0205               	mulwf	___flmul@b^0,c
  9517  002C2E  CFF3 F01C          	movff	prodl,___flmul@temp
  9518  002C32  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9519  002C36  501C               	movf	___flmul@temp^0,w,c
  9520  002C38  6E13               	movwf	___flmul@grs^0,c
  9521  002C3A  6A14               	clrf	(___flmul@grs+1)^0,c
  9522  002C3C  6A15               	clrf	(___flmul@grs+2)^0,c
  9523  002C3E  6A16               	clrf	(___flmul@grs+3)^0,c
  9524  002C40  501D               	movf	(___flmul@temp+1)^0,w,c
  9525  002C42  6E18               	movwf	___flmul@prod^0,c
  9526  002C44  6A19               	clrf	(___flmul@prod+1)^0,c
  9527  002C46  6A1A               	clrf	(___flmul@prod+2)^0,c
  9528  002C48  6A1B               	clrf	(___flmul@prod+3)^0,c
  9529  002C4A  500A               	movf	(___flmul@a+1)^0,w,c
  9530  002C4C  0206               	mulwf	(___flmul@b+1)^0,c
  9531  002C4E  CFF3 F01C          	movff	prodl,___flmul@temp
  9532  002C52  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9533  002C56  501C               	movf	___flmul@temp^0,w,c
  9534  002C58  2613               	addwf	___flmul@grs^0,f,c
  9535  002C5A  0E00               	movlw	0
  9536  002C5C  2214               	addwfc	(___flmul@grs+1)^0,f,c
  9537  002C5E  2215               	addwfc	(___flmul@grs+2)^0,f,c
  9538  002C60  2216               	addwfc	(___flmul@grs+3)^0,f,c
  9539  002C62  501D               	movf	(___flmul@temp+1)^0,w,c
  9540  002C64  2618               	addwf	___flmul@prod^0,f,c
  9541  002C66  0E00               	movlw	0
  9542  002C68  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9543  002C6A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9544  002C6C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9545  002C6E  5009               	movf	___flmul@a^0,w,c
  9546  002C70  0207               	mulwf	(___flmul@b+2)^0,c
  9547  002C72  CFF3 F01C          	movff	prodl,___flmul@temp
  9548  002C76  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9549  002C7A  501C               	movf	___flmul@temp^0,w,c
  9550  002C7C  2613               	addwf	___flmul@grs^0,f,c
  9551  002C7E  0E00               	movlw	0
  9552  002C80  2214               	addwfc	(___flmul@grs+1)^0,f,c
  9553  002C82  2215               	addwfc	(___flmul@grs+2)^0,f,c
  9554  002C84  2216               	addwfc	(___flmul@grs+3)^0,f,c
  9555  002C86  501D               	movf	(___flmul@temp+1)^0,w,c
  9556  002C88  2618               	addwf	___flmul@prod^0,f,c
  9557  002C8A  0E00               	movlw	0
  9558  002C8C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9559  002C8E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9560  002C90  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9561  002C92  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  9562  002C96  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  9563  002C9A  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  9564  002C9E  6A13               	clrf	___flmul@grs^0,c
  9565  002CA0  5009               	movf	___flmul@a^0,w,c
  9566  002CA2  0206               	mulwf	(___flmul@b+1)^0,c
  9567  002CA4  CFF3 F01C          	movff	prodl,___flmul@temp
  9568  002CA8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9569  002CAC  501C               	movf	___flmul@temp^0,w,c
  9570  002CAE  2613               	addwf	___flmul@grs^0,f,c
  9571  002CB0  501D               	movf	(___flmul@temp+1)^0,w,c
  9572  002CB2  2214               	addwfc	(___flmul@grs+1)^0,f,c
  9573  002CB4  0E00               	movlw	0
  9574  002CB6  2215               	addwfc	(___flmul@grs+2)^0,f,c
  9575  002CB8  0E00               	movlw	0
  9576  002CBA  2216               	addwfc	(___flmul@grs+3)^0,f,c
  9577  002CBC  500A               	movf	(___flmul@a+1)^0,w,c
  9578  002CBE  0205               	mulwf	___flmul@b^0,c
  9579  002CC0  CFF3 F01C          	movff	prodl,___flmul@temp
  9580  002CC4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9581  002CC8  501C               	movf	___flmul@temp^0,w,c
  9582  002CCA  2613               	addwf	___flmul@grs^0,f,c
  9583  002CCC  501D               	movf	(___flmul@temp+1)^0,w,c
  9584  002CCE  2214               	addwfc	(___flmul@grs+1)^0,f,c
  9585  002CD0  0E00               	movlw	0
  9586  002CD2  2215               	addwfc	(___flmul@grs+2)^0,f,c
  9587  002CD4  0E00               	movlw	0
  9588  002CD6  2216               	addwfc	(___flmul@grs+3)^0,f,c
  9589  002CD8  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  9590  002CDC  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  9591  002CE0  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  9592  002CE4  6A13               	clrf	___flmul@grs^0,c
  9593  002CE6  5009               	movf	___flmul@a^0,w,c
  9594  002CE8  0205               	mulwf	___flmul@b^0,c
  9595  002CEA  CFF3 F01C          	movff	prodl,___flmul@temp
  9596  002CEE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9597  002CF2  501C               	movf	___flmul@temp^0,w,c
  9598  002CF4  2613               	addwf	___flmul@grs^0,f,c
  9599  002CF6  501D               	movf	(___flmul@temp+1)^0,w,c
  9600  002CF8  2214               	addwfc	(___flmul@grs+1)^0,f,c
  9601  002CFA  0E00               	movlw	0
  9602  002CFC  2215               	addwfc	(___flmul@grs+2)^0,f,c
  9603  002CFE  0E00               	movlw	0
  9604  002D00  2216               	addwfc	(___flmul@grs+3)^0,f,c
  9605  002D02  500B               	movf	(___flmul@a+2)^0,w,c
  9606  002D04  0206               	mulwf	(___flmul@b+1)^0,c
  9607  002D06  CFF3 F01C          	movff	prodl,___flmul@temp
  9608  002D0A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9609  002D0E  501C               	movf	___flmul@temp^0,w,c
  9610  002D10  2618               	addwf	___flmul@prod^0,f,c
  9611  002D12  501D               	movf	(___flmul@temp+1)^0,w,c
  9612  002D14  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9613  002D16  0E00               	movlw	0
  9614  002D18  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9615  002D1A  0E00               	movlw	0
  9616  002D1C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9617  002D1E  500A               	movf	(___flmul@a+1)^0,w,c
  9618  002D20  0207               	mulwf	(___flmul@b+2)^0,c
  9619  002D22  CFF3 F01C          	movff	prodl,___flmul@temp
  9620  002D26  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9621  002D2A  501C               	movf	___flmul@temp^0,w,c
  9622  002D2C  2618               	addwf	___flmul@prod^0,f,c
  9623  002D2E  501D               	movf	(___flmul@temp+1)^0,w,c
  9624  002D30  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9625  002D32  0E00               	movlw	0
  9626  002D34  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9627  002D36  0E00               	movlw	0
  9628  002D38  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9629  002D3A  500B               	movf	(___flmul@a+2)^0,w,c
  9630  002D3C  0207               	mulwf	(___flmul@b+2)^0,c
  9631  002D3E  CFF3 F01C          	movff	prodl,___flmul@temp
  9632  002D42  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9633  002D46  501C               	movf	___flmul@temp^0,w,c
  9634  002D48  6E0D               	movwf	??___flmul^0,c
  9635  002D4A  501D               	movf	(___flmul@temp+1)^0,w,c
  9636  002D4C  6E0E               	movwf	(??___flmul+1)^0,c
  9637  002D4E  6A0F               	clrf	(??___flmul+2)^0,c
  9638  002D50  6A10               	clrf	(??___flmul+3)^0,c
  9639  002D52  C00F  F010         	movff	??___flmul+2,??___flmul+3
  9640  002D56  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  9641  002D5A  C00D  F00E         	movff	??___flmul,??___flmul+1
  9642  002D5E  6A0D               	clrf	??___flmul^0,c
  9643  002D60  500D               	movf	??___flmul^0,w,c
  9644  002D62  2618               	addwf	___flmul@prod^0,f,c
  9645  002D64  500E               	movf	(??___flmul+1)^0,w,c
  9646  002D66  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9647  002D68  500F               	movf	(??___flmul+2)^0,w,c
  9648  002D6A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9649  002D6C  5010               	movf	(??___flmul+3)^0,w,c
  9650  002D6E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9651  002D70  C013  F00D         	movff	___flmul@grs,??___flmul
  9652  002D74  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  9653  002D78  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  9654  002D7C  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  9655  002D80  0E19               	movlw	25
  9656  002D82  EFC8  F016         	goto	u6800
  9657  002D86                     u6805:
  9658  002D86  90D8               	bcf	status,0,c
  9659  002D88  3210               	rrcf	(??___flmul+3)^0,f,c
  9660  002D8A  320F               	rrcf	(??___flmul+2)^0,f,c
  9661  002D8C  320E               	rrcf	(??___flmul+1)^0,f,c
  9662  002D8E  320D               	rrcf	??___flmul^0,f,c
  9663  002D90                     u6800:
  9664  002D90  2EE8               	decfsz	wreg,f,c
  9665  002D92  EFC3  F016         	goto	u6805
  9666  002D96  500D               	movf	??___flmul^0,w,c
  9667  002D98  2618               	addwf	___flmul@prod^0,f,c
  9668  002D9A  500E               	movf	(??___flmul+1)^0,w,c
  9669  002D9C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9670  002D9E  500F               	movf	(??___flmul+2)^0,w,c
  9671  002DA0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9672  002DA2  5010               	movf	(??___flmul+3)^0,w,c
  9673  002DA4  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9674  002DA6  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  9675  002DAA  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  9676  002DAE  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  9677  002DB2  6A13               	clrf	___flmul@grs^0,c
  9678  002DB4  5012               	movf	___flmul@aexp^0,w,c
  9679  002DB6  C017  F00D         	movff	___flmul@bexp,??___flmul
  9680  002DBA  6A0E               	clrf	(??___flmul+1)^0,c
  9681  002DBC  260D               	addwf	??___flmul^0,f,c
  9682  002DBE  0E00               	movlw	0
  9683  002DC0  220E               	addwfc	(??___flmul+1)^0,f,c
  9684  002DC2  0E82               	movlw	130
  9685  002DC4  240D               	addwf	??___flmul^0,w,c
  9686  002DC6  6E1C               	movwf	___flmul@temp^0,c
  9687  002DC8  0EFF               	movlw	255
  9688  002DCA  200E               	addwfc	(??___flmul+1)^0,w,c
  9689  002DCC  6E1D               	movwf	(___flmul@temp+1)^0,c
  9690  002DCE  EFFE  F016         	goto	l6678
  9691  002DD2                     l6672:
  9692  002DD2  90D8               	bcf	status,0,c
  9693  002DD4  3618               	rlcf	___flmul@prod^0,f,c
  9694  002DD6  3619               	rlcf	(___flmul@prod+1)^0,f,c
  9695  002DD8  361A               	rlcf	(___flmul@prod+2)^0,f,c
  9696  002DDA  361B               	rlcf	(___flmul@prod+3)^0,f,c
  9697  002DDC  AE16               	btfss	(___flmul@grs+3)^0,7,c
  9698  002DDE  EFF3  F016         	goto	u6811
  9699  002DE2  EFF5  F016         	goto	u6810
  9700  002DE6                     u6811:
  9701  002DE6  EFF6  F016         	goto	l1346
  9702  002DEA                     u6810:
  9703  002DEA  8018               	bsf	___flmul@prod^0,0,c
  9704  002DEC                     l1346:
  9705  002DEC  90D8               	bcf	status,0,c
  9706  002DEE  3613               	rlcf	___flmul@grs^0,f,c
  9707  002DF0  3614               	rlcf	(___flmul@grs+1)^0,f,c
  9708  002DF2  3615               	rlcf	(___flmul@grs+2)^0,f,c
  9709  002DF4  3616               	rlcf	(___flmul@grs+3)^0,f,c
  9710  002DF6  061C               	decf	___flmul@temp^0,f,c
  9711  002DF8  A0D8               	btfss	status,0,c
  9712  002DFA  061D               	decf	(___flmul@temp+1)^0,f,c
  9713  002DFC                     l6678:
  9714  002DFC  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  9715  002DFE  EF03  F017         	goto	u6821
  9716  002E02  EF05  F017         	goto	u6820
  9717  002E06                     u6821:
  9718  002E06  EFE9  F016         	goto	l6672
  9719  002E0A                     u6820:
  9720  002E0A  0E00               	movlw	0
  9721  002E0C  6E12               	movwf	___flmul@aexp^0,c
  9722  002E0E  AE16               	btfss	(___flmul@grs+3)^0,7,c
  9723  002E10  EF0C  F017         	goto	u6831
  9724  002E14  EF0E  F017         	goto	u6830
  9725  002E18                     u6831:
  9726  002E18  EF32  F017         	goto	l1348
  9727  002E1C                     u6830:
  9728  002E1C  0EFF               	movlw	255
  9729  002E1E  1413               	andwf	___flmul@grs^0,w,c
  9730  002E20  6E0D               	movwf	??___flmul^0,c
  9731  002E22  0EFF               	movlw	255
  9732  002E24  1414               	andwf	(___flmul@grs+1)^0,w,c
  9733  002E26  6E0E               	movwf	(??___flmul+1)^0,c
  9734  002E28  0EFF               	movlw	255
  9735  002E2A  1415               	andwf	(___flmul@grs+2)^0,w,c
  9736  002E2C  6E0F               	movwf	(??___flmul+2)^0,c
  9737  002E2E  0E7F               	movlw	127
  9738  002E30  1416               	andwf	(___flmul@grs+3)^0,w,c
  9739  002E32  6E10               	movwf	(??___flmul+3)^0,c
  9740  002E34  500D               	movf	??___flmul^0,w,c
  9741  002E36  100E               	iorwf	(??___flmul+1)^0,w,c
  9742  002E38  100F               	iorwf	(??___flmul+2)^0,w,c
  9743  002E3A  1010               	iorwf	(??___flmul+3)^0,w,c
  9744  002E3C  B4D8               	btfsc	status,2,c
  9745  002E3E  EF23  F017         	goto	u6841
  9746  002E42  EF25  F017         	goto	u6840
  9747  002E46                     u6841:
  9748  002E46  EF29  F017         	goto	l1349
  9749  002E4A                     u6840:
  9750  002E4A                     l6686:
  9751  002E4A  0E01               	movlw	1
  9752  002E4C  6E12               	movwf	___flmul@aexp^0,c
  9753  002E4E  EF32  F017         	goto	l1348
  9754  002E52                     l1349:
  9755  002E52  A018               	btfss	___flmul@prod^0,0,c
  9756  002E54  EF2E  F017         	goto	u6851
  9757  002E58  EF30  F017         	goto	u6850
  9758  002E5C                     u6851:
  9759  002E5C  EF32  F017         	goto	l1348
  9760  002E60                     u6850:
  9761  002E60  EF25  F017         	goto	l6686
  9762  002E64                     l1348:
  9763  002E64  5012               	movf	___flmul@aexp^0,w,c
  9764  002E66  B4D8               	btfsc	status,2,c
  9765  002E68  EF38  F017         	goto	u6861
  9766  002E6C  EF3A  F017         	goto	u6860
  9767  002E70                     u6861:
  9768  002E70  EF5E  F017         	goto	l6698
  9769  002E74                     u6860:
  9770  002E74  0E01               	movlw	1
  9771  002E76  2618               	addwf	___flmul@prod^0,f,c
  9772  002E78  0E00               	movlw	0
  9773  002E7A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9774  002E7C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9775  002E7E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9776  002E80  A01B               	btfss	(___flmul@prod+3)^0,0,c
  9777  002E82  EF45  F017         	goto	u6871
  9778  002E86  EF47  F017         	goto	u6870
  9779  002E8A                     u6871:
  9780  002E8A  EF5E  F017         	goto	l6698
  9781  002E8E                     u6870:
  9782  002E8E  C018  F00D         	movff	___flmul@prod,??___flmul
  9783  002E92  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  9784  002E96  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  9785  002E9A  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  9786  002E9E  3410               	rlcf	(??___flmul+3)^0,w,c
  9787  002EA0  3210               	rrcf	(??___flmul+3)^0,f,c
  9788  002EA2  320F               	rrcf	(??___flmul+2)^0,f,c
  9789  002EA4  320E               	rrcf	(??___flmul+1)^0,f,c
  9790  002EA6  320D               	rrcf	??___flmul^0,f,c
  9791  002EA8  C00D  F018         	movff	??___flmul,___flmul@prod
  9792  002EAC  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  9793  002EB0  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  9794  002EB4  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  9795  002EB8  4A1C               	infsnz	___flmul@temp^0,f,c
  9796  002EBA  2A1D               	incf	(___flmul@temp+1)^0,f,c
  9797  002EBC                     l6698:
  9798  002EBC  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9799  002EBE  EF69  F017         	goto	u6881
  9800  002EC2  501D               	movf	(___flmul@temp+1)^0,w,c
  9801  002EC4  E108               	bnz	u6880
  9802  002EC6  281C               	incf	___flmul@temp^0,w,c
  9803  002EC8  A0D8               	btfss	status,0,c
  9804  002ECA  EF69  F017         	goto	u6881
  9805  002ECE  EF6B  F017         	goto	u6880
  9806  002ED2                     u6881:
  9807  002ED2  EF75  F017         	goto	l6702
  9808  002ED6                     u6880:
  9809  002ED6  0E00               	movlw	0
  9810  002ED8  6E18               	movwf	___flmul@prod^0,c
  9811  002EDA  0E00               	movlw	0
  9812  002EDC  6E19               	movwf	(___flmul@prod+1)^0,c
  9813  002EDE  0E80               	movlw	128
  9814  002EE0  6E1A               	movwf	(___flmul@prod+2)^0,c
  9815  002EE2  0E7F               	movlw	127
  9816  002EE4  6E1B               	movwf	(___flmul@prod+3)^0,c
  9817  002EE6  EFA3  F017         	goto	l6714
  9818  002EEA                     l6702:
  9819  002EEA  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9820  002EEC  EF82  F017         	goto	u6890
  9821  002EF0  501D               	movf	(___flmul@temp+1)^0,w,c
  9822  002EF2  E106               	bnz	u6891
  9823  002EF4  041C               	decf	___flmul@temp^0,w,c
  9824  002EF6  B0D8               	btfsc	status,0,c
  9825  002EF8  EF80  F017         	goto	u6891
  9826  002EFC  EF82  F017         	goto	u6890
  9827  002F00                     u6891:
  9828  002F00  EF8E  F017         	goto	l1356
  9829  002F04                     u6890:
  9830  002F04  0E00               	movlw	0
  9831  002F06  6E18               	movwf	___flmul@prod^0,c
  9832  002F08  0E00               	movlw	0
  9833  002F0A  6E19               	movwf	(___flmul@prod+1)^0,c
  9834  002F0C  0E00               	movlw	0
  9835  002F0E  6E1A               	movwf	(___flmul@prod+2)^0,c
  9836  002F10  0E00               	movlw	0
  9837  002F12  6E1B               	movwf	(___flmul@prod+3)^0,c
  9838  002F14  0E00               	movlw	0
  9839  002F16  6E11               	movwf	___flmul@sign^0,c
  9840  002F18  EFA3  F017         	goto	l6714
  9841  002F1C                     l1356:
  9842  002F1C  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  9843  002F20  0EFF               	movlw	255
  9844  002F22  1618               	andwf	___flmul@prod^0,f,c
  9845  002F24  0EFF               	movlw	255
  9846  002F26  1619               	andwf	(___flmul@prod+1)^0,f,c
  9847  002F28  0E7F               	movlw	127
  9848  002F2A  161A               	andwf	(___flmul@prod+2)^0,f,c
  9849  002F2C  0E00               	movlw	0
  9850  002F2E  161B               	andwf	(___flmul@prod+3)^0,f,c
  9851  002F30  A017               	btfss	___flmul@bexp^0,0,c
  9852  002F32  EF9D  F017         	goto	u6901
  9853  002F36  EF9F  F017         	goto	u6900
  9854  002F3A                     u6901:
  9855  002F3A  EFA0  F017         	goto	l6712
  9856  002F3E                     u6900:
  9857  002F3E  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  9858  002F40                     l6712:
  9859  002F40  90D8               	bcf	status,0,c
  9860  002F42  3017               	rrcf	___flmul@bexp^0,w,c
  9861  002F44  6E1B               	movwf	(___flmul@prod+3)^0,c
  9862  002F46                     l6714:
  9863  002F46  5011               	movf	___flmul@sign^0,w,c
  9864  002F48  121B               	iorwf	(___flmul@prod+3)^0,f,c
  9865  002F4A  C018  F005         	movff	___flmul@prod,?___flmul
  9866  002F4E  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  9867  002F52  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  9868  002F56  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  9869  002F5A                     l1343:
  9870  002F5A  0012               	return		;funcret
  9871  002F5C                     __end_of___flmul:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function _I2C_Read1ByteRegister *****************
  9875 ;; Defined at:
  9876 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  address         1    wreg     unsigned char 
  9879 ;;  reg             1   21[COMRAM] unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  address         1   22[COMRAM] unsigned char 
  9882 ;;  returnValue     1   23[COMRAM] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      unsigned char 
  9885 ;; Registers used:
  9886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;Total ram usage:        3 bytes
  9897 ;; Hardware stack levels used: 1
  9898 ;; Hardware stack levels required when called: 12
  9899 ;; This function calls:
  9900 ;;		_I2C_Close
  9901 ;;		_I2C_MasterWrite
  9902 ;;		_I2C_Open
  9903 ;;		_I2C_SetAddressNackCallback
  9904 ;;		_I2C_SetBuffer
  9905 ;;		_I2C_SetDataCompleteCallback
  9906 ;; This function is called by:
  9907 ;;		_AMG8833_GetData
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text47
  9912  004678                     __ptext47:
  9913                           	callstack 0
  9914  004678                     _I2C_Read1ByteRegister:
  9915                           	callstack 17
  9916                           
  9917                           ;incstack = 0
  9918                           ;I2C_Read1ByteRegister@address stored from wreg
  9919  004678  6E17               	movwf	I2C_Read1ByteRegister@address^0,c
  9920  00467A                     
  9921                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  9922  00467A  0E00               	movlw	0
  9923  00467C  6E18               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  9924  00467E                     l5698:
  9925  00467E  5017               	movf	I2C_Read1ByteRegister@address^0,w,c
  9926  004680  EC01  F022         	call	_I2C_Open
  9927  004684  0900               	iorlw	0
  9928  004686  B4D8               	btfsc	status,2,c
  9929  004688  EF48  F023         	goto	u5611
  9930  00468C  EF4A  F023         	goto	u5610
  9931  004690                     u5611:
  9932  004690  EF3F  F023         	goto	l5698
  9933  004694                     u5610:
  9934  004694                     
  9935                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  9936  004694  0E06               	movlw	low _rd1RegCompleteHandler
  9937  004696  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  9938  004698  0E4D               	movlw	high _rd1RegCompleteHandler
  9939  00469A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  9940  00469C  0E18               	movlw	low I2C_Read1ByteRegister@returnValue
  9941  00469E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  9942  0046A0  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  9943  0046A2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  9944  0046A4  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
  9945  0046A8                     
  9946                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  9947  0046A8  0E16               	movlw	low I2C_Read1ByteRegister@reg
  9948  0046AA  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  9949  0046AC  0E00               	movlw	high I2C_Read1ByteRegister@reg
  9950  0046AE  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  9951  0046B0  0E00               	movlw	0
  9952  0046B2  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9953  0046B4  0E01               	movlw	1
  9954  0046B6  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  9955  0046B8  EC02  F027         	call	_I2C_SetBuffer	;wreg free
  9956  0046BC                     
  9957                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  9958  0046BC  0E00               	movlw	0
  9959  0046BE  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9960  0046C0  0E00               	movlw	0
  9961  0046C2  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9962  0046C4  0E00               	movlw	0
  9963  0046C6  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9964  0046C8  0E00               	movlw	0
  9965  0046CA  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9966  0046CC  EC34  F027         	call	_I2C_SetAddressNackCallback	;wreg free
  9967  0046D0                     
  9968                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  9969  0046D0  ECB8  F027         	call	_I2C_MasterWrite	;wreg free
  9970  0046D4                     l5708:
  9971  0046D4  ECAF  F026         	call	_I2C_Close	;wreg free
  9972  0046D8  06E8               	decf	wreg,f,c
  9973  0046DA  B4D8               	btfsc	status,2,c
  9974  0046DC  EF72  F023         	goto	u5621
  9975  0046E0  EF74  F023         	goto	u5620
  9976  0046E4                     u5621:
  9977  0046E4  EF6A  F023         	goto	l5708
  9978  0046E8                     u5620:
  9979  0046E8                     
  9980                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  9981  0046E8  5018               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  9982  0046EA  0012               	return		;funcret
  9983  0046EC                     __end_of_I2C_Read1ByteRegister:
  9984                           	callstack 0
  9985                           
  9986 ;; *************** function _I2C_SetAddressNackCallback *****************
  9987 ;; Defined at:
  9988 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  9991 ;;		 -> Absolute function(1), 
  9992 ;;  ptr             2   11[COMRAM] PTR void 
  9993 ;;		 -> NULL(0), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;Total ram usage:        4 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 5
 10012 ;; This function calls:
 10013 ;;		_I2C_SetCallback
 10014 ;; This function is called by:
 10015 ;;		_I2C_Read1ByteRegister
 10016 ;;		_I2C_Write1ByteRegister
 10017 ;;		_I2C_Read2ByteRegister
 10018 ;;		_I2C_Write2ByteRegister
 10019 ;;		_I2C_WriteNBytes
 10020 ;;		_I2C_ReadDataBlock
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text48
 10025  004E68                     __ptext48:
 10026                           	callstack 0
 10027  004E68                     _I2C_SetAddressNackCallback:
 10028                           	callstack 23
 10029  004E68                     
 10030                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 10031  004E68  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 10032  004E6C  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 10033  004E70  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 10034  004E74  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
 10035  004E78  0E02               	movlw	2
 10036  004E7A  ECC4  F022         	call	_I2C_SetCallback
 10037  004E7E  0012               	return		;funcret
 10038  004E80                     __end_of_I2C_SetAddressNackCallback:
 10039                           	callstack 0
 10040                           
 10041 ;; *************** function _I2C_Open *****************
 10042 ;; Defined at:
 10043 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  address         1    wreg     unsigned char 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  address         1    4[COMRAM] unsigned char 
 10048 ;;  returnValue     1    5[COMRAM] enum E355
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      enum E355
 10051 ;; Registers used:
 10052 ;;		wreg, status,2, status,0, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;Total ram usage:        2 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 5
 10065 ;; This function calls:
 10066 ;;		_I2C_MasterClearIrq
 10067 ;;		_I2C_MasterOpen
 10068 ;; This function is called by:
 10069 ;;		_I2C_Read1ByteRegister
 10070 ;;		_I2C_Write1ByteRegister
 10071 ;;		_I2C_Read2ByteRegister
 10072 ;;		_I2C_Write2ByteRegister
 10073 ;;		_I2C_WriteNBytes
 10074 ;;		_I2C_ReadNBytes
 10075 ;;		_I2C_ReadDataBlock
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text49
 10080  004402                     __ptext49:
 10081                           	callstack 0
 10082  004402                     _I2C_Open:
 10083                           	callstack 23
 10084                           
 10085                           ;incstack = 0
 10086                           ;I2C_Open@address stored from wreg
 10087  004402  6E05               	movwf	I2C_Open@address^0,c
 10088  004404                     
 10089                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10090  004404  0E01               	movlw	1
 10091  004406  6E06               	movwf	I2C_Open@returnValue^0,c
 10092  004408                     
 10093                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 10094  004408  0100               	movlb	0	; () banked
 10095  00440A  B5E3               	btfsc	(_I2C_Status+35)& (0+255),2,b
 10096  00440C  EF0A  F022         	goto	u5341
 10097  004410  EF0C  F022         	goto	u5340
 10098  004414                     u5341:
 10099  004414  EF46  F022         	goto	l5516
 10100  004418                     u5340:
 10101  004418                     
 10102                           ; BSR set to: 0
 10103                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 10104  004418  C005  F0DC         	movff	I2C_Open@address,_I2C_Status+28
 10105  00441C                     
 10106                           ; BSR set to: 0
 10107                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 10108  00441C  93E3               	bcf	(_I2C_Status+35)& (0+255),1,b
 10109  00441E                     
 10110                           ; BSR set to: 0
 10111                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 10112  00441E  85E3               	bsf	(_I2C_Status+35)& (0+255),2,b
 10113  004420                     
 10114                           ; BSR set to: 0
 10115                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 10116  004420  91E3               	bcf	(_I2C_Status+35)& (0+255),0,b
 10117  004422                     
 10118                           ; BSR set to: 0
 10119                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 10120  004422  0E0E               	movlw	14
 10121  004424  6FE1               	movwf	(_I2C_Status+33)& (0+255),b
 10122  004426                     
 10123                           ; BSR set to: 0
 10124                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 10125  004426  0E01               	movlw	1
 10126  004428  6FDB               	movwf	(_I2C_Status+27)& (0+255),b
 10127  00442A  0EF4               	movlw	244
 10128  00442C  6FDA               	movwf	(_I2C_Status+26)& (0+255),b
 10129  00442E                     
 10130                           ; BSR set to: 0
 10131                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 10132  00442E  87E3               	bsf	(_I2C_Status+35)& (0+255),3,b
 10133  004430                     
 10134                           ; BSR set to: 0
 10135                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10136  004430  0EE4               	movlw	low _I2C_CallbackReturnStop
 10137  004432  6FC0               	movwf	_I2C_Status& (0+255),b
 10138  004434  0E4F               	movlw	high _I2C_CallbackReturnStop
 10139  004436  6FC1               	movwf	(_I2C_Status+1)& (0+255),b
 10140  004438                     
 10141                           ; BSR set to: 0
 10142                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10143  004438  0E00               	movlw	0
 10144  00443A  6FCC               	movwf	(_I2C_Status+12)& (0+255),b
 10145  00443C  0E00               	movlw	0
 10146  00443E  6FCD               	movwf	(_I2C_Status+13)& (0+255),b
 10147  004440                     
 10148                           ; BSR set to: 0
 10149                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10150  004440  0EE4               	movlw	low _I2C_CallbackReturnStop
 10151  004442  6FC2               	movwf	(_I2C_Status+2)& (0+255),b
 10152  004444  0E4F               	movlw	high _I2C_CallbackReturnStop
 10153  004446  6FC3               	movwf	(_I2C_Status+3)& (0+255),b
 10154  004448                     
 10155                           ; BSR set to: 0
 10156                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10157  004448  0E00               	movlw	0
 10158  00444A  6FCE               	movwf	(_I2C_Status+14)& (0+255),b
 10159  00444C  0E00               	movlw	0
 10160  00444E  6FCF               	movwf	(_I2C_Status+15)& (0+255),b
 10161  004450                     
 10162                           ; BSR set to: 0
 10163                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10164  004450  0EE4               	movlw	low _I2C_CallbackReturnStop
 10165  004452  6FC4               	movwf	(_I2C_Status+4)& (0+255),b
 10166  004454  0E4F               	movlw	high _I2C_CallbackReturnStop
 10167  004456  6FC5               	movwf	(_I2C_Status+5)& (0+255),b
 10168  004458                     
 10169                           ; BSR set to: 0
 10170                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10171  004458  0E00               	movlw	0
 10172  00445A  6FD0               	movwf	(_I2C_Status+16)& (0+255),b
 10173  00445C  0E00               	movlw	0
 10174  00445E  6FD1               	movwf	(_I2C_Status+17)& (0+255),b
 10175  004460                     
 10176                           ; BSR set to: 0
 10177                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10178  004460  0EE4               	movlw	low _I2C_CallbackReturnStop
 10179  004462  6FC6               	movwf	(_I2C_Status+6)& (0+255),b
 10180  004464  0E4F               	movlw	high _I2C_CallbackReturnStop
 10181  004466  6FC7               	movwf	(_I2C_Status+7)& (0+255),b
 10182  004468                     
 10183                           ; BSR set to: 0
 10184                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10185  004468  0E00               	movlw	0
 10186  00446A  6FD2               	movwf	(_I2C_Status+18)& (0+255),b
 10187  00446C  0E00               	movlw	0
 10188  00446E  6FD3               	movwf	(_I2C_Status+19)& (0+255),b
 10189  004470                     
 10190                           ; BSR set to: 0
 10191                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10192  004470  0EE0               	movlw	low _I2C_CallbackReturnReset
 10193  004472  6FC8               	movwf	(_I2C_Status+8)& (0+255),b
 10194  004474  0E4F               	movlw	high _I2C_CallbackReturnReset
 10195  004476  6FC9               	movwf	(_I2C_Status+9)& (0+255),b
 10196  004478                     
 10197                           ; BSR set to: 0
 10198                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10199  004478  0E00               	movlw	0
 10200  00447A  6FD4               	movwf	(_I2C_Status+20)& (0+255),b
 10201  00447C  0E00               	movlw	0
 10202  00447E  6FD5               	movwf	(_I2C_Status+21)& (0+255),b
 10203  004480                     
 10204                           ; BSR set to: 0
 10205                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10206  004480  ECFE  F027         	call	_I2C_MasterClearIrq	;wreg free
 10207  004484                     
 10208                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10209  004484  EC14  F027         	call	_I2C_MasterOpen	;wreg free
 10210  004488                     
 10211                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10212  004488  0E00               	movlw	0
 10213  00448A  6E06               	movwf	I2C_Open@returnValue^0,c
 10214  00448C                     l5516:
 10215                           
 10216                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10217  00448C  5006               	movf	I2C_Open@returnValue^0,w,c
 10218  00448E  0012               	return		;funcret
 10219  004490                     __end_of_I2C_Open:
 10220                           	callstack 0
 10221                           
 10222 ;; *************** function _I2C_MasterOpen *****************
 10223 ;; Defined at:
 10224 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      _Bool 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used: 1
 10244 ;; Hardware stack levels required when called: 4
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_I2C_Open
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text50
 10253  004E28                     __ptext50:
 10254                           	callstack 0
 10255  004E28                     _I2C_MasterOpen:
 10256                           	callstack 23
 10257  004E28                     
 10258                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 10259  004E28  BAC6               	btfsc	198,5,c	;volatile
 10260  004E2A  EF19  F027         	goto	u4651
 10261  004E2E  EF1B  F027         	goto	u4650
 10262  004E32                     u4651:
 10263  004E32  EF24  F027         	goto	l414
 10264  004E36                     u4650:
 10265  004E36                     
 10266                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 10267  004E36  0E00               	movlw	0
 10268  004E38  6EC7               	movwf	199,c	;volatile
 10269                           
 10270                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 10271  004E3A  0E08               	movlw	8
 10272  004E3C  6EC6               	movwf	198,c	;volatile
 10273                           
 10274                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 10275  004E3E  0E00               	movlw	0
 10276  004E40  6EC5               	movwf	197,c	;volatile
 10277                           
 10278                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x27;
 10279  004E42  0E27               	movlw	39
 10280  004E44  6EC8               	movwf	200,c	;volatile
 10281  004E46                     
 10282                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 10283  004E46  8AC6               	bsf	198,5,c	;volatile
 10284  004E48                     l414:
 10285  004E48  0012               	return		;funcret
 10286  004E4A                     __end_of_I2C_MasterOpen:
 10287                           	callstack 0
 10288                           
 10289 ;; *************** function _I2C_MasterWrite *****************
 10290 ;; Defined at:
 10291 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      enum E355
 10298 ;; Registers used:
 10299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;Total ram usage:        0 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 11
 10312 ;; This function calls:
 10313 ;;		_I2C_MasterOperation
 10314 ;; This function is called by:
 10315 ;;		_I2C_Read1ByteRegister
 10316 ;;		_I2C_Write1ByteRegister
 10317 ;;		_I2C_Read2ByteRegister
 10318 ;;		_I2C_Write2ByteRegister
 10319 ;;		_I2C_WriteNBytes
 10320 ;;		_I2C_ReadDataBlock
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text51
 10325  004F70                     __ptext51:
 10326                           	callstack 0
 10327  004F70                     _I2C_MasterWrite:
 10328                           	callstack 17
 10329  004F70                     
 10330                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 10331  004F70  0E00               	movlw	0
 10332  004F72  EC6D  F025         	call	_I2C_MasterOperation
 10333  004F76  0012               	return		;funcret
 10334  004F78                     __end_of_I2C_MasterWrite:
 10335                           	callstack 0
 10336                           
 10337 ;; *************** function _I2C_MasterOperation *****************
 10338 ;; Defined at:
 10339 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  read            1    wreg     _Bool 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  read            1   19[COMRAM] _Bool 
 10344 ;;  returnValue     1   20[COMRAM] enum E355
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      enum E355
 10347 ;; Registers used:
 10348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;Total ram usage:        2 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 10
 10361 ;; This function calls:
 10362 ;;		_I2C_MasterStart
 10363 ;;		_I2C_Poller
 10364 ;; This function is called by:
 10365 ;;		_I2C_MasterWrite
 10366 ;;		_I2C_MasterRead
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text52
 10371  004ADA                     __ptext52:
 10372                           	callstack 0
 10373  004ADA                     _I2C_MasterOperation:
 10374                           	callstack 17
 10375                           
 10376                           ;incstack = 0
 10377                           ;I2C_MasterOperation@read stored from wreg
 10378  004ADA  6E14               	movwf	I2C_MasterOperation@read^0,c
 10379  004ADC                     
 10380                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10381  004ADC  0E01               	movlw	1
 10382  004ADE  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10383  004AE0                     
 10384                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10385  004AE0  0100               	movlb	0	; () banked
 10386  004AE2  B3E3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10387  004AE4  EF76  F025         	goto	u4661
 10388  004AE8  EF78  F025         	goto	u4660
 10389  004AEC                     u4661:
 10390  004AEC  EF8D  F025         	goto	l5098
 10391  004AF0                     u4660:
 10392  004AF0                     
 10393                           ; BSR set to: 0
 10394                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10395  004AF0  83E3               	bsf	(_I2C_Status+35)& (0+255),1,b
 10396  004AF2                     
 10397                           ; BSR set to: 0
 10398                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10399  004AF2  0E00               	movlw	0
 10400  004AF4  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10401  004AF6                     
 10402                           ; BSR set to: 0
 10403                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10404  004AF6  5014               	movf	I2C_MasterOperation@read^0,w,c
 10405  004AF8  B4D8               	btfsc	status,2,c
 10406  004AFA  EF81  F025         	goto	u4671
 10407  004AFE  EF83  F025         	goto	u4670
 10408  004B02                     u4671:
 10409  004B02  EF87  F025         	goto	l5092
 10410  004B06                     u4670:
 10411  004B06                     
 10412                           ; BSR set to: 0
 10413                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10414  004B06  0E01               	movlw	1
 10415  004B08  6FE1               	movwf	(_I2C_Status+33)& (0+255),b
 10416                           
 10417                           ;mcc_generated_files/i2c_master.c: 235:         }
 10418  004B0A  EF89  F025         	goto	l5094
 10419  004B0E                     l5092:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10423  004B0E  0E02               	movlw	2
 10424  004B10  6FE1               	movwf	(_I2C_Status+33)& (0+255),b
 10425  004B12                     l5094:
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10429  004B12  ECF8  F027         	call	_I2C_MasterStart	;wreg free
 10430  004B16                     
 10431                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10432  004B16  EC25  F027         	call	_I2C_Poller	;wreg free
 10433  004B1A                     l5098:
 10434                           
 10435                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10436  004B1A  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10437  004B1C  0012               	return		;funcret
 10438  004B1E                     __end_of_I2C_MasterOperation:
 10439                           	callstack 0
 10440                           
 10441 ;; *************** function _I2C_Poller *****************
 10442 ;; Defined at:
 10443 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used: 1
 10463 ;; Hardware stack levels required when called: 9
 10464 ;; This function calls:
 10465 ;;		_I2C_MasterFsm
 10466 ;;		_I2C_MasterWaitForEvent
 10467 ;; This function is called by:
 10468 ;;		_I2C_MasterOperation
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text53
 10473  004E4A                     __ptext53:
 10474                           	callstack 0
 10475  004E4A                     _I2C_Poller:
 10476                           	callstack 17
 10477  004E4A                     
 10478                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10479  004E4A  EF2B  F027         	goto	l4514
 10480  004E4E                     l4510:
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10484  004E4E  EC6B  F027         	call	_I2C_MasterWaitForEvent	;wreg free
 10485  004E52                     
 10486                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10487  004E52  EC76  F023         	call	_I2C_MasterFsm	;wreg free
 10488  004E56                     l4514:
 10489                           
 10490                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10491  004E56  0100               	movlb	0	; () banked
 10492  004E58  B3E3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10493  004E5A  EF31  F027         	goto	u3641
 10494  004E5E  EF33  F027         	goto	u3640
 10495  004E62                     u3641:
 10496  004E62  EF27  F027         	goto	l4510
 10497  004E66                     u3640:
 10498  004E66                     
 10499                           ; BSR set to: 0
 10500  004E66  0012               	return		;funcret
 10501  004E68                     __end_of_I2C_Poller:
 10502                           	callstack 0
 10503                           
 10504 ;; *************** function _I2C_MasterWaitForEvent *****************
 10505 ;; Defined at:
 10506 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  1    wreg      void 
 10513 ;; Registers used:
 10514 ;;		None
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used: 1
 10526 ;; Hardware stack levels required when called: 4
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_I2C_Poller
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text54
 10535  004ED6                     __ptext54:
 10536                           	callstack 0
 10537  004ED6                     _I2C_MasterWaitForEvent:
 10538                           	callstack 21
 10539  004ED6                     l471:
 10540                           
 10541                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10542  004ED6  A69E               	btfss	158,3,c	;volatile
 10543  004ED8  EF70  F027         	goto	u3171
 10544  004EDC  EF72  F027         	goto	u3170
 10545  004EE0                     u3171:
 10546  004EE0  EF6B  F027         	goto	l471
 10547  004EE4                     u3170:
 10548  004EE4  0012               	return		;funcret
 10549  004EE6                     __end_of_I2C_MasterWaitForEvent:
 10550                           	callstack 0
 10551                           
 10552 ;; *************** function _I2C_MasterFsm *****************
 10553 ;; Defined at:
 10554 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;		None
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;		None
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;Total ram usage:        2 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 8
 10575 ;; This function calls:
 10576 ;;		_I2C_DO_ADDRESS_NACK
 10577 ;;		_I2C_DO_IDLE
 10578 ;;		_I2C_DO_RCEN
 10579 ;;		_I2C_DO_RESET
 10580 ;;		_I2C_DO_RX
 10581 ;;		_I2C_DO_RX_ACK
 10582 ;;		_I2C_DO_RX_NACK_RESTART
 10583 ;;		_I2C_DO_RX_NACK_STOP
 10584 ;;		_I2C_DO_SEND_ADR_READ
 10585 ;;		_I2C_DO_SEND_ADR_WRITE
 10586 ;;		_I2C_DO_SEND_RESTART
 10587 ;;		_I2C_DO_SEND_RESTART_READ
 10588 ;;		_I2C_DO_SEND_RESTART_WRITE
 10589 ;;		_I2C_DO_SEND_STOP
 10590 ;;		_I2C_DO_TX
 10591 ;;		_I2C_DO_TX_EMPTY
 10592 ;;		_I2C_MasterClearIrq
 10593 ;;		_I2C_MasterIsNack
 10594 ;; This function is called by:
 10595 ;;		_I2C_Poller
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text55
 10600  0046EC                     __ptext55:
 10601                           	callstack 0
 10602  0046EC                     _I2C_MasterFsm:
 10603                           	callstack 17
 10604  0046EC                     
 10605                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 10606  0046EC  ECFE  F027         	call	_I2C_MasterClearIrq	;wreg free
 10607  0046F0                     
 10608                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10609  0046F0  0100               	movlb	0	; () banked
 10610  0046F2  A1E3               	btfss	(_I2C_Status+35)& (0+255),0,b
 10611  0046F4  EF7E  F023         	goto	u3181
 10612  0046F8  EF80  F023         	goto	u3180
 10613  0046FC                     u3181:
 10614  0046FC  EF8D  F023         	goto	l4280
 10615  004700                     u3180:
 10616  004700                     
 10617                           ; BSR set to: 0
 10618  004700  EC61  F027         	call	_I2C_MasterIsNack	;wreg free
 10619  004704  0900               	iorlw	0
 10620  004706  B4D8               	btfsc	status,2,c
 10621  004708  EF88  F023         	goto	u3191
 10622  00470C  EF8A  F023         	goto	u3190
 10623  004710                     u3191:
 10624  004710  EF8D  F023         	goto	l4280
 10625  004714                     u3190:
 10626  004714                     
 10627                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10628  004714  0E0F               	movlw	15
 10629  004716  0100               	movlb	0	; () banked
 10630  004718  6FE1               	movwf	(_I2C_Status+33)& (0+255),b
 10631  00471A                     l4280:
 10632                           
 10633                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 10634  00471A  0100               	movlb	0	; () banked
 10635  00471C  51E1               	movf	(_I2C_Status+33)& (0+255),w,b
 10636  00471E  0D02               	mullw	2
 10637  004720  0E01               	movlw	low _i2c_fsmStateTable
 10638  004722  24F3               	addwf	243,w,c
 10639  004724  6EF6               	movwf	tblptrl,c
 10640  004726  0E10               	movlw	high _i2c_fsmStateTable
 10641  004728  20F4               	addwfc	244,w,c
 10642  00472A  6EF7               	movwf	tblptrh,c
 10643  00472C                     	if	1	;There are 3 active tblptr bytes
 10644  00472C  6AF8               	clrf	tblptru,c
 10645  00472E  0E00               	movlw	low (__mediumconst shr (0+16))
 10646  004730  22F8               	addwfc	tblptru,f,c
 10647  004732                     	endif
 10648  004732  0009               	tblrd		*+
 10649  004734  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 10650  004738  0009               	tblrd		*+
 10651  00473A  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 10652  00473E  D802               	call	u3208
 10653  004740  EFAB  F023         	goto	u3209
 10654  004744                     u3208:
 10655  004744  0005               	push	
 10656  004746  6EFA               	movwf	pclath,c
 10657  004748  5012               	movf	??_I2C_MasterFsm^0,w,c
 10658  00474A  6EFD               	movwf	tosl,c
 10659  00474C  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10660  00474E  6EFE               	movwf	tosh,c
 10661  004750  6AFF               	clrf	tosu,c
 10662  004752  50FA               	movf	pclath,w,c
 10663  004754  0012               	return		;indir
 10664  004756                     u3209:
 10665  004756  0100               	movlb	0	; () banked
 10666  004758  6FE1               	movwf	(_I2C_Status+33)& (0+255),b
 10667  00475A                     
 10668                           ; BSR set to: 0
 10669  00475A  0012               	return		;funcret
 10670  00475C                     __end_of_I2C_MasterFsm:
 10671                           	callstack 0
 10672                           
 10673 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10674 ;; Defined at:
 10675 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;		None
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      enum E3103
 10682 ;; Registers used:
 10683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;Total ram usage:        2 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 7
 10696 ;; This function calls:
 10697 ;;		Absolute function
 10698 ;;		_I2C_CallbackReturnReset
 10699 ;;		_I2C_CallbackReturnStop
 10700 ;;		_I2C_DO_SEND_RESTART
 10701 ;;		_I2C_DO_SEND_STOP
 10702 ;;		_rd1RegCompleteHandler
 10703 ;;		_rd2RegCompleteHandler
 10704 ;;		_rdBlkRegCompleteHandler
 10705 ;;		_wr1RegCompleteHandler
 10706 ;;		_wr2RegCompleteHandler
 10707 ;; This function is called by:
 10708 ;;		_I2C_MasterFsm
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text56
 10713  0047CA                     __ptext56:
 10714                           	callstack 0
 10715  0047CA                     _I2C_DO_ADDRESS_NACK:
 10716                           	callstack 17
 10717  0047CA                     
 10718                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 10719  0047CA  0100               	movlb	0	; () banked
 10720  0047CC  91E3               	bcf	(_I2C_Status+35)& (0+255),0,b
 10721  0047CE                     
 10722                           ; BSR set to: 0
 10723                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 10724  0047CE  0E02               	movlw	2
 10725  0047D0  6FE2               	movwf	(_I2C_Status+34)& (0+255),b
 10726                           
 10727                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10728  0047D2  EFF3  F023         	goto	l4250
 10729  0047D6                     l4240:
 10730                           
 10731                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 10732  0047D6  ECCC  F027         	call	_I2C_DO_SEND_RESTART	;wreg free
 10733  0047DA  EF17  F024         	goto	l393
 10734  0047DE                     l4244:
 10735                           
 10736                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 10737  0047DE  ECC8  F027         	call	_I2C_DO_SEND_STOP	;wreg free
 10738  0047E2  EF17  F024         	goto	l393
 10739  0047E6                     l4250:
 10740                           
 10741                           ; BSR set to: 0
 10742  0047E6  C0D0  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10743  0047EA  C0D1  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10744  0047EE  D802               	call	u3128
 10745  0047F0  EF03  F024         	goto	u3129
 10746  0047F4                     u3128:
 10747  0047F4  0005               	push	
 10748  0047F6  6EFA               	movwf	pclath,c
 10749  0047F8  51C4               	movf	(_I2C_Status+4)& (0+255),w,b
 10750  0047FA  6EFD               	movwf	tosl,c
 10751  0047FC  51C5               	movf	(_I2C_Status+5)& (0+255),w,b
 10752  0047FE  6EFE               	movwf	tosh,c
 10753  004800  6AFF               	clrf	tosu,c
 10754  004802  50FA               	movf	pclath,w,c
 10755  004804  0012               	return		;indir
 10756  004806                     u3129:
 10757  004806  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10758  004808  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10759                           
 10760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10761                           ; Switch size 1, requested type "simple"
 10762                           ; Number of cases is 1, Range of values is 0 to 0
 10763                           ; switch strategies available:
 10764                           ; Name         Instructions Cycles
 10765                           ; simple_byte            4     3 (average)
 10766                           ;	Chosen strategy is simple_byte
 10767  00480A  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10768  00480C  0A00               	xorlw	0	; case 0
 10769  00480E  B4D8               	btfsc	status,2,c
 10770  004810  EF0C  F024         	goto	l7660
 10771  004814  EFEF  F023         	goto	l4244
 10772  004818                     l7660:
 10773                           
 10774                           ; Switch size 1, requested type "simple"
 10775                           ; Number of cases is 2, Range of values is 2 to 3
 10776                           ; switch strategies available:
 10777                           ; Name         Instructions Cycles
 10778                           ; simple_byte            7     4 (average)
 10779                           ;	Chosen strategy is simple_byte
 10780  004818  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10781  00481A  0A02               	xorlw	2	; case 2
 10782  00481C  B4D8               	btfsc	status,2,c
 10783  00481E  EFEB  F023         	goto	l4240
 10784  004822  0A01               	xorlw	1	; case 3
 10785  004824  B4D8               	btfsc	status,2,c
 10786  004826  EFEB  F023         	goto	l4240
 10787  00482A  EFEF  F023         	goto	l4244
 10788  00482E                     l393:
 10789  00482E  0012               	return		;funcret
 10790  004830                     __end_of_I2C_DO_ADDRESS_NACK:
 10791                           	callstack 0
 10792                           
 10793 ;; *************** function _I2C_DO_RESET *****************
 10794 ;; Defined at:
 10795 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;		None
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      enum E3103
 10802 ;; Registers used:
 10803 ;;		wreg, status,2
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;Total ram usage:        0 bytes
 10814 ;; Hardware stack levels used: 1
 10815 ;; Hardware stack levels required when called: 4
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_I2C_MasterFsm
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           	psect	text57
 10824  004F06                     __ptext57:
 10825                           	callstack 0
 10826  004F06                     _I2C_DO_RESET:
 10827                           	callstack 20
 10828  004F06                     
 10829                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 10830  004F06  0100               	movlb	0	; () banked
 10831  004F08  93E3               	bcf	(_I2C_Status+35)& (0+255),1,b
 10832  004F0A                     
 10833                           ; BSR set to: 0
 10834                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 10835  004F0A  0E00               	movlw	0
 10836  004F0C  6FE2               	movwf	(_I2C_Status+34)& (0+255),b
 10837  004F0E                     
 10838                           ; BSR set to: 0
 10839                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 10840  004F0E  0E0E               	movlw	14
 10841  004F10                     
 10842                           ; BSR set to: 0
 10843  004F10  0012               	return		;funcret
 10844  004F12                     __end_of_I2C_DO_RESET:
 10845                           	callstack 0
 10846                           
 10847 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10848 ;; Defined at:
 10849 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;		None
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;		None
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      enum E3103
 10856 ;; Registers used:
 10857 ;;		wreg, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;Total ram usage:        0 bytes
 10868 ;; Hardware stack levels used: 1
 10869 ;; Hardware stack levels required when called: 5
 10870 ;; This function calls:
 10871 ;;		_I2C_MasterSendNack
 10872 ;; This function is called by:
 10873 ;;		_I2C_DO_RX
 10874 ;;		_I2C_MasterFsm
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text58
 10879  004F78                     __ptext58:
 10880                           	callstack 0
 10881  004F78                     _I2C_DO_RX_NACK_RESTART:
 10882                           	callstack 19
 10883  004F78                     
 10884                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 10885  004F78  ECDF  F027         	call	_I2C_MasterSendNack	;wreg free
 10886  004F7C                     
 10887                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 10888  004F7C  0E09               	movlw	9
 10889  004F7E  0012               	return		;funcret
 10890  004F80                     __end_of_I2C_DO_RX_NACK_RESTART:
 10891                           	callstack 0
 10892                           
 10893 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10894 ;; Defined at:
 10895 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;		None
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;		None
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  1    wreg      enum E3103
 10902 ;; Registers used:
 10903 ;;		wreg, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;Total ram usage:        0 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; Hardware stack levels required when called: 5
 10916 ;; This function calls:
 10917 ;;		_I2C_MasterSendNack
 10918 ;; This function is called by:
 10919 ;;		_I2C_DO_RX
 10920 ;;		_I2C_MasterFsm
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text59
 10925  004F80                     __ptext59:
 10926                           	callstack 0
 10927  004F80                     _I2C_DO_RX_NACK_STOP:
 10928                           	callstack 19
 10929  004F80                     
 10930                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10931  004F80  ECDF  F027         	call	_I2C_MasterSendNack	;wreg free
 10932  004F84                     
 10933                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10934  004F84  0E0A               	movlw	10
 10935  004F86  0012               	return		;funcret
 10936  004F88                     __end_of_I2C_DO_RX_NACK_STOP:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _I2C_DO_RX_ACK *****************
 10940 ;; Defined at:
 10941 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;		None
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      enum E3103
 10948 ;; Registers used:
 10949 ;;		wreg, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;Total ram usage:        0 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 5
 10962 ;; This function calls:
 10963 ;;		_I2C_MasterSendAck
 10964 ;; This function is called by:
 10965 ;;		_I2C_MasterFsm
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text60
 10970  004F88                     __ptext60:
 10971                           	callstack 0
 10972  004F88                     _I2C_DO_RX_ACK:
 10973                           	callstack 19
 10974  004F88                     
 10975                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10976  004F88  ECDC  F027         	call	_I2C_MasterSendAck	;wreg free
 10977  004F8C                     
 10978                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10979  004F8C  0E05               	movlw	5
 10980  004F8E  0012               	return		;funcret
 10981  004F90                     __end_of_I2C_DO_RX_ACK:
 10982                           	callstack 0
 10983                           
 10984 ;; *************** function _I2C_DO_SEND_STOP *****************
 10985 ;; Defined at:
 10986 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      enum E3103
 10993 ;; Registers used:
 10994 ;;		wreg, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;Total ram usage:        0 bytes
 11005 ;; Hardware stack levels used: 1
 11006 ;; Hardware stack levels required when called: 5
 11007 ;; This function calls:
 11008 ;;		_I2C_MasterStop
 11009 ;; This function is called by:
 11010 ;;		_I2C_DO_TX
 11011 ;;		_I2C_DO_TX_EMPTY
 11012 ;;		_I2C_DO_ADDRESS_NACK
 11013 ;;		_I2C_MasterFsm
 11014 ;; This function uses a non-reentrant model
 11015 ;;
 11016                           
 11017                           	psect	text61
 11018  004F90                     __ptext61:
 11019                           	callstack 0
 11020  004F90                     _I2C_DO_SEND_STOP:
 11021                           	callstack 18
 11022  004F90                     
 11023                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 11024  004F90  ECF4  F027         	call	_I2C_MasterStop	;wreg free
 11025  004F94                     
 11026                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 11027  004F94  0E00               	movlw	0
 11028  004F96  0012               	return		;funcret
 11029  004F98                     __end_of_I2C_DO_SEND_STOP:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _I2C_DO_SEND_RESTART *****************
 11033 ;; Defined at:
 11034 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      enum E3103
 11041 ;; Registers used:
 11042 ;;		wreg, cstack
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used: 1
 11054 ;; Hardware stack levels required when called: 5
 11055 ;; This function calls:
 11056 ;;		_I2C_MasterEnableRestart
 11057 ;; This function is called by:
 11058 ;;		_I2C_DO_TX_EMPTY
 11059 ;;		_I2C_DO_ADDRESS_NACK
 11060 ;;		_I2C_MasterFsm
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text62
 11065  004F98                     __ptext62:
 11066                           	callstack 0
 11067  004F98                     _I2C_DO_SEND_RESTART:
 11068                           	callstack 18
 11069  004F98                     
 11070                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 11071  004F98  ECF6  F027         	call	_I2C_MasterEnableRestart	;wreg free
 11072  004F9C                     
 11073                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 11074  004F9C  0E01               	movlw	1
 11075  004F9E  0012               	return		;funcret
 11076  004FA0                     __end_of_I2C_DO_SEND_RESTART:
 11077                           	callstack 0
 11078                           
 11079 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11080 ;; Defined at:
 11081 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;		None
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      enum E3103
 11088 ;; Registers used:
 11089 ;;		wreg, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;Total ram usage:        0 bytes
 11100 ;; Hardware stack levels used: 1
 11101 ;; Hardware stack levels required when called: 5
 11102 ;; This function calls:
 11103 ;;		_I2C_MasterEnableRestart
 11104 ;; This function is called by:
 11105 ;;		_I2C_DO_TX
 11106 ;;		_I2C_MasterFsm
 11107 ;; This function uses a non-reentrant model
 11108 ;;
 11109                           
 11110                           	psect	text63
 11111  004FA0                     __ptext63:
 11112                           	callstack 0
 11113  004FA0                     _I2C_DO_SEND_RESTART_WRITE:
 11114                           	callstack 18
 11115  004FA0                     
 11116                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 11117  004FA0  ECF6  F027         	call	_I2C_MasterEnableRestart	;wreg free
 11118  004FA4                     
 11119                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 11120  004FA4  0E02               	movlw	2
 11121  004FA6  0012               	return		;funcret
 11122  004FA8                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11123                           	callstack 0
 11124                           
 11125 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11126 ;; Defined at:
 11127 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;		None
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;		None
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      enum E3103
 11134 ;; Registers used:
 11135 ;;		wreg, cstack
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;Total ram usage:        0 bytes
 11146 ;; Hardware stack levels used: 1
 11147 ;; Hardware stack levels required when called: 5
 11148 ;; This function calls:
 11149 ;;		_I2C_MasterEnableRestart
 11150 ;; This function is called by:
 11151 ;;		_I2C_DO_TX
 11152 ;;		_I2C_MasterFsm
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text64
 11157  004FA8                     __ptext64:
 11158                           	callstack 0
 11159  004FA8                     _I2C_DO_SEND_RESTART_READ:
 11160                           	callstack 18
 11161  004FA8                     
 11162                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11163  004FA8  ECF6  F027         	call	_I2C_MasterEnableRestart	;wreg free
 11164  004FAC                     
 11165                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11166  004FAC  0E01               	movlw	1
 11167  004FAE  0012               	return		;funcret
 11168  004FB0                     __end_of_I2C_DO_SEND_RESTART_READ:
 11169                           	callstack 0
 11170                           
 11171 ;; *************** function _I2C_DO_RCEN *****************
 11172 ;; Defined at:
 11173 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;		None
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;		None
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      enum E3103
 11180 ;; Registers used:
 11181 ;;		wreg, cstack
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;Total ram usage:        0 bytes
 11192 ;; Hardware stack levels used: 1
 11193 ;; Hardware stack levels required when called: 5
 11194 ;; This function calls:
 11195 ;;		_I2C_MasterStartRx
 11196 ;; This function is called by:
 11197 ;;		_I2C_MasterFsm
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text65
 11202  004F12                     __ptext65:
 11203                           	callstack 0
 11204  004F12                     _I2C_DO_RCEN:
 11205                           	callstack 19
 11206  004F12                     
 11207                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11208  004F12  0100               	movlb	0	; () banked
 11209  004F14  91E3               	bcf	(_I2C_Status+35)& (0+255),0,b
 11210  004F16                     
 11211                           ; BSR set to: 0
 11212                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11213  004F16  ECEE  F027         	call	_I2C_MasterStartRx	;wreg free
 11214  004F1A                     
 11215                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11216  004F1A  0E04               	movlw	4
 11217  004F1C  0012               	return		;funcret
 11218  004F1E                     __end_of_I2C_DO_RCEN:
 11219                           	callstack 0
 11220                           
 11221 ;; *************** function _I2C_DO_RX *****************
 11222 ;; Defined at:
 11223 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;		None
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;		None
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      enum E3103
 11230 ;; Registers used:
 11231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;Total ram usage:        2 bytes
 11242 ;; Hardware stack levels used: 1
 11243 ;; Hardware stack levels required when called: 7
 11244 ;; This function calls:
 11245 ;;		Absolute function
 11246 ;;		_I2C_CallbackReturnReset
 11247 ;;		_I2C_CallbackReturnStop
 11248 ;;		_I2C_DO_RX_NACK_RESTART
 11249 ;;		_I2C_DO_RX_NACK_STOP
 11250 ;;		_I2C_MasterGetRxData
 11251 ;;		_I2C_MasterSendAck
 11252 ;;		_rd1RegCompleteHandler
 11253 ;;		_rd2RegCompleteHandler
 11254 ;;		_rdBlkRegCompleteHandler
 11255 ;;		_wr1RegCompleteHandler
 11256 ;;		_wr2RegCompleteHandler
 11257 ;; This function is called by:
 11258 ;;		_I2C_MasterFsm
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text66
 11263  0042C6                     __ptext66:
 11264                           	callstack 0
 11265  0042C6                     _I2C_DO_RX:
 11266                           	callstack 17
 11267  0042C6                     
 11268                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11269  0042C6  ECEC  F027         	call	_I2C_MasterGetRxData	;wreg free
 11270  0042CA  C0DD  FFD9         	movff	_I2C_Status+29,fsr2l
 11271  0042CE  C0DE  FFDA         	movff	_I2C_Status+30,fsr2h
 11272  0042D2  6EDF               	movwf	indf2,c
 11273  0042D4  0100               	movlb	0	; () banked
 11274  0042D6  4BDD               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11275  0042D8  2BDE               	incf	(_I2C_Status+30)& (0+255),f,b
 11276  0042DA                     
 11277                           ; BSR set to: 0
 11278                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11279  0042DA  07DF               	decf	(_I2C_Status+31)& (0+255),f,b
 11280  0042DC  A0D8               	btfss	status,0,c
 11281  0042DE  07E0               	decf	(_I2C_Status+32)& (0+255),f,b
 11282  0042E0  51DF               	movf	(_I2C_Status+31)& (0+255),w,b
 11283  0042E2  11E0               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11284  0042E4  B4D8               	btfsc	status,2,c
 11285  0042E6  EF77  F021         	goto	u3091
 11286  0042EA  EF79  F021         	goto	u3090
 11287  0042EE                     u3091:
 11288  0042EE  EF7E  F021         	goto	l330
 11289  0042F2                     u3090:
 11290  0042F2                     
 11291                           ; BSR set to: 0
 11292                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11293  0042F2  ECDC  F027         	call	_I2C_MasterSendAck	;wreg free
 11294  0042F6                     
 11295                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11296  0042F6  0E05               	movlw	5
 11297  0042F8  EFB5  F021         	goto	l331
 11298  0042FC                     l330:
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11302  0042FC  87E3               	bsf	(_I2C_Status+35)& (0+255),3,b
 11303                           
 11304                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11305  0042FE  EF89  F021         	goto	l4184
 11306  004302                     l4174:
 11307                           
 11308                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11309  004302  ECBC  F027         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11310  004306  EFB5  F021         	goto	l331
 11311  00430A                     l4178:
 11312                           
 11313                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11314  00430A  ECC0  F027         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11315  00430E  EFB5  F021         	goto	l331
 11316  004312                     l4184:
 11317                           
 11318                           ; BSR set to: 0
 11319  004312  C0CC  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11320  004316  C0CD  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11321  00431A  D802               	call	u3108
 11322  00431C  EF99  F021         	goto	u3109
 11323  004320                     u3108:
 11324  004320  0005               	push	
 11325  004322  6EFA               	movwf	pclath,c
 11326  004324  51C0               	movf	_I2C_Status& (0+255),w,b
 11327  004326  6EFD               	movwf	tosl,c
 11328  004328  51C1               	movf	(_I2C_Status+1)& (0+255),w,b
 11329  00432A  6EFE               	movwf	tosh,c
 11330  00432C  6AFF               	clrf	tosu,c
 11331  00432E  50FA               	movf	pclath,w,c
 11332  004330  0012               	return		;indir
 11333  004332                     u3109:
 11334  004332  6E10               	movwf	??_I2C_DO_RX^0,c
 11335  004334  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 11336                           
 11337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11338                           ; Switch size 1, requested type "simple"
 11339                           ; Number of cases is 1, Range of values is 0 to 0
 11340                           ; switch strategies available:
 11341                           ; Name         Instructions Cycles
 11342                           ; simple_byte            4     3 (average)
 11343                           ;	Chosen strategy is simple_byte
 11344  004336  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 11345  004338  0A00               	xorlw	0	; case 0
 11346  00433A  B4D8               	btfsc	status,2,c
 11347  00433C  EFA2  F021         	goto	l7662
 11348  004340  EF85  F021         	goto	l4178
 11349  004344                     l7662:
 11350                           
 11351                           ; Switch size 1, requested type "simple"
 11352                           ; Number of cases is 4, Range of values is 1 to 4
 11353                           ; switch strategies available:
 11354                           ; Name         Instructions Cycles
 11355                           ; simple_byte           13     7 (average)
 11356                           ;	Chosen strategy is simple_byte
 11357  004344  5010               	movf	??_I2C_DO_RX^0,w,c
 11358  004346  0A01               	xorlw	1	; case 1
 11359  004348  B4D8               	btfsc	status,2,c
 11360  00434A  EF85  F021         	goto	l4178
 11361  00434E  0A03               	xorlw	3	; case 2
 11362  004350  B4D8               	btfsc	status,2,c
 11363  004352  EF81  F021         	goto	l4174
 11364  004356  0A01               	xorlw	1	; case 3
 11365  004358  B4D8               	btfsc	status,2,c
 11366  00435A  EF81  F021         	goto	l4174
 11367  00435E  0A07               	xorlw	7	; case 4
 11368  004360  B4D8               	btfsc	status,2,c
 11369  004362  EF85  F021         	goto	l4178
 11370  004366  EF85  F021         	goto	l4178
 11371  00436A                     l331:
 11372  00436A  0012               	return		;funcret
 11373  00436C                     __end_of_I2C_DO_RX:
 11374                           	callstack 0
 11375                           
 11376 ;; *************** function _I2C_DO_TX *****************
 11377 ;; Defined at:
 11378 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;		None
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      enum E3103
 11385 ;; Registers used:
 11386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11387 ;; Tracked objects:
 11388 ;;		On entry : 0/0
 11389 ;;		On exit  : 0/0
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;Total ram usage:        2 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 7
 11399 ;; This function calls:
 11400 ;;		Absolute function
 11401 ;;		_I2C_CallbackReturnReset
 11402 ;;		_I2C_CallbackReturnStop
 11403 ;;		_I2C_DO_SEND_RESTART_READ
 11404 ;;		_I2C_DO_SEND_RESTART_WRITE
 11405 ;;		_I2C_DO_SEND_STOP
 11406 ;;		_I2C_MasterIsNack
 11407 ;;		_I2C_MasterSendTxData
 11408 ;;		_rd1RegCompleteHandler
 11409 ;;		_rd2RegCompleteHandler
 11410 ;;		_rdBlkRegCompleteHandler
 11411 ;;		_wr1RegCompleteHandler
 11412 ;;		_wr2RegCompleteHandler
 11413 ;; This function is called by:
 11414 ;;		_I2C_MasterFsm
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text67
 11419  003F3A                     __ptext67:
 11420                           	callstack 0
 11421  003F3A                     _I2C_DO_TX:
 11422                           	callstack 17
 11423  003F3A                     
 11424                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11425  003F3A  EC61  F027         	call	_I2C_MasterIsNack	;wreg free
 11426  003F3E  0900               	iorlw	0
 11427  003F40  B4D8               	btfsc	status,2,c
 11428  003F42  EFA5  F01F         	goto	u3061
 11429  003F46  EFA7  F01F         	goto	u3060
 11430  003F4A                     u3061:
 11431  003F4A  EFE2  F01F         	goto	l314
 11432  003F4E                     u3060:
 11433  003F4E  EFB5  F01F         	goto	l4144
 11434  003F52                     l4130:
 11435                           
 11436                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11437  003F52  ECD4  F027         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11438  003F56  EFFE  F01F         	goto	l317
 11439  003F5A                     l4134:
 11440                           
 11441                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11442  003F5A  ECD0  F027         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11443  003F5E  EFFE  F01F         	goto	l317
 11444  003F62                     l4138:
 11445                           
 11446                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11447  003F62  ECC8  F027         	call	_I2C_DO_SEND_STOP	;wreg free
 11448  003F66  EFFE  F01F         	goto	l317
 11449  003F6A                     l4144:
 11450  003F6A  C0D2  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11451  003F6E  C0D3  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11452  003F72  D802               	call	u3078
 11453  003F74  EFC6  F01F         	goto	u3079
 11454  003F78                     u3078:
 11455  003F78  0005               	push	
 11456  003F7A  6EFA               	movwf	pclath,c
 11457  003F7C  0100               	movlb	0	; () banked
 11458  003F7E  51C6               	movf	(_I2C_Status+6)& (0+255),w,b
 11459  003F80  6EFD               	movwf	tosl,c
 11460  003F82  51C7               	movf	(_I2C_Status+7)& (0+255),w,b
 11461  003F84  6EFE               	movwf	tosh,c
 11462  003F86  6AFF               	clrf	tosu,c
 11463  003F88  50FA               	movf	pclath,w,c
 11464  003F8A  0012               	return		;indir
 11465  003F8C                     u3079:
 11466  003F8C  6E10               	movwf	??_I2C_DO_TX^0,c
 11467  003F8E  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11468                           
 11469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11470                           ; Switch size 1, requested type "simple"
 11471                           ; Number of cases is 1, Range of values is 0 to 0
 11472                           ; switch strategies available:
 11473                           ; Name         Instructions Cycles
 11474                           ; simple_byte            4     3 (average)
 11475                           ;	Chosen strategy is simple_byte
 11476  003F90  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11477  003F92  0A00               	xorlw	0	; case 0
 11478  003F94  B4D8               	btfsc	status,2,c
 11479  003F96  EFCF  F01F         	goto	l7664
 11480  003F9A  EFB1  F01F         	goto	l4138
 11481  003F9E                     l7664:
 11482                           
 11483                           ; Switch size 1, requested type "simple"
 11484                           ; Number of cases is 4, Range of values is 1 to 4
 11485                           ; switch strategies available:
 11486                           ; Name         Instructions Cycles
 11487                           ; simple_byte           13     7 (average)
 11488                           ;	Chosen strategy is simple_byte
 11489  003F9E  5010               	movf	??_I2C_DO_TX^0,w,c
 11490  003FA0  0A01               	xorlw	1	; case 1
 11491  003FA2  B4D8               	btfsc	status,2,c
 11492  003FA4  EFB1  F01F         	goto	l4138
 11493  003FA8  0A03               	xorlw	3	; case 2
 11494  003FAA  B4D8               	btfsc	status,2,c
 11495  003FAC  EFA9  F01F         	goto	l4130
 11496  003FB0  0A01               	xorlw	1	; case 3
 11497  003FB2  B4D8               	btfsc	status,2,c
 11498  003FB4  EFAD  F01F         	goto	l4134
 11499  003FB8  0A07               	xorlw	7	; case 4
 11500  003FBA  B4D8               	btfsc	status,2,c
 11501  003FBC  EFB1  F01F         	goto	l4138
 11502  003FC0  EFB1  F01F         	goto	l4138
 11503  003FC4                     l314:
 11504                           
 11505                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11506  003FC4  0100               	movlb	0	; () banked
 11507  003FC6  91E3               	bcf	(_I2C_Status+35)& (0+255),0,b
 11508  003FC8                     
 11509                           ; BSR set to: 0
 11510                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11511  003FC8  C0DD  FFD9         	movff	_I2C_Status+29,fsr2l
 11512  003FCC  C0DE  FFDA         	movff	_I2C_Status+30,fsr2h
 11513  003FD0  4BDD               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11514  003FD2  2BDE               	incf	(_I2C_Status+30)& (0+255),f,b
 11515  003FD4  50DF               	movf	indf2,w,c
 11516  003FD6  ECD8  F027         	call	_I2C_MasterSendTxData
 11517  003FDA                     
 11518                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11519  003FDA  0100               	movlb	0	; () banked
 11520  003FDC  07DF               	decf	(_I2C_Status+31)& (0+255),f,b
 11521  003FDE  A0D8               	btfss	status,0,c
 11522  003FE0  07E0               	decf	(_I2C_Status+32)& (0+255),f,b
 11523  003FE2  51DF               	movf	(_I2C_Status+31)& (0+255),w,b
 11524  003FE4  11E0               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11525  003FE6  A4D8               	btfss	status,2,c
 11526  003FE8  EFF8  F01F         	goto	u3081
 11527  003FEC  EFFA  F01F         	goto	u3080
 11528  003FF0                     u3081:
 11529  003FF0  EFFD  F01F         	goto	l4152
 11530  003FF4                     u3080:
 11531  003FF4                     
 11532                           ; BSR set to: 0
 11533  003FF4  0E06               	movlw	6
 11534  003FF6  EFFE  F01F         	goto	l317
 11535  003FFA                     l4152:
 11536                           
 11537                           ; BSR set to: 0
 11538  003FFA  0E03               	movlw	3
 11539  003FFC                     l317:
 11540  003FFC  0012               	return		;funcret
 11541  003FFE                     __end_of_I2C_DO_TX:
 11542                           	callstack 0
 11543                           
 11544 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11545 ;; Defined at:
 11546 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;		None
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;		None
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      enum E3103
 11553 ;; Registers used:
 11554 ;;		wreg, status,2, status,0, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;Total ram usage:        0 bytes
 11565 ;; Hardware stack levels used: 1
 11566 ;; Hardware stack levels required when called: 5
 11567 ;; This function calls:
 11568 ;;		_I2C_MasterSendTxData
 11569 ;; This function is called by:
 11570 ;;		_I2C_MasterFsm
 11571 ;; This function uses a non-reentrant model
 11572 ;;
 11573                           
 11574                           	psect	text68
 11575  004EE6                     __ptext68:
 11576                           	callstack 0
 11577  004EE6                     _I2C_DO_SEND_ADR_WRITE:
 11578                           	callstack 19
 11579  004EE6                     
 11580                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 11581  004EE6  0100               	movlb	0	; () banked
 11582  004EE8  81E3               	bsf	(_I2C_Status+35)& (0+255),0,b
 11583  004EEA                     
 11584                           ; BSR set to: 0
 11585                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 11586  004EEA  51DC               	movf	(_I2C_Status+28)& (0+255),w,b
 11587  004EEC  25DC               	addwf	(_I2C_Status+28)& (0+255),w,b
 11588  004EEE  ECD8  F027         	call	_I2C_MasterSendTxData
 11589  004EF2                     
 11590                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 11591  004EF2  0E03               	movlw	3
 11592  004EF4  0012               	return		;funcret
 11593  004EF6                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11594                           	callstack 0
 11595                           
 11596 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11597 ;; Defined at:
 11598 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;		None
 11601 ;; Auto vars:     Size  Location     Type
 11602 ;;		None
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      enum E3103
 11605 ;; Registers used:
 11606 ;;		wreg, status,0, cstack
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11616 ;;Total ram usage:        0 bytes
 11617 ;; Hardware stack levels used: 1
 11618 ;; Hardware stack levels required when called: 5
 11619 ;; This function calls:
 11620 ;;		_I2C_MasterSendTxData
 11621 ;; This function is called by:
 11622 ;;		_I2C_MasterFsm
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text69
 11627  004EF6                     __ptext69:
 11628                           	callstack 0
 11629  004EF6                     _I2C_DO_SEND_ADR_READ:
 11630                           	callstack 19
 11631  004EF6                     
 11632                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 11633  004EF6  0100               	movlb	0	; () banked
 11634  004EF8  81E3               	bsf	(_I2C_Status+35)& (0+255),0,b
 11635  004EFA                     
 11636                           ; BSR set to: 0
 11637                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 11638  004EFA  80D8               	bsf	status,0,c
 11639  004EFC  35DC               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11640  004EFE  ECD8  F027         	call	_I2C_MasterSendTxData
 11641  004F02                     
 11642                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 11643  004F02  0E05               	movlw	5
 11644  004F04  0012               	return		;funcret
 11645  004F06                     __end_of_I2C_DO_SEND_ADR_READ:
 11646                           	callstack 0
 11647                           
 11648 ;; *************** function _I2C_DO_IDLE *****************
 11649 ;; Defined at:
 11650 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;		None
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      enum E3103
 11657 ;; Registers used:
 11658 ;;		wreg, status,2
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;Total ram usage:        0 bytes
 11669 ;; Hardware stack levels used: 1
 11670 ;; Hardware stack levels required when called: 4
 11671 ;; This function calls:
 11672 ;;		Nothing
 11673 ;; This function is called by:
 11674 ;;		_I2C_MasterFsm
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text70
 11679  004F1E                     __ptext70:
 11680                           	callstack 0
 11681  004F1E                     _I2C_DO_IDLE:
 11682                           	callstack 20
 11683  004F1E                     
 11684                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 11685  004F1E  0100               	movlb	0	; () banked
 11686  004F20  93E3               	bcf	(_I2C_Status+35)& (0+255),1,b
 11687  004F22                     
 11688                           ; BSR set to: 0
 11689                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 11690  004F22  0E00               	movlw	0
 11691  004F24  6FE2               	movwf	(_I2C_Status+34)& (0+255),b
 11692  004F26                     
 11693                           ; BSR set to: 0
 11694                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 11695  004F26  0E0E               	movlw	14
 11696  004F28                     
 11697                           ; BSR set to: 0
 11698  004F28  0012               	return		;funcret
 11699  004F2A                     __end_of_I2C_DO_IDLE:
 11700                           	callstack 0
 11701                           
 11702 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11703 ;; Defined at:
 11704 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1    wreg      enum E3103
 11711 ;; Registers used:
 11712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;Total ram usage:        2 bytes
 11723 ;; Hardware stack levels used: 1
 11724 ;; Hardware stack levels required when called: 7
 11725 ;; This function calls:
 11726 ;;		Absolute function
 11727 ;;		_I2C_CallbackReturnReset
 11728 ;;		_I2C_CallbackReturnStop
 11729 ;;		_I2C_DO_SEND_RESTART
 11730 ;;		_I2C_DO_SEND_STOP
 11731 ;;		_I2C_MasterSetIrq
 11732 ;;		_rd1RegCompleteHandler
 11733 ;;		_rd2RegCompleteHandler
 11734 ;;		_rdBlkRegCompleteHandler
 11735 ;;		_wr1RegCompleteHandler
 11736 ;;		_wr2RegCompleteHandler
 11737 ;; This function is called by:
 11738 ;;		_I2C_MasterFsm
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text71
 11743  00450C                     __ptext71:
 11744                           	callstack 0
 11745  00450C                     _I2C_DO_TX_EMPTY:
 11746                           	callstack 17
 11747  00450C                     
 11748                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 11749  00450C  0100               	movlb	0	; () banked
 11750  00450E  87E3               	bsf	(_I2C_Status+35)& (0+255),3,b
 11751                           
 11752                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11753  004510  EF97  F022         	goto	l4216
 11754  004514                     l4200:
 11755                           
 11756                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 11757  004514  ECCC  F027         	call	_I2C_DO_SEND_RESTART	;wreg free
 11758  004518  EFC3  F022         	goto	l348
 11759  00451C                     l4204:
 11760                           
 11761                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 11762  00451C  ECEA  F027         	call	_I2C_MasterSetIrq	;wreg free
 11763  004520                     
 11764                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 11765  004520  0E03               	movlw	3
 11766  004522  EFC3  F022         	goto	l348
 11767  004526                     l4210:
 11768                           
 11769                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 11770  004526  ECC8  F027         	call	_I2C_DO_SEND_STOP	;wreg free
 11771  00452A  EFC3  F022         	goto	l348
 11772  00452E                     l4216:
 11773                           
 11774                           ; BSR set to: 0
 11775  00452E  C0CC  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11776  004532  C0CD  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11777  004536  D802               	call	u3118
 11778  004538  EFA7  F022         	goto	u3119
 11779  00453C                     u3118:
 11780  00453C  0005               	push	
 11781  00453E  6EFA               	movwf	pclath,c
 11782  004540  51C0               	movf	_I2C_Status& (0+255),w,b
 11783  004542  6EFD               	movwf	tosl,c
 11784  004544  51C1               	movf	(_I2C_Status+1)& (0+255),w,b
 11785  004546  6EFE               	movwf	tosh,c
 11786  004548  6AFF               	clrf	tosu,c
 11787  00454A  50FA               	movf	pclath,w,c
 11788  00454C  0012               	return		;indir
 11789  00454E                     u3119:
 11790  00454E  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11791  004550  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11792                           
 11793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11794                           ; Switch size 1, requested type "simple"
 11795                           ; Number of cases is 1, Range of values is 0 to 0
 11796                           ; switch strategies available:
 11797                           ; Name         Instructions Cycles
 11798                           ; simple_byte            4     3 (average)
 11799                           ;	Chosen strategy is simple_byte
 11800  004552  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11801  004554  0A00               	xorlw	0	; case 0
 11802  004556  B4D8               	btfsc	status,2,c
 11803  004558  EFB0  F022         	goto	l7666
 11804  00455C  EF93  F022         	goto	l4210
 11805  004560                     l7666:
 11806                           
 11807                           ; Switch size 1, requested type "simple"
 11808                           ; Number of cases is 4, Range of values is 1 to 4
 11809                           ; switch strategies available:
 11810                           ; Name         Instructions Cycles
 11811                           ; simple_byte           13     7 (average)
 11812                           ;	Chosen strategy is simple_byte
 11813  004560  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11814  004562  0A01               	xorlw	1	; case 1
 11815  004564  B4D8               	btfsc	status,2,c
 11816  004566  EF93  F022         	goto	l4210
 11817  00456A  0A03               	xorlw	3	; case 2
 11818  00456C  B4D8               	btfsc	status,2,c
 11819  00456E  EF8A  F022         	goto	l4200
 11820  004572  0A01               	xorlw	1	; case 3
 11821  004574  B4D8               	btfsc	status,2,c
 11822  004576  EF8A  F022         	goto	l4200
 11823  00457A  0A07               	xorlw	7	; case 4
 11824  00457C  B4D8               	btfsc	status,2,c
 11825  00457E  EF8E  F022         	goto	l4204
 11826  004582  EF93  F022         	goto	l4210
 11827  004586                     l348:
 11828  004586  0012               	return		;funcret
 11829  004588                     __end_of_I2C_DO_TX_EMPTY:
 11830                           	callstack 0
 11831                           
 11832 ;; *************** function _I2C_MasterSetIrq *****************
 11833 ;; Defined at:
 11834 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;		None
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;		None
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  1    wreg      void 
 11841 ;; Registers used:
 11842 ;;		None
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;Total ram usage:        0 bytes
 11853 ;; Hardware stack levels used: 1
 11854 ;; Hardware stack levels required when called: 4
 11855 ;; This function calls:
 11856 ;;		Nothing
 11857 ;; This function is called by:
 11858 ;;		_I2C_DO_TX_EMPTY
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           	psect	text72
 11863  004FD4                     __ptext72:
 11864                           	callstack 0
 11865  004FD4                     _I2C_MasterSetIrq:
 11866                           	callstack 19
 11867  004FD4                     
 11868                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 11869  004FD4  869E               	bsf	158,3,c	;volatile
 11870  004FD6  0012               	return		;funcret
 11871  004FD8                     __end_of_I2C_MasterSetIrq:
 11872                           	callstack 0
 11873                           
 11874 ;; *************** function _I2C_MasterIsNack *****************
 11875 ;; Defined at:
 11876 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      _Bool 
 11883 ;; Registers used:
 11884 ;;		wreg
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 4
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_I2C_MasterFsm
 11901 ;;		_I2C_DO_TX
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text73
 11906  004EC2                     __ptext73:
 11907                           	callstack 0
 11908  004EC2                     _I2C_MasterIsNack:
 11909                           	callstack 20
 11910  004EC2                     
 11911                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 11912  004EC2  BCC5               	btfsc	197,6,c	;volatile
 11913  004EC4  EF66  F027         	goto	u3051
 11914  004EC8  EF69  F027         	goto	u3050
 11915  004ECC                     u3051:
 11916  004ECC  0E01               	movlw	1
 11917  004ECE  EF6A  F027         	goto	u3056
 11918  004ED2                     u3050:
 11919  004ED2  0E00               	movlw	0
 11920  004ED4                     u3056:
 11921  004ED4  0012               	return		;funcret
 11922  004ED6                     __end_of_I2C_MasterIsNack:
 11923                           	callstack 0
 11924                           
 11925 ;; *************** function _I2C_MasterSendTxData *****************
 11926 ;; Defined at:
 11927 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  data            1    wreg     unsigned char 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  data            1    4[COMRAM] unsigned char 
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;Total ram usage:        1 bytes
 11946 ;; Hardware stack levels used: 1
 11947 ;; Hardware stack levels required when called: 4
 11948 ;; This function calls:
 11949 ;;		Nothing
 11950 ;; This function is called by:
 11951 ;;		_I2C_DO_SEND_ADR_READ
 11952 ;;		_I2C_DO_SEND_ADR_WRITE
 11953 ;;		_I2C_DO_TX
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text74
 11958  004FB0                     __ptext74:
 11959                           	callstack 0
 11960  004FB0                     _I2C_MasterSendTxData:
 11961                           	callstack 19
 11962                           
 11963                           ;incstack = 0
 11964                           ;I2C_MasterSendTxData@data stored from wreg
 11965  004FB0  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 11966  004FB2                     
 11967                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11968  004FB2  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11969  004FB6  0012               	return		;funcret
 11970  004FB8                     __end_of_I2C_MasterSendTxData:
 11971                           	callstack 0
 11972                           
 11973 ;; *************** function _I2C_MasterSendAck *****************
 11974 ;; Defined at:
 11975 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;		None
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      void 
 11982 ;; Registers used:
 11983 ;;		None
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11993 ;;Total ram usage:        0 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 4
 11996 ;; This function calls:
 11997 ;;		Nothing
 11998 ;; This function is called by:
 11999 ;;		_I2C_DO_RX
 12000 ;;		_I2C_DO_RX_ACK
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text75
 12005  004FB8                     __ptext75:
 12006                           	callstack 0
 12007  004FB8                     _I2C_MasterSendAck:
 12008                           	callstack 19
 12009  004FB8                     
 12010                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 12011  004FB8  9AC5               	bcf	197,5,c	;volatile
 12012                           
 12013                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 12014  004FBA  88C5               	bsf	197,4,c	;volatile
 12015  004FBC  0012               	return		;funcret
 12016  004FBE                     __end_of_I2C_MasterSendAck:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function _I2C_MasterGetRxData *****************
 12020 ;; Defined at:
 12021 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      unsigned char 
 12028 ;; Registers used:
 12029 ;;		wreg, status,2
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 4
 12042 ;; This function calls:
 12043 ;;		Nothing
 12044 ;; This function is called by:
 12045 ;;		_I2C_DO_RX
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           	psect	text76
 12050  004FD8                     __ptext76:
 12051                           	callstack 0
 12052  004FD8                     _I2C_MasterGetRxData:
 12053                           	callstack 19
 12054  004FD8                     
 12055                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 12056  004FD8  50C9               	movf	201,w,c	;volatile
 12057  004FDA  0012               	return		;funcret
 12058  004FDC                     __end_of_I2C_MasterGetRxData:
 12059                           	callstack 0
 12060                           
 12061 ;; *************** function _I2C_MasterSendNack *****************
 12062 ;; Defined at:
 12063 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		None
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;Total ram usage:        0 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 4
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_I2C_DO_RX_NACK_STOP
 12088 ;;		_I2C_DO_RX_NACK_RESTART
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           	psect	text77
 12093  004FBE                     __ptext77:
 12094                           	callstack 0
 12095  004FBE                     _I2C_MasterSendNack:
 12096                           	callstack 19
 12097  004FBE                     
 12098                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 12099  004FBE  8AC5               	bsf	197,5,c	;volatile
 12100                           
 12101                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 12102  004FC0  88C5               	bsf	197,4,c	;volatile
 12103  004FC2  0012               	return		;funcret
 12104  004FC4                     __end_of_I2C_MasterSendNack:
 12105                           	callstack 0
 12106                           
 12107 ;; *************** function _I2C_MasterStartRx *****************
 12108 ;; Defined at:
 12109 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;		None
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;		None
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  1    wreg      void 
 12116 ;; Registers used:
 12117 ;;		None
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/0
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;Total ram usage:        0 bytes
 12128 ;; Hardware stack levels used: 1
 12129 ;; Hardware stack levels required when called: 4
 12130 ;; This function calls:
 12131 ;;		Nothing
 12132 ;; This function is called by:
 12133 ;;		_I2C_DO_RCEN
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137                           	psect	text78
 12138  004FDC                     __ptext78:
 12139                           	callstack 0
 12140  004FDC                     _I2C_MasterStartRx:
 12141                           	callstack 19
 12142  004FDC                     
 12143                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 12144  004FDC  86C5               	bsf	197,3,c	;volatile
 12145  004FDE  0012               	return		;funcret
 12146  004FE0                     __end_of_I2C_MasterStartRx:
 12147                           	callstack 0
 12148                           
 12149 ;; *************** function _I2C_CallbackReturnReset *****************
 12150 ;; Defined at:
 12151 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  funPtr          2   13[COMRAM] PTR void 
 12154 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12155 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;		None
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      enum E360
 12160 ;; Registers used:
 12161 ;;		wreg
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;Total ram usage:        2 bytes
 12172 ;; Hardware stack levels used: 1
 12173 ;; Hardware stack levels required when called: 4
 12174 ;; This function calls:
 12175 ;;		Nothing
 12176 ;; This function is called by:
 12177 ;;		_I2C_Open
 12178 ;;		_I2C_DO_TX
 12179 ;;		_I2C_DO_RX
 12180 ;;		_I2C_DO_TX_EMPTY
 12181 ;;		_I2C_DO_ADDRESS_NACK
 12182 ;;		_I2C_DO_RX_EMPTY
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text79
 12187  004FE0                     __ptext79:
 12188                           	callstack 0
 12189  004FE0                     _I2C_CallbackReturnReset:
 12190                           	callstack 19
 12191  004FE0                     
 12192                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12193  004FE0  0E05               	movlw	5
 12194  004FE2  0012               	return		;funcret
 12195  004FE4                     __end_of_I2C_CallbackReturnReset:
 12196                           	callstack 0
 12197                           
 12198 ;; *************** function _I2C_CallbackReturnStop *****************
 12199 ;; Defined at:
 12200 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  funPtr          2   13[COMRAM] PTR void 
 12203 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12204 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      enum E360
 12209 ;; Registers used:
 12210 ;;		wreg
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;Total ram usage:        2 bytes
 12221 ;; Hardware stack levels used: 1
 12222 ;; Hardware stack levels required when called: 4
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		_I2C_Open
 12227 ;;		_I2C_SetCallback
 12228 ;;		_I2C_DO_TX
 12229 ;;		_I2C_DO_RX
 12230 ;;		_I2C_DO_TX_EMPTY
 12231 ;;		_I2C_DO_ADDRESS_NACK
 12232 ;;		_I2C_DO_RX_EMPTY
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text80
 12237  004FE4                     __ptext80:
 12238                           	callstack 0
 12239  004FE4                     _I2C_CallbackReturnStop:
 12240                           	callstack 19
 12241  004FE4                     
 12242                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12243  004FE4  0E01               	movlw	1
 12244  004FE6  0012               	return		;funcret
 12245  004FE8                     __end_of_I2C_CallbackReturnStop:
 12246                           	callstack 0
 12247                           
 12248 ;; *************** function _rdBlkRegCompleteHandler *****************
 12249 ;; Defined at:
 12250 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;  ptr             2   13[COMRAM] PTR void 
 12253 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12254 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;		None
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      enum E360
 12259 ;; Registers used:
 12260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;Total ram usage:        2 bytes
 12271 ;; Hardware stack levels used: 1
 12272 ;; Hardware stack levels required when called: 6
 12273 ;; This function calls:
 12274 ;;		_I2C_SetBuffer
 12275 ;;		_I2C_SetDataCompleteCallback
 12276 ;; This function is called by:
 12277 ;;		_I2C_ReadDataBlock
 12278 ;;		_I2C_DO_TX
 12279 ;;		_I2C_DO_RX
 12280 ;;		_I2C_DO_TX_EMPTY
 12281 ;;		_I2C_DO_ADDRESS_NACK
 12282 ;;		_I2C_DO_RX_EMPTY
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           	psect	text81
 12287  004B60                     __ptext81:
 12288                           	callstack 0
 12289  004B60                     _rdBlkRegCompleteHandler:
 12290                           	callstack 17
 12291  004B60                     
 12292                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12293  004B60  EE20 F002          	lfsr	2,2
 12294  004B64  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 12295  004B66  26D9               	addwf	fsr2l,f,c
 12296  004B68  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 12297  004B6A  22DA               	addwfc	fsr2h,f,c
 12298  004B6C  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 12299  004B70  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 12300  004B74  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 12301  004B78  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 12302  004B7C  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 12303  004B80  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12304  004B84  EC02  F027         	call	_I2C_SetBuffer	;wreg free
 12305  004B88                     
 12306                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12307  004B88  0E00               	movlw	0
 12308  004B8A  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12309  004B8C  0E00               	movlw	0
 12310  004B8E  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12311  004B90  0E00               	movlw	0
 12312  004B92  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12313  004B94  0E00               	movlw	0
 12314  004B96  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12315  004B98  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
 12316  004B9C                     
 12317                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12318  004B9C  0E02               	movlw	2
 12319  004B9E  0012               	return		;funcret
 12320  004BA0                     __end_of_rdBlkRegCompleteHandler:
 12321                           	callstack 0
 12322                           
 12323 ;; *************** function _wr1RegCompleteHandler *****************
 12324 ;; Defined at:
 12325 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  ptr             2   13[COMRAM] PTR void 
 12328 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12329 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      enum E360
 12334 ;; Registers used:
 12335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;Total ram usage:        2 bytes
 12346 ;; Hardware stack levels used: 1
 12347 ;; Hardware stack levels required when called: 6
 12348 ;; This function calls:
 12349 ;;		_I2C_SetBuffer
 12350 ;;		_I2C_SetDataCompleteCallback
 12351 ;; This function is called by:
 12352 ;;		_I2C_Write1ByteRegister
 12353 ;;		_I2C_DO_TX
 12354 ;;		_I2C_DO_RX
 12355 ;;		_I2C_DO_TX_EMPTY
 12356 ;;		_I2C_DO_ADDRESS_NACK
 12357 ;;		_I2C_DO_RX_EMPTY
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text82
 12362  004CAE                     __ptext82:
 12363                           	callstack 0
 12364  004CAE                     _wr1RegCompleteHandler:
 12365                           	callstack 17
 12366  004CAE                     
 12367                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12368  004CAE  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12369  004CB2  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12370  004CB6  0E00               	movlw	0
 12371  004CB8  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12372  004CBA  0E01               	movlw	1
 12373  004CBC  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12374  004CBE  EC02  F027         	call	_I2C_SetBuffer	;wreg free
 12375  004CC2                     
 12376                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12377  004CC2  0E00               	movlw	0
 12378  004CC4  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12379  004CC6  0E00               	movlw	0
 12380  004CC8  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12381  004CCA  0E00               	movlw	0
 12382  004CCC  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12383  004CCE  0E00               	movlw	0
 12384  004CD0  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12385  004CD2  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
 12386  004CD6                     
 12387                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12388  004CD6  0E04               	movlw	4
 12389  004CD8  0012               	return		;funcret
 12390  004CDA                     __end_of_wr1RegCompleteHandler:
 12391                           	callstack 0
 12392                           
 12393 ;; *************** function _rd2RegCompleteHandler *****************
 12394 ;; Defined at:
 12395 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  ptr             2   13[COMRAM] PTR void 
 12398 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12399 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      enum E360
 12404 ;; Registers used:
 12405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;Total ram usage:        2 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 6
 12418 ;; This function calls:
 12419 ;;		_I2C_SetBuffer
 12420 ;;		_I2C_SetDataCompleteCallback
 12421 ;; This function is called by:
 12422 ;;		_I2C_Read2ByteRegister
 12423 ;;		_I2C_DO_TX
 12424 ;;		_I2C_DO_RX
 12425 ;;		_I2C_DO_TX_EMPTY
 12426 ;;		_I2C_DO_ADDRESS_NACK
 12427 ;;		_I2C_DO_RX_EMPTY
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text83
 12432  004CDA                     __ptext83:
 12433                           	callstack 0
 12434  004CDA                     _rd2RegCompleteHandler:
 12435                           	callstack 17
 12436  004CDA                     
 12437                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12438  004CDA  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12439  004CDE  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12440  004CE2  0E00               	movlw	0
 12441  004CE4  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12442  004CE6  0E02               	movlw	2
 12443  004CE8  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12444  004CEA  EC02  F027         	call	_I2C_SetBuffer	;wreg free
 12445  004CEE                     
 12446                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12447  004CEE  0E00               	movlw	0
 12448  004CF0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12449  004CF2  0E00               	movlw	0
 12450  004CF4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12451  004CF6  0E00               	movlw	0
 12452  004CF8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12453  004CFA  0E00               	movlw	0
 12454  004CFC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12455  004CFE  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
 12456  004D02                     
 12457                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12458  004D02  0E02               	movlw	2
 12459  004D04  0012               	return		;funcret
 12460  004D06                     __end_of_rd2RegCompleteHandler:
 12461                           	callstack 0
 12462                           
 12463 ;; *************** function _rd1RegCompleteHandler *****************
 12464 ;; Defined at:
 12465 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;  ptr             2   13[COMRAM] PTR void 
 12468 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12469 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      enum E360
 12474 ;; Registers used:
 12475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;Total ram usage:        2 bytes
 12486 ;; Hardware stack levels used: 1
 12487 ;; Hardware stack levels required when called: 6
 12488 ;; This function calls:
 12489 ;;		_I2C_SetBuffer
 12490 ;;		_I2C_SetDataCompleteCallback
 12491 ;; This function is called by:
 12492 ;;		_I2C_Read1ByteRegister
 12493 ;;		_I2C_DO_TX
 12494 ;;		_I2C_DO_RX
 12495 ;;		_I2C_DO_TX_EMPTY
 12496 ;;		_I2C_DO_ADDRESS_NACK
 12497 ;;		_I2C_DO_RX_EMPTY
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text84
 12502  004D06                     __ptext84:
 12503                           	callstack 0
 12504  004D06                     _rd1RegCompleteHandler:
 12505                           	callstack 17
 12506  004D06                     
 12507                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12508  004D06  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12509  004D0A  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12510  004D0E  0E00               	movlw	0
 12511  004D10  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12512  004D12  0E01               	movlw	1
 12513  004D14  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12514  004D16  EC02  F027         	call	_I2C_SetBuffer	;wreg free
 12515  004D1A                     
 12516                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12517  004D1A  0E00               	movlw	0
 12518  004D1C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12519  004D1E  0E00               	movlw	0
 12520  004D20  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12521  004D22  0E00               	movlw	0
 12522  004D24  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12523  004D26  0E00               	movlw	0
 12524  004D28  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12525  004D2A  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
 12526  004D2E                     
 12527                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12528  004D2E  0E02               	movlw	2
 12529  004D30  0012               	return		;funcret
 12530  004D32                     __end_of_rd1RegCompleteHandler:
 12531                           	callstack 0
 12532                           
 12533 ;; *************** function _wr2RegCompleteHandler *****************
 12534 ;; Defined at:
 12535 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  ptr             2   13[COMRAM] PTR void 
 12538 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12539 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1    wreg      enum E360
 12544 ;; Registers used:
 12545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;Total ram usage:        2 bytes
 12556 ;; Hardware stack levels used: 1
 12557 ;; Hardware stack levels required when called: 6
 12558 ;; This function calls:
 12559 ;;		_I2C_SetBuffer
 12560 ;;		_I2C_SetDataCompleteCallback
 12561 ;; This function is called by:
 12562 ;;		_I2C_Write2ByteRegister
 12563 ;;		_I2C_DO_TX
 12564 ;;		_I2C_DO_RX
 12565 ;;		_I2C_DO_TX_EMPTY
 12566 ;;		_I2C_DO_ADDRESS_NACK
 12567 ;;		_I2C_DO_RX_EMPTY
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text85
 12572  004D32                     __ptext85:
 12573                           	callstack 0
 12574  004D32                     _wr2RegCompleteHandler:
 12575                           	callstack 17
 12576  004D32                     
 12577                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 12578  004D32  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12579  004D36  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12580  004D3A  0E00               	movlw	0
 12581  004D3C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12582  004D3E  0E02               	movlw	2
 12583  004D40  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12584  004D42  EC02  F027         	call	_I2C_SetBuffer	;wreg free
 12585  004D46                     
 12586                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12587  004D46  0E00               	movlw	0
 12588  004D48  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12589  004D4A  0E00               	movlw	0
 12590  004D4C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12591  004D4E  0E00               	movlw	0
 12592  004D50  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12593  004D52  0E00               	movlw	0
 12594  004D54  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12595  004D56  EC40  F027         	call	_I2C_SetDataCompleteCallback	;wreg free
 12596  004D5A                     
 12597                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 12598  004D5A  0E04               	movlw	4
 12599  004D5C  0012               	return		;funcret
 12600  004D5E                     __end_of_wr2RegCompleteHandler:
 12601                           	callstack 0
 12602                           
 12603 ;; *************** function _I2C_SetDataCompleteCallback *****************
 12604 ;; Defined at:
 12605 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 12608 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12609 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12610 ;;  ptr             2   11[COMRAM] PTR void 
 12611 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12612 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;Total ram usage:        4 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; Hardware stack levels required when called: 5
 12631 ;; This function calls:
 12632 ;;		_I2C_SetCallback
 12633 ;; This function is called by:
 12634 ;;		_I2C_Read1ByteRegister
 12635 ;;		_I2C_Write1ByteRegister
 12636 ;;		_rd1RegCompleteHandler
 12637 ;;		_rd2RegCompleteHandler
 12638 ;;		_wr1RegCompleteHandler
 12639 ;;		_wr2RegCompleteHandler
 12640 ;;		_rdBlkRegCompleteHandler
 12641 ;;		_I2C_Read2ByteRegister
 12642 ;;		_I2C_Write2ByteRegister
 12643 ;;		_I2C_ReadDataBlock
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text86
 12648  004E80                     __ptext86:
 12649                           	callstack 0
 12650  004E80                     _I2C_SetDataCompleteCallback:
 12651                           	callstack 23
 12652  004E80                     
 12653                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12654  004E80  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 12655  004E84  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 12656  004E88  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 12657  004E8C  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 12658  004E90  0E00               	movlw	0
 12659  004E92  ECC4  F022         	call	_I2C_SetCallback
 12660  004E96  0012               	return		;funcret
 12661  004E98                     __end_of_I2C_SetDataCompleteCallback:
 12662                           	callstack 0
 12663                           
 12664 ;; *************** function _I2C_SetCallback *****************
 12665 ;; Defined at:
 12666 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  idx             1    wreg     enum E3121
 12669 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 12670 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12671 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12672 ;;  ptr             2    6[COMRAM] PTR void 
 12673 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12674 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;  idx             1    8[COMRAM] enum E3121
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:        5 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 4
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_I2C_SetDataCompleteCallback
 12697 ;;		_I2C_SetAddressNackCallback
 12698 ;;		_I2C_SetWriteCollisionCallback
 12699 ;;		_I2C_SetDataNackCallback
 12700 ;;		_I2C_SetTimeoutCallback
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           	psect	text87
 12705  004588                     __ptext87:
 12706                           	callstack 0
 12707  004588                     _I2C_SetCallback:
 12708                           	callstack 23
 12709                           
 12710                           ;incstack = 0
 12711                           ;I2C_SetCallback@idx stored from wreg
 12712  004588  6E09               	movwf	I2C_SetCallback@idx^0,c
 12713  00458A                     
 12714                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 12715  00458A  5005               	movf	I2C_SetCallback@cb^0,w,c
 12716  00458C  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 12717  00458E  B4D8               	btfsc	status,2,c
 12718  004590  EFCC  F022         	goto	u3001
 12719  004594  EFCE  F022         	goto	u3000
 12720  004598                     u3001:
 12721  004598  EFE8  F022         	goto	l3962
 12722  00459C                     u3000:
 12723  00459C                     
 12724                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12725  00459C  5009               	movf	I2C_SetCallback@idx^0,w,c
 12726  00459E  0D02               	mullw	2
 12727  0045A0  0EC0               	movlw	low _I2C_Status
 12728  0045A2  24F3               	addwf	243,w,c
 12729  0045A4  6ED9               	movwf	fsr2l,c
 12730  0045A6  0E00               	movlw	high _I2C_Status
 12731  0045A8  20F4               	addwfc	prodh,w,c
 12732  0045AA  6EDA               	movwf	fsr2h,c
 12733  0045AC  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 12734  0045B0  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 12735                           
 12736                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 12737  0045B4  5009               	movf	I2C_SetCallback@idx^0,w,c
 12738  0045B6  0D02               	mullw	2
 12739  0045B8  0ECC               	movlw	low (_I2C_Status+12)
 12740  0045BA  24F3               	addwf	243,w,c
 12741  0045BC  6ED9               	movwf	fsr2l,c
 12742  0045BE  0E00               	movlw	high (_I2C_Status+12)
 12743  0045C0  20F4               	addwfc	prodh,w,c
 12744  0045C2  6EDA               	movwf	fsr2h,c
 12745  0045C4  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 12746  0045C8  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 12747                           
 12748                           ;mcc_generated_files/i2c_master.c: 304:     }
 12749  0045CC  EF00  F023         	goto	l292
 12750  0045D0                     l3962:
 12751                           
 12752                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12753  0045D0  5009               	movf	I2C_SetCallback@idx^0,w,c
 12754  0045D2  0D02               	mullw	2
 12755  0045D4  0EC0               	movlw	low _I2C_Status
 12756  0045D6  24F3               	addwf	243,w,c
 12757  0045D8  6ED9               	movwf	fsr2l,c
 12758  0045DA  0E00               	movlw	high _I2C_Status
 12759  0045DC  20F4               	addwfc	prodh,w,c
 12760  0045DE  6EDA               	movwf	fsr2h,c
 12761  0045E0  0EE4               	movlw	low _I2C_CallbackReturnStop
 12762  0045E2  6EDE               	movwf	postinc2,c
 12763  0045E4  0E4F               	movlw	high _I2C_CallbackReturnStop
 12764  0045E6  6EDD               	movwf	postdec2,c
 12765                           
 12766                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12767  0045E8  5009               	movf	I2C_SetCallback@idx^0,w,c
 12768  0045EA  0D02               	mullw	2
 12769  0045EC  0ECC               	movlw	low (_I2C_Status+12)
 12770  0045EE  24F3               	addwf	243,w,c
 12771  0045F0  6ED9               	movwf	fsr2l,c
 12772  0045F2  0E00               	movlw	high (_I2C_Status+12)
 12773  0045F4  20F4               	addwfc	prodh,w,c
 12774  0045F6  6EDA               	movwf	fsr2h,c
 12775  0045F8  0E00               	movlw	0
 12776  0045FA  6EDE               	movwf	postinc2,c
 12777  0045FC  0E00               	movlw	0
 12778  0045FE  6EDD               	movwf	postdec2,c
 12779  004600                     l292:
 12780  004600  0012               	return		;funcret
 12781  004602                     __end_of_I2C_SetCallback:
 12782                           	callstack 0
 12783                           
 12784 ;; *************** function _I2C_SetBuffer *****************
 12785 ;; Defined at:
 12786 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;  buffer          2    4[COMRAM] PTR void 
 12789 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
 12790 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
 12791 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 12792 ;;  bufferSize      2    6[COMRAM] unsigned int 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2, status,0
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;Total ram usage:        4 bytes
 12809 ;; Hardware stack levels used: 1
 12810 ;; Hardware stack levels required when called: 4
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_I2C_Read1ByteRegister
 12815 ;;		_I2C_Write1ByteRegister
 12816 ;;		_rd1RegCompleteHandler
 12817 ;;		_rd2RegCompleteHandler
 12818 ;;		_wr1RegCompleteHandler
 12819 ;;		_wr2RegCompleteHandler
 12820 ;;		_rdBlkRegCompleteHandler
 12821 ;;		_I2C_Read2ByteRegister
 12822 ;;		_I2C_Write2ByteRegister
 12823 ;;		_I2C_WriteNBytes
 12824 ;;		_I2C_ReadNBytes
 12825 ;;		_I2C_ReadDataBlock
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text88
 12830  004E04                     __ptext88:
 12831                           	callstack 0
 12832  004E04                     _I2C_SetBuffer:
 12833                           	callstack 24
 12834  004E04                     
 12835                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 12836  004E04  0100               	movlb	0	; () banked
 12837  004E06  A7E3               	btfss	(_I2C_Status+35)& (0+255),3,b
 12838  004E08  EF08  F027         	goto	u3011
 12839  004E0C  EF0A  F027         	goto	u3010
 12840  004E10                     u3011:
 12841  004E10  EF13  F027         	goto	l272
 12842  004E14                     u3010:
 12843  004E14                     
 12844                           ; BSR set to: 0
 12845                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 12846  004E14  C005  F0DD         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 12847  004E18  C006  F0DE         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 12848  004E1C                     
 12849                           ; BSR set to: 0
 12850                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 12851  004E1C  C007  F0DF         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 12852  004E20  C008  F0E0         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12853  004E24                     
 12854                           ; BSR set to: 0
 12855                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 12856  004E24  97E3               	bcf	(_I2C_Status+35)& (0+255),3,b
 12857  004E26                     l272:
 12858                           
 12859                           ; BSR set to: 0
 12860  004E26  0012               	return		;funcret
 12861  004E28                     __end_of_I2C_SetBuffer:
 12862                           	callstack 0
 12863                           
 12864 ;; *************** function _I2C_MasterStop *****************
 12865 ;; Defined at:
 12866 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		None
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;Total ram usage:        0 bytes
 12885 ;; Hardware stack levels used: 1
 12886 ;; Hardware stack levels required when called: 4
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_I2C_DO_SEND_STOP
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text89
 12895  004FE8                     __ptext89:
 12896                           	callstack 0
 12897  004FE8                     _I2C_MasterStop:
 12898                           	callstack 18
 12899  004FE8                     
 12900                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 12901  004FE8  84C5               	bsf	197,2,c	;volatile
 12902  004FEA  0012               	return		;funcret
 12903  004FEC                     __end_of_I2C_MasterStop:
 12904                           	callstack 0
 12905                           
 12906 ;; *************** function _I2C_MasterEnableRestart *****************
 12907 ;; Defined at:
 12908 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;		None
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;		None
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  1    wreg      void 
 12915 ;; Registers used:
 12916 ;;		None
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12926 ;;Total ram usage:        0 bytes
 12927 ;; Hardware stack levels used: 1
 12928 ;; Hardware stack levels required when called: 4
 12929 ;; This function calls:
 12930 ;;		Nothing
 12931 ;; This function is called by:
 12932 ;;		_I2C_DO_SEND_RESTART_READ
 12933 ;;		_I2C_DO_SEND_RESTART_WRITE
 12934 ;;		_I2C_DO_SEND_RESTART
 12935 ;;		_I2C_DO_RX_EMPTY
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text90
 12940  004FEC                     __ptext90:
 12941                           	callstack 0
 12942  004FEC                     _I2C_MasterEnableRestart:
 12943                           	callstack 18
 12944  004FEC                     
 12945                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12946  004FEC  82C5               	bsf	197,1,c	;volatile
 12947  004FEE  0012               	return		;funcret
 12948  004FF0                     __end_of_I2C_MasterEnableRestart:
 12949                           	callstack 0
 12950                           
 12951 ;; *************** function _I2C_MasterStart *****************
 12952 ;; Defined at:
 12953 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		None
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;Total ram usage:        0 bytes
 12972 ;; Hardware stack levels used: 1
 12973 ;; Hardware stack levels required when called: 4
 12974 ;; This function calls:
 12975 ;;		Nothing
 12976 ;; This function is called by:
 12977 ;;		_I2C_MasterOperation
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text91
 12982  004FF0                     __ptext91:
 12983                           	callstack 0
 12984  004FF0                     _I2C_MasterStart:
 12985                           	callstack 22
 12986  004FF0                     
 12987                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12988  004FF0  80C5               	bsf	197,0,c	;volatile
 12989  004FF2  0012               	return		;funcret
 12990  004FF4                     __end_of_I2C_MasterStart:
 12991                           	callstack 0
 12992                           
 12993 ;; *************** function _I2C_Close *****************
 12994 ;; Defined at:
 12995 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;		None
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;  returnValue     1    4[COMRAM] enum E355
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      enum E355
 13002 ;; Registers used:
 13003 ;;		wreg, status,2, cstack
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13013 ;;Total ram usage:        1 bytes
 13014 ;; Hardware stack levels used: 1
 13015 ;; Hardware stack levels required when called: 5
 13016 ;; This function calls:
 13017 ;;		_I2C_MasterClearIrq
 13018 ;;		_I2C_MasterClose
 13019 ;;		_I2C_MasterDisableIrq
 13020 ;; This function is called by:
 13021 ;;		_I2C_Read1ByteRegister
 13022 ;;		_I2C_Write1ByteRegister
 13023 ;;		_I2C_Read2ByteRegister
 13024 ;;		_I2C_Write2ByteRegister
 13025 ;;		_I2C_WriteNBytes
 13026 ;;		_I2C_ReadNBytes
 13027 ;;		_I2C_ReadDataBlock
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           	psect	text92
 13032  004D5E                     __ptext92:
 13033                           	callstack 0
 13034  004D5E                     _I2C_Close:
 13035                           	callstack 23
 13036  004D5E                     
 13037                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 13038  004D5E  0E01               	movlw	1
 13039  004D60  6E05               	movwf	I2C_Close@returnValue^0,c
 13040  004D62                     
 13041                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 13042  004D62  0100               	movlb	0	; () banked
 13043  004D64  B3E3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13044  004D66  EFB7  F026         	goto	u5351
 13045  004D6A  EFB9  F026         	goto	u5350
 13046  004D6E                     u5351:
 13047  004D6E  EFC3  F026         	goto	l5536
 13048  004D72                     u5350:
 13049  004D72                     
 13050                           ; BSR set to: 0
 13051                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 13052  004D72  95E3               	bcf	(_I2C_Status+35)& (0+255),2,b
 13053                           
 13054                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 13055  004D74  69DC               	setf	(_I2C_Status+28)& (0+255),b
 13056  004D76                     
 13057                           ; BSR set to: 0
 13058                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 13059  004D76  ECFE  F027         	call	_I2C_MasterClearIrq	;wreg free
 13060                           
 13061                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 13062  004D7A  ECFA  F027         	call	_I2C_MasterDisableIrq	;wreg free
 13063                           
 13064                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 13065  004D7E  ECFC  F027         	call	_I2C_MasterClose	;wreg free
 13066  004D82                     
 13067                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 13068  004D82  C0E2  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 13069  004D86                     l5536:
 13070                           
 13071                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 13072  004D86  5005               	movf	I2C_Close@returnValue^0,w,c
 13073  004D88  0012               	return		;funcret
 13074  004D8A                     __end_of_I2C_Close:
 13075                           	callstack 0
 13076                           
 13077 ;; *************** function _I2C_MasterDisableIrq *****************
 13078 ;; Defined at:
 13079 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;		None
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      void 
 13086 ;; Registers used:
 13087 ;;		None
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;Total ram usage:        0 bytes
 13098 ;; Hardware stack levels used: 1
 13099 ;; Hardware stack levels required when called: 4
 13100 ;; This function calls:
 13101 ;;		Nothing
 13102 ;; This function is called by:
 13103 ;;		_I2C_Close
 13104 ;;		_I2C_SetTimeOut
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           	psect	text93
 13109  004FF4                     __ptext93:
 13110                           	callstack 0
 13111  004FF4                     _I2C_MasterDisableIrq:
 13112                           	callstack 23
 13113  004FF4                     
 13114                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 13115  004FF4  969D               	bcf	157,3,c	;volatile
 13116  004FF6  0012               	return		;funcret
 13117  004FF8                     __end_of_I2C_MasterDisableIrq:
 13118                           	callstack 0
 13119                           
 13120 ;; *************** function _I2C_MasterClose *****************
 13121 ;; Defined at:
 13122 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;		None
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;		None
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1    wreg      void 
 13129 ;; Registers used:
 13130 ;;		None
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13140 ;;Total ram usage:        0 bytes
 13141 ;; Hardware stack levels used: 1
 13142 ;; Hardware stack levels required when called: 4
 13143 ;; This function calls:
 13144 ;;		Nothing
 13145 ;; This function is called by:
 13146 ;;		_I2C_Close
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           	psect	text94
 13151  004FF8                     __ptext94:
 13152                           	callstack 0
 13153  004FF8                     _I2C_MasterClose:
 13154                           	callstack 23
 13155  004FF8                     
 13156                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 13157  004FF8  9AC6               	bcf	198,5,c	;volatile
 13158  004FFA  0012               	return		;funcret
 13159  004FFC                     __end_of_I2C_MasterClose:
 13160                           	callstack 0
 13161                           
 13162 ;; *************** function _I2C_MasterClearIrq *****************
 13163 ;; Defined at:
 13164 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;		None
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		None
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;Total ram usage:        0 bytes
 13183 ;; Hardware stack levels used: 1
 13184 ;; Hardware stack levels required when called: 4
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_I2C_Open
 13189 ;;		_I2C_Close
 13190 ;;		_I2C_MasterFsm
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text95
 13195  004FFC                     __ptext95:
 13196                           	callstack 0
 13197  004FFC                     _I2C_MasterClearIrq:
 13198                           	callstack 23
 13199  004FFC                     
 13200                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 13201  004FFC  969E               	bcf	158,3,c	;volatile
 13202  004FFE  0012               	return		;funcret
 13203  005000                     __end_of_I2C_MasterClearIrq:
 13204                           	callstack 0
 13205                           
 13206 ;; *************** function _INTERRUPT_InterruptManager *****************
 13207 ;; Defined at:
 13208 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;Total ram usage:        4 bytes
 13227 ;; Hardware stack levels used: 1
 13228 ;; Hardware stack levels required when called: 3
 13229 ;; This function calls:
 13230 ;;		Absolute function
 13231 ;;		_EUSART_Receive_ISR
 13232 ;;		_EUSART_Transmit_ISR
 13233 ;; This function is called by:
 13234 ;;		Interrupt level 2
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238                           	psect	intcode
 13239  000008                     __pintcode:
 13240                           	callstack 0
 13241  000008                     _INTERRUPT_InterruptManager:
 13242                           	callstack 17
 13243                           
 13244                           ;incstack = 0
 13245  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13246  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13247  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13248  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13249  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13250  00001A                     
 13251                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13252  00001A  ACF2               	btfss	242,6,c	;volatile
 13253  00001C  EF12  F000         	goto	i2u592_41
 13254  000020  EF14  F000         	goto	i2u592_40
 13255  000024                     i2u592_41:
 13256  000024  EF4E  F000         	goto	i2l501
 13257  000028                     i2u592_40:
 13258  000028                     
 13259                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13260  000028  A89D               	btfss	157,4,c	;volatile
 13261  00002A  EF19  F000         	goto	i2u593_41
 13262  00002E  EF1B  F000         	goto	i2u593_40
 13263  000032                     i2u593_41:
 13264  000032  EF31  F000         	goto	i2l496
 13265  000036                     i2u593_40:
 13266  000036  A89E               	btfss	158,4,c	;volatile
 13267  000038  EF20  F000         	goto	i2u594_41
 13268  00003C  EF22  F000         	goto	i2u594_40
 13269  000040                     i2u594_41:
 13270  000040  EF31  F000         	goto	i2l496
 13271  000044                     i2u594_40:
 13272  000044                     
 13273                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13274  000044  D802               	call	i2u595_48
 13275  000046  EF2F  F000         	goto	i2u595_49
 13276  00004A                     i2u595_48:
 13277  00004A  0005               	push	
 13278  00004C  6EFA               	movwf	pclath,c
 13279  00004E  0100               	movlb	0	; () banked
 13280  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13281  000052  6EFD               	movwf	tosl,c
 13282  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13283  000056  6EFE               	movwf	tosh,c
 13284  000058  6AFF               	clrf	tosu,c
 13285  00005A  50FA               	movf	pclath,w,c
 13286  00005C  0012               	return		;indir
 13287  00005E                     i2u595_49:
 13288                           
 13289                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13290  00005E  EF4E  F000         	goto	i2l501
 13291  000062                     i2l496:
 13292  000062  AA9D               	btfss	157,5,c	;volatile
 13293  000064  EF36  F000         	goto	i2u596_41
 13294  000068  EF38  F000         	goto	i2u596_40
 13295  00006C                     i2u596_41:
 13296  00006C  EF4E  F000         	goto	i2l497
 13297  000070                     i2u596_40:
 13298  000070  AA9E               	btfss	158,5,c	;volatile
 13299  000072  EF3D  F000         	goto	i2u597_41
 13300  000076  EF3F  F000         	goto	i2u597_40
 13301  00007A                     i2u597_41:
 13302  00007A  EF4E  F000         	goto	i2l497
 13303  00007E                     i2u597_40:
 13304  00007E                     
 13305                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13306  00007E  D802               	call	i2u598_48
 13307  000080  EF4C  F000         	goto	i2u598_49
 13308  000084                     i2u598_48:
 13309  000084  0005               	push	
 13310  000086  6EFA               	movwf	pclath,c
 13311  000088  0100               	movlb	0	; () banked
 13312  00008A  51FA               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13313  00008C  6EFD               	movwf	tosl,c
 13314  00008E  51FB               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13315  000090  6EFE               	movwf	tosh,c
 13316  000092  6AFF               	clrf	tosu,c
 13317  000094  50FA               	movf	pclath,w,c
 13318  000096  0012               	return		;indir
 13319  000098                     i2u598_49:
 13320                           
 13321                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13322  000098  EF4E  F000         	goto	i2l501
 13323  00009C                     i2l497:
 13324  00009C                     i2l501:
 13325  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13326  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13327  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13328  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13329  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13330  0000AE  0011               	retfie		f
 13331  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13332                           	callstack 0
 13333                           
 13334 ;; *************** function _EUSART_Transmit_ISR *****************
 13335 ;; Defined at:
 13336 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;		None
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;Total ram usage:        0 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; This function calls:
 13357 ;;		Nothing
 13358 ;; This function is called by:
 13359 ;;		_EUSART_Initialize
 13360 ;;		_INTERRUPT_InterruptManager
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text97
 13365  004B1E                     __ptext97:
 13366                           	callstack 0
 13367  004B1E                     _EUSART_Transmit_ISR:
 13368                           	callstack 19
 13369  004B1E                     
 13370                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13371  004B1E  0E08               	movlw	8
 13372  004B20  0100               	movlb	0	; () banked
 13373  004B22  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13374  004B24  EF96  F025         	goto	i2u568_41
 13375  004B28  EF98  F025         	goto	i2u568_40
 13376  004B2C                     i2u568_41:
 13377  004B2C  EFAE  F025         	goto	i2l633
 13378  004B30                     i2u568_40:
 13379  004B30                     
 13380                           ; BSR set to: 0
 13381                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13382  004B30  0E10               	movlw	low _eusartTxBuffer
 13383  004B32  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 13384  004B34  6ED9               	movwf	fsr2l,c
 13385  004B36  6ADA               	clrf	fsr2h,c
 13386  004B38  0E01               	movlw	high _eusartTxBuffer
 13387  004B3A  22DA               	addwfc	fsr2h,f,c
 13388  004B3C  50DF               	movf	indf2,w,c
 13389  004B3E  6EAD               	movwf	173,c	;volatile
 13390  004B40                     
 13391                           ; BSR set to: 0
 13392  004B40  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 13393  004B42                     
 13394                           ; BSR set to: 0
 13395                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13396  004B42  0E07               	movlw	7
 13397  004B44  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 13398  004B46  EFA7  F025         	goto	i2u569_41
 13399  004B4A  EFA9  F025         	goto	i2u569_40
 13400  004B4E                     i2u569_41:
 13401  004B4E  EFAB  F025         	goto	i2l5836
 13402  004B52                     i2u569_40:
 13403  004B52                     
 13404                           ; BSR set to: 0
 13405                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13406  004B52  0E00               	movlw	0
 13407  004B54  6E59               	movwf	_eusartTxTail^0,c	;volatile
 13408  004B56                     i2l5836:
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13412  004B56  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13413                           
 13414                           ;mcc_generated_files/eusart.c: 218:     }
 13415  004B58  EFAF  F025         	goto	i2l636
 13416  004B5C                     i2l633:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13420  004B5C  989D               	bcf	157,4,c	;volatile
 13421  004B5E                     i2l636:
 13422                           
 13423                           ; BSR set to: 0
 13424  004B5E  0012               	return		;funcret
 13425  004B60                     __end_of_EUSART_Transmit_ISR:
 13426                           	callstack 0
 13427                           
 13428 ;; *************** function _EUSART_Receive_ISR *****************
 13429 ;; Defined at:
 13430 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used: 1
 13450 ;; Hardware stack levels required when called: 2
 13451 ;; This function calls:
 13452 ;;		Absolute function
 13453 ;;		_EUSART_DefaultErrorHandler
 13454 ;;		_EUSART_DefaultFramingErrorHandler
 13455 ;;		_EUSART_DefaultOverrunErrorHandler
 13456 ;;		_EUSART_RxDataHandler
 13457 ;; This function is called by:
 13458 ;;		_EUSART_Initialize
 13459 ;;		_INTERRUPT_InterruptManager
 13460 ;; This function uses a non-reentrant model
 13461 ;;
 13462                           
 13463                           	psect	text98
 13464  003FFE                     __ptext98:
 13465                           	callstack 0
 13466  003FFE                     _EUSART_Receive_ISR:
 13467                           	callstack 17
 13468  003FFE                     
 13469                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13470  003FFE  0E00               	movlw	low _eusartRxStatusBuffer
 13471  004000  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13472  004002  6ED9               	movwf	fsr2l,c
 13473  004004  6ADA               	clrf	fsr2h,c
 13474  004006  0E01               	movlw	high _eusartRxStatusBuffer
 13475  004008  22DA               	addwfc	fsr2h,f,c
 13476  00400A  0E00               	movlw	0
 13477  00400C  6EDF               	movwf	indf2,c
 13478  00400E                     
 13479                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13480  00400E  A4AB               	btfss	171,2,c	;volatile
 13481  004010  EF0C  F020         	goto	i2u570_41
 13482  004014  EF0E  F020         	goto	i2u570_40
 13483  004018                     i2u570_41:
 13484  004018  EF23  F020         	goto	i2l5846
 13485  00401C                     i2u570_40:
 13486  00401C                     
 13487                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13488  00401C  0E00               	movlw	low _eusartRxStatusBuffer
 13489  00401E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13490  004020  6ED9               	movwf	fsr2l,c
 13491  004022  6ADA               	clrf	fsr2h,c
 13492  004024  0E01               	movlw	high _eusartRxStatusBuffer
 13493  004026  22DA               	addwfc	fsr2h,f,c
 13494  004028  0101               	movlb	1	; () banked
 13495  00402A  82DF               	bsf	indf2,1,c
 13496  00402C                     
 13497                           ; BSR set to: 1
 13498                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13499  00402C  D802               	call	i2u571_48
 13500  00402E  EF23  F020         	goto	i2u571_49
 13501  004032                     i2u571_48:
 13502  004032  0005               	push	
 13503  004034  6EFA               	movwf	pclath,c
 13504  004036  0100               	movlb	0	; () banked
 13505  004038  51F8               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 13506  00403A  6EFD               	movwf	tosl,c
 13507  00403C  51F9               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 13508  00403E  6EFE               	movwf	tosh,c
 13509  004040  6AFF               	clrf	tosu,c
 13510  004042  50FA               	movf	pclath,w,c
 13511  004044  0012               	return		;indir
 13512  004046                     i2u571_49:
 13513  004046                     i2l5846:
 13514                           
 13515                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 13516  004046  A2AB               	btfss	171,1,c	;volatile
 13517  004048  EF28  F020         	goto	i2u572_41
 13518  00404C  EF2A  F020         	goto	i2u572_40
 13519  004050                     i2u572_41:
 13520  004050  EF3E  F020         	goto	i2l5852
 13521  004054                     i2u572_40:
 13522  004054                     
 13523                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13524  004054  0E00               	movlw	low _eusartRxStatusBuffer
 13525  004056  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13526  004058  6ED9               	movwf	fsr2l,c
 13527  00405A  6ADA               	clrf	fsr2h,c
 13528  00405C  0E01               	movlw	high _eusartRxStatusBuffer
 13529  00405E  22DA               	addwfc	fsr2h,f,c
 13530  004060  0101               	movlb	1	; () banked
 13531  004062  84DF               	bsf	indf2,2,c
 13532  004064                     
 13533                           ; BSR set to: 1
 13534                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 13535  004064  D802               	call	i2u573_48
 13536  004066  EF3E  F020         	goto	i2u573_49
 13537  00406A                     i2u573_48:
 13538  00406A  0005               	push	
 13539  00406C  6EFA               	movwf	pclath,c
 13540  00406E  516A               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 13541  004070  6EFD               	movwf	tosl,c
 13542  004072  516B               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 13543  004074  6EFE               	movwf	tosh,c
 13544  004076  6AFF               	clrf	tosu,c
 13545  004078  50FA               	movf	pclath,w,c
 13546  00407A  0012               	return		;indir
 13547  00407C                     i2u573_49:
 13548  00407C                     i2l5852:
 13549                           
 13550                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 13551  00407C  0E00               	movlw	low _eusartRxStatusBuffer
 13552  00407E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13553  004080  6ED9               	movwf	fsr2l,c
 13554  004082  6ADA               	clrf	fsr2h,c
 13555  004084  0E01               	movlw	high _eusartRxStatusBuffer
 13556  004086  22DA               	addwfc	fsr2h,f,c
 13557  004088  50DF               	movf	indf2,w,c
 13558  00408A  B4D8               	btfsc	status,2,c
 13559  00408C  EF4A  F020         	goto	i2u574_41
 13560  004090  EF4C  F020         	goto	i2u574_40
 13561  004094                     i2u574_41:
 13562  004094  EF5B  F020         	goto	i2l5856
 13563  004098                     i2u574_40:
 13564  004098                     
 13565                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 13566  004098  D802               	call	i2u575_48
 13567  00409A  EF59  F020         	goto	i2u575_49
 13568  00409E                     i2u575_48:
 13569  00409E  0005               	push	
 13570  0040A0  6EFA               	movwf	pclath,c
 13571  0040A2  0101               	movlb	1	; () banked
 13572  0040A4  5168               	movf	_EUSART_ErrorHandler& (0+255),w,b
 13573  0040A6  6EFD               	movwf	tosl,c
 13574  0040A8  5169               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 13575  0040AA  6EFE               	movwf	tosh,c
 13576  0040AC  6AFF               	clrf	tosu,c
 13577  0040AE  50FA               	movf	pclath,w,c
 13578  0040B0  0012               	return		;indir
 13579  0040B2                     i2u575_49:
 13580                           
 13581                           ;mcc_generated_files/eusart.c: 242:     } else {
 13582  0040B2  EF5D  F020         	goto	i2l643
 13583  0040B6                     i2l5856:
 13584                           
 13585                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 13586  0040B6  ECDA  F026         	call	_EUSART_RxDataHandler	;wreg free
 13587  0040BA                     i2l643:
 13588  0040BA  0012               	return		;funcret
 13589  0040BC                     __end_of_EUSART_Receive_ISR:
 13590                           	callstack 0
 13591                           
 13592 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 13593 ;; Defined at:
 13594 ;;		line 261 in file "mcc_generated_files/eusart.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		None
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;Total ram usage:        0 bytes
 13613 ;; Hardware stack levels used: 1
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_EUSART_Initialize
 13618 ;;		_EUSART_Receive_ISR
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text99
 13623  004FC4                     __ptext99:
 13624                           	callstack 0
 13625  004FC4                     _EUSART_DefaultOverrunErrorHandler:
 13626                           	callstack 18
 13627  004FC4                     
 13628                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 13629  004FC4  98AB               	bcf	171,4,c	;volatile
 13630                           
 13631                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 13632  004FC6  88AB               	bsf	171,4,c	;volatile
 13633  004FC8  0012               	return		;funcret
 13634  004FCA                     __end_of_EUSART_DefaultOverrunErrorHandler:
 13635                           	callstack 0
 13636                           
 13637 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 13638 ;; Defined at:
 13639 ;;		line 259 in file "mcc_generated_files/eusart.c"
 13640 ;; Parameters:    Size  Location     Type
 13641 ;;		None
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;		None
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      void 
 13646 ;; Registers used:
 13647 ;;		None
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13657 ;;Total ram usage:        0 bytes
 13658 ;; Hardware stack levels used: 1
 13659 ;; This function calls:
 13660 ;;		Nothing
 13661 ;; This function is called by:
 13662 ;;		_EUSART_Initialize
 13663 ;;		_EUSART_Receive_ISR
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text100
 13668  005000                     __ptext100:
 13669                           	callstack 0
 13670  005000                     _EUSART_DefaultFramingErrorHandler:
 13671                           	callstack 18
 13672  005000  0012               	return		;funcret
 13673  005002                     __end_of_EUSART_DefaultFramingErrorHandler:
 13674                           	callstack 0
 13675                           
 13676 ;; *************** function _EUSART_DefaultErrorHandler *****************
 13677 ;; Defined at:
 13678 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;		None
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;		None
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  1    wreg      void 
 13685 ;; Registers used:
 13686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13696 ;;Total ram usage:        0 bytes
 13697 ;; Hardware stack levels used: 1
 13698 ;; Hardware stack levels required when called: 1
 13699 ;; This function calls:
 13700 ;;		_EUSART_RxDataHandler
 13701 ;; This function is called by:
 13702 ;;		_EUSART_Initialize
 13703 ;;		_EUSART_Receive_ISR
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           	psect	text101
 13708  004FCA                     __ptext101:
 13709                           	callstack 0
 13710  004FCA                     _EUSART_DefaultErrorHandler:
 13711                           	callstack 17
 13712  004FCA                     
 13713                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 13714  004FCA  ECDA  F026         	call	_EUSART_RxDataHandler	;wreg free
 13715  004FCE  0012               	return		;funcret
 13716  004FD0                     __end_of_EUSART_DefaultErrorHandler:
 13717                           	callstack 0
 13718                           
 13719 ;; *************** function _EUSART_RxDataHandler *****************
 13720 ;; Defined at:
 13721 ;;		line 249 in file "mcc_generated_files/eusart.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      void 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used: 1
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_EUSART_Receive_ISR
 13745 ;;		_EUSART_DefaultErrorHandler
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           	psect	text102
 13750  004DB4                     __ptext102:
 13751                           	callstack 0
 13752  004DB4                     _EUSART_RxDataHandler:
 13753                           	callstack 18
 13754  004DB4                     
 13755                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 13756  004DB4  0E08               	movlw	low _eusartRxBuffer
 13757  004DB6  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13758  004DB8  6ED9               	movwf	fsr2l,c
 13759  004DBA  6ADA               	clrf	fsr2h,c
 13760  004DBC  0E01               	movlw	high _eusartRxBuffer
 13761  004DBE  22DA               	addwfc	fsr2h,f,c
 13762  004DC0  CFAE FFDF          	movff	4014,indf2	;volatile
 13763  004DC4  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 13764  004DC6                     
 13765                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 13766  004DC6  0E07               	movlw	7
 13767  004DC8  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 13768  004DCA  EFE9  F026         	goto	i2u536_41
 13769  004DCE  EFEB  F026         	goto	i2u536_40
 13770  004DD2                     i2u536_41:
 13771  004DD2  EFED  F026         	goto	i2l5558
 13772  004DD6                     i2u536_40:
 13773  004DD6                     
 13774                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 13775  004DD6  0E00               	movlw	0
 13776  004DD8  6E58               	movwf	_eusartRxHead^0,c	;volatile
 13777  004DDA                     i2l5558:
 13778                           
 13779                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 13780  004DDA  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 13781  004DDC  0012               	return		;funcret
 13782  004DDE                     __end_of_EUSART_RxDataHandler:
 13783                           	callstack 0
 13784                           
 13785                           	psect	text103
 13786  000000                     __ptext103:
 13787                           	callstack 0
 13788  000000                     
 13789                           	psect	rparam
 13790  0000                     
 13791                           	psect	temp
 13792  00005B                     btemp:
 13793                           	callstack 0
 13794  00005B                     	ds	1
 13795  0000                     int$flags	set	btemp
 13796  0000                     wtemp8	set	btemp+1
 13797  0000                     ttemp5	set	btemp+1
 13798  0000                     ttemp6	set	btemp+4
 13799  0000                     ttemp7	set	btemp+8
 13800                           
 13801                           	psect	idloc
 13802                           
 13803                           ;Config register IDLOC0 @ 0x200000
 13804                           ;	unspecified, using default values
 13805  200000                     	org	2097152
 13806  200000  FF                 	db	255
 13807                           
 13808                           ;Config register IDLOC1 @ 0x200001
 13809                           ;	unspecified, using default values
 13810  200001                     	org	2097153
 13811  200001  FF                 	db	255
 13812                           
 13813                           ;Config register IDLOC2 @ 0x200002
 13814                           ;	unspecified, using default values
 13815  200002                     	org	2097154
 13816  200002  FF                 	db	255
 13817                           
 13818                           ;Config register IDLOC3 @ 0x200003
 13819                           ;	unspecified, using default values
 13820  200003                     	org	2097155
 13821  200003  FF                 	db	255
 13822                           
 13823                           ;Config register IDLOC4 @ 0x200004
 13824                           ;	unspecified, using default values
 13825  200004                     	org	2097156
 13826  200004  FF                 	db	255
 13827                           
 13828                           ;Config register IDLOC5 @ 0x200005
 13829                           ;	unspecified, using default values
 13830  200005                     	org	2097157
 13831  200005  FF                 	db	255
 13832                           
 13833                           ;Config register IDLOC6 @ 0x200006
 13834                           ;	unspecified, using default values
 13835  200006                     	org	2097158
 13836  200006  FF                 	db	255
 13837                           
 13838                           ;Config register IDLOC7 @ 0x200007
 13839                           ;	unspecified, using default values
 13840  200007                     	org	2097159
 13841  200007  FF                 	db	255
 13842                           
 13843                           	psect	config
 13844                           
 13845                           ; Padding undefined space
 13846  300000                     	org	3145728
 13847  300000  FF                 	db	255
 13848                           
 13849                           ;Config register CONFIG1H @ 0x300001
 13850                           ;	Oscillator Selection bits
 13851                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 13852                           ;	Fail-Safe Clock Monitor Enable bit
 13853                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13854                           ;	Internal/External Oscillator Switchover bit
 13855                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13856  300001                     	org	3145729
 13857  300001  08                 	db	8
 13858                           
 13859                           ;Config register CONFIG2L @ 0x300002
 13860                           ;	Power-up Timer Enable bit
 13861                           ;	PWRT = OFF, PWRT disabled
 13862                           ;	Brown-out Reset Enable bits
 13863                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13864                           ;	Brown Out Reset Voltage bits
 13865                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13866  300002                     	org	3145730
 13867  300002  1F                 	db	31
 13868                           
 13869                           ;Config register CONFIG2H @ 0x300003
 13870                           ;	Watchdog Timer Enable bit
 13871                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13872                           ;	Watchdog Timer Postscale Select bits
 13873                           ;	WDTPS = 32768, 1:32768
 13874  300003                     	org	3145731
 13875  300003  1E                 	db	30
 13876                           
 13877                           ; Padding undefined space
 13878  300004                     	org	3145732
 13879  300004  FF                 	db	255
 13880                           
 13881                           ;Config register CONFIG3H @ 0x300005
 13882                           ;	CCP2 MUX bit
 13883                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13884                           ;	PORTB A/D Enable bit
 13885                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13886                           ;	Low-Power Timer1 Oscillator Enable bit
 13887                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13888                           ;	HFINTOSC Fast Start-up
 13889                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 13890                           ;	MCLR Pin Enable bit
 13891                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 13892  300005                     	org	3145733
 13893  300005  0B                 	db	11
 13894                           
 13895                           ;Config register CONFIG4L @ 0x300006
 13896                           ;	Stack Full/Underflow Reset Enable bit
 13897                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13898                           ;	Single-Supply ICSP Enable bit
 13899                           ;	LVP = OFF, Single-Supply ICSP disabled
 13900                           ;	Extended Instruction Set Enable bit
 13901                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13902                           ;	Background Debugger Enable bit
 13903                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13904  300006                     	org	3145734
 13905  300006  81                 	db	129
 13906                           
 13907                           ; Padding undefined space
 13908  300007                     	org	3145735
 13909  300007  FF                 	db	255
 13910                           
 13911                           ;Config register CONFIG5L @ 0x300008
 13912                           ;	Code Protection Block 0
 13913                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13914                           ;	Code Protection Block 1
 13915                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13916                           ;	Code Protection Block 2
 13917                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13918                           ;	Code Protection Block 3
 13919                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13920  300008                     	org	3145736
 13921  300008  0F                 	db	15
 13922                           
 13923                           ;Config register CONFIG5H @ 0x300009
 13924                           ;	Boot Block Code Protection bit
 13925                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13926                           ;	Data EEPROM Code Protection bit
 13927                           ;	CPD = OFF, Data EEPROM not code-protected
 13928  300009                     	org	3145737
 13929  300009  C0                 	db	192
 13930                           
 13931                           ;Config register CONFIG6L @ 0x30000A
 13932                           ;	Write Protection Block 0
 13933                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13934                           ;	Write Protection Block 1
 13935                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13936                           ;	Write Protection Block 2
 13937                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13938                           ;	Write Protection Block 3
 13939                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13940  30000A                     	org	3145738
 13941  30000A  0F                 	db	15
 13942                           
 13943                           ;Config register CONFIG6H @ 0x30000B
 13944                           ;	Configuration Register Write Protection bit
 13945                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13946                           ;	Boot Block Write Protection bit
 13947                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13948                           ;	Data EEPROM Write Protection bit
 13949                           ;	WRTD = OFF, Data EEPROM not write-protected
 13950  30000B                     	org	3145739
 13951  30000B  E0                 	db	224
 13952                           
 13953                           ;Config register CONFIG7L @ 0x30000C
 13954                           ;	Table Read Protection Block 0
 13955                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13956                           ;	Table Read Protection Block 1
 13957                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13958                           ;	Table Read Protection Block 2
 13959                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13960                           ;	Table Read Protection Block 3
 13961                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13962  30000C                     	org	3145740
 13963  30000C  0F                 	db	15
 13964                           
 13965                           ;Config register CONFIG7H @ 0x30000D
 13966                           ;	Boot Block Table Read Protection bit
 13967                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13968  30000D                     	org	3145741
 13969  30000D  40                 	db	64
 13970                           tosu	equ	0xFFF
 13971                           tosh	equ	0xFFE
 13972                           tosl	equ	0xFFD
 13973                           stkptr	equ	0xFFC
 13974                           pclatu	equ	0xFFB
 13975                           pclath	equ	0xFFA
 13976                           pcl	equ	0xFF9
 13977                           tblptru	equ	0xFF8
 13978                           tblptrh	equ	0xFF7
 13979                           tblptrl	equ	0xFF6
 13980                           tablat	equ	0xFF5
 13981                           prodh	equ	0xFF4
 13982                           prodl	equ	0xFF3
 13983                           indf0	equ	0xFEF
 13984                           postinc0	equ	0xFEE
 13985                           postdec0	equ	0xFED
 13986                           preinc0	equ	0xFEC
 13987                           plusw0	equ	0xFEB
 13988                           fsr0h	equ	0xFEA
 13989                           fsr0l	equ	0xFE9
 13990                           wreg	equ	0xFE8
 13991                           indf1	equ	0xFE7
 13992                           postinc1	equ	0xFE6
 13993                           postdec1	equ	0xFE5
 13994                           preinc1	equ	0xFE4
 13995                           plusw1	equ	0xFE3
 13996                           fsr1h	equ	0xFE2
 13997                           fsr1l	equ	0xFE1
 13998                           bsr	equ	0xFE0
 13999                           indf2	equ	0xFDF
 14000                           postinc2	equ	0xFDE
 14001                           postdec2	equ	0xFDD
 14002                           preinc2	equ	0xFDC
 14003                           plusw2	equ	0xFDB
 14004                           fsr2h	equ	0xFDA
 14005                           fsr2l	equ	0xFD9
 14006                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    32
    Data        0
    BSS         677
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     96     159
    BANK1           256      4     112
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2540$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2546$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2552$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2558$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2557	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2552	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2551	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2546	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2545	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2540	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2539	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S363$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1994_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[42]), 
		 -> STR_7(CODE[42]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[42]), 
		 -> STR_7(CODE[42]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[42]), 
		 -> STR_7(CODE[42]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[42]), 
		 -> STR_7(CODE[42]), STR_6(CODE[42]), STR_5(CODE[42]), STR_4(CODE[42]), 
		 -> STR_3(CODE[42]), STR_2(CODE[42]), STR_1(CODE[42]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S363$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S363$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S363$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _AMG8833_Init->_I2C_Write1ByteRegister
    _AMG8833_GetData->_Wertdetekt
    _Wertdetekt->___flmul
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  236745
                                              2 BANK1      2     2      0
                    _AMG8833_GetData
                       _AMG8833_Init
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              38     4     34   40015
                                             62 BANK0     34     0     34
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38926
                                             83 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   38399
                                             61 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29720
                                             49 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3385
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AMG8833_Init                                         2     2      0   96348
                                             24 COMRAM     2     2      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2   96348
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _AMG8833_GetData                                     16    16      0   99892
                                             41 COMRAM    16    16      0
              _I2C_Read1ByteRegister
                         _Wertdetekt
 ---------------------------------------------------------------------------------
 (2) _Wertdetekt                                          12     8      4    4273
                                             29 COMRAM    12     8      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3773
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   95155
                                             21 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AMG8833_GetData
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _Wertdetekt
       ___flmul
       ___xxtofl
   _AMG8833_Init
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     369      32        0.0%
DATA                 0      0     369       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 10 14:52:35 2022

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                        Wertdetekt@tempDataAnz 0026                                   ___fldiv@aexp 001D  
                                 ___fldiv@bexp 001C                                   ___fldiv@sign 0015  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l33 46EA                                             l51 47C8  
                                           l90 4D30                                             l93 4D04  
                                           l96 4CD8                                             l99 4D5C  
                                 ___awdiv@sign 000A                            ___wmul@multiplicand 0007  
                          __size_of_I2C_Poller 001E                          ??_I2C_DO_SEND_RESTART 0005  
                 __size_of_I2C_MasterOperation 0044                                            l102 4B9E  
                                          l302 475A                                            l311 4EF4  
                                          l135 4CAC                                            l401 4FE6  
                __size_of_I2C_MasterSendTxData 0008                                            l305 4F28  
                                          l314 3FC4                                            l330 42FC  
                                          l331 436A                                            l404 4FE2  
                                          l420 4FDA                                            l308 4F04  
                                          l253 4D88                                            l317 3FFC  
                                          l245 4EC0                                            l342 4F1C  
                                          l414 4E48                                            l423 4FB6  
                                          l272 4E26                                            l432 4FDE  
                                          l417 4FFA                                            l441 4ED4  
                                          l265 4F76                                            l249 448E  
                                          l281 4E7E                                            l521 4F3C  
                                          l426 4FEE                                            l435 4FF2  
                                          l275 4E96                                            l259 4B1C  
                                          l292 4600                                            l444 4FBC  
                                          l348 4586                                            l372 4F9E  
                                          l620 4966                                            l381 4F86  
                                          l621 497C                                            l462 4FF6  
                                          l438 4FEA                                            l366 4FAE  
                                          l710 421A                                            l518 4EAC  
                                          l630 4F32                                            l447 4FC2  
                                          l375 4F96                                            l471 4ED6  
                                          l384 4F7E                                            l624 49A8  
                                          l465 4FFE                                            l369 4FA6  
                                          l393 482E                                            l378 4F8E  
                                          l298 4E66                                            l722 450A  
                                          l490 4FD2                                            l387 4F10  
                                          l475 4EE4                                            l468 4FD6  
                                          l725 4E02                                            l662 4F5A  
                                          l719 39CA                                            l671 4F50  
                                          l665 4F6E                                            l659 4F64  
                                          l668 4F46                                            l596 4676  
                                          l956 3F38                                            l990 3B8E  
                                          l984 42C4                                            l969 416A  
                                          l995 3BD4                                            l999 4C0E  
                                 _AMG8833_Init 416C                         ??_EUSART_RxDataHandler 0001  
                                          _pad 3DB0                         fp__I2C_DO_RX_NACK_STOP 0000  
                       _I2C_MasterWaitForEvent 4ED6                 ?_EUSART_SetFramingErrorHandler 0005  
                                 ___awmod@sign 000A                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                 ___flmul@aexp 0012                                   ___flmul@bexp 0017  
                 ??_I2C_SetAddressNackCallback 000E                                   ___flmul@sign 0011  
                                 ___flmul@temp 001C                                   ___flmul@prod 0018  
                       _I2C_Write1ByteRegister 475C                                     _DataMatrix 0200  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 4F06  
                                 ___fltol@exp1 000E                                           l1022 3AD0  
                      ??_rd2RegCompleteHandler 0010                                           l1320 3212  
                                         l1312 3118                                           l1321 3200  
                                         l1307 32F4                                           l1403 4DB2  
                                         l1309 3154                                           l1253 23C0  
                                         l1318 319A                                           l1270 24DA  
                                         l1262 2690                                           l1254 23AE  
                                         l1343 2F5A                                           l1255 2374  
                                         l4000 4D1A                                           l1280 2598  
                                         l1513 18BA                                           l4002 4D2E  
                                         l4010 4D02                                           l1346 2DEC  
                                         l1339 2BF6                                           l4100 4FFC  
                                         l1356 2F1C                                           l1348 2E64  
                                         l1380 355E                                           l1612 384C  
                                         l1444 3DF6                                           l1349 2E52  
                                         l1621 3506                                           l4022 4D32  
                                         l4006 4CDA                                           l4014 4CAE  
                                         l4030 4B60                                           l4102 4F1E  
                                         l4110 4EF6                                           l1383 36BA  
                                         l1631 4C46                                           l1615 3854  
                                         l1279 25AA                                           l1295 4A94  
                                         l1447 3E38                                           l4024 4D46  
                                         l4008 4CEE                                           l4016 4CC2  
                                         l4032 4B88                                           l4200 4514  
                                         l4104 4F22                                           l4112 4EFA  
                                         l4120 4EEA                                           l1624 344A  
                                         l1449 3E74                                           l4026 4D5A  
                                         l4018 4CD6                                           l4034 4B9C  
                                         l4042 4FB2                                           l4210 4526  
                                         l4106 4F26                                           l4114 4F02  
                                         l4122 4EF2                                           l4130 3F52  
                                         l4050 4FA0                                           l1394 3652  
                                         l1387 35F6                                           l1467 1D04  
                                         l4204 451C                                           l4044 4FA8  
                                         l4052 4FA4                                           l1660 4400  
                                         l1572 488A                                           l1645 4BD6  
                                         l1485 147A                                           l1573 4892  
                                         l4062 4FD8                                           l4038 4EC2  
                                         l4206 4520                                           l4118 4EE6  
                                         l4150 3FF4                                           l4134 3F5A  
                                         l4126 3F3A                                           l4046 4FAC  
                                         l4222 4F88                                           l4070 4F7C  
                                         l4230 4F0A                                           l1566 2A4E  
                                         l1639 4A4E                                           l1583 3CD2  
                                         l1559 2B30                                           l4080 4FDC  
                                         l4216 452E                                           l4152 3FFA  
                                         l4144 3F6A                                           l4160 42C6  
                                         l4056 4F90                                           l4224 4F8C  
                                         l4232 4F0E                                           l4240 47D6  
                                         l1680 4C7C                                           l4090 4FE4  
                                         l4066 4FB8                                           l4146 3FC8  
                                         l4138 3F62                                           l4162 42D4  
                                         l4082 4F98                                           l4058 4F94  
                                         l4074 4F80                                           l4250 47E6  
                                         l1674 4950                                           l4148 3FDA  
                                         l4164 42DA                                           l4084 4F9C  
                                         l4076 4F84                                           l4068 4F78  
                                         l4228 4F06                                           l4244 47DE  
                                         l4236 47CA                                           l1668 4AD8  
                                         l1684 3DAE                                           l4094 4FE0  
                                         l4174 4302                                           l4166 42F2  
                                         l4190 4F12                                           l4238 47CE  
                                         l4510 4E4E                                           l5070 4E36  
                                         l1694 48EA                                           l4088 4FD4  
                                         l4184 4312                                           l4168 42F6  
                                         l4192 4F16                                           l4280 471A  
                                         l4272 46EC                                           l4512 4E52  
                                         l5080 4ADC                                           l5072 4E46  
                                         l6200 49A0                                           l7000 106A  
                                         l4506 4FF0                                           l4178 430A  
                                         l4194 4F1A                                           l4274 46F0  
                                         l4514 4E56                                           l5090 4B06  
                                         l5082 4AE0                                           l6202 49A4  
                                         l6210 437E                                           l7010 10BE  
                                         l7002 107A                                           l1699 48F2  
                                         l5076 4FF4                                           l4276 4700  
                                         l4508 4E4A                                           l5092 4B0E  
                                         l5084 4AF0                                           l5068 4E28  
                                         l5500 4458                                           l6300 2312  
                                         l6204 49A6                                           l6212 4390  
                                         l7020 1104                                           l7012 10C6  
                                         l7004 1088                                           l5078 4FF8  
                                         l4198 450C                                           l4278 4714  
                                         l5094 4B12                                           l5086 4AF2  
                                         l5510 4480                                           l5502 4460  
                                         l6310 2382                                           l6302 2316  
                                         l6230 21FE                                           l6222 21D2  
                                         l6206 4F2C                                           l6214 439A  
                                         l7110 1504                                           l7102 1498  
                                         l7030 1140                                           l7022 110C  
                                         l7014 10D8                                           l7006 1090  
                                         ?_pad 0017                                           l5096 4B16  
                                         l5088 4AF6                                           l5512 4484  
                                         l5504 4468                                           l5520 4E68  
                                         l5600 36A8                                           l6400 2610  
                                         l6320 23AC                                           l6312 238E  
                                         l6304 2340                                           l6240 2238  
                                         l6232 220E                                           l6224 21DE  
                                         l6216 43B8                                           l6208 436C  
                                         l7200 19B8                                           l7120 1542  
                                         l7104 14AA                                           l7112 1508  
                                         l7040 11BC                                           l7024 1110  
                                         l7016 10E6                                           l7008 10B4  
                                         l5530 4D72                                           l5098 4B1A  
                                         l5522 4F70                                           l5514 4488  
                                         l5506 4470                                           l5602 36AA  
                                         l6410 2662                                           l6402 2620  
                                         l6330 2402                                           l6322 23CE  
                                         l6314 2392                                           l6306 235C  
                                         l6250 2266                                           l6242 223E  
                                         l6234 221E                                           l6226 21EC  
                                         l6218 43EE                                           l7210 19E4  
                                         l7202 19BE                                           l7130 1590  
                                         l7122 1546                                           l7114 1510  
                                         l7106 14C6                                           l7042 11C6  
                                         l7034 1176                                           l7026 1114  
                                         l7018 10F8                                           l5532 4D76  
                                         l5508 4478                                           l5516 448C  
                                         l5700 4694                                           l5540 4F48  
                                         l6420 2680                                           l6412 2668  
                                         l6404 2630                                           l6340 243C  
                                         l6332 2410                                           l6324 23DE  
                                         l6316 23A0                                           l6308 236C  
                                         l6260 229A                                           l6252 2268  
                                         l6244 2250                                           l6236 2220  
                                         l6228 21EE                                           l7300 1CC4  
                                         l7204 19CA                                           l7212 19EA  
                                         l7220 1A18                                           l7140 1628  
                                         l7124 1558                                           l7132 1598  
                                         l7116 1522                                           l7108 14FC  
                                         l7060 129A                                           l7052 124A  
                                         l7036 1188                                           l7028 111A  
                                         l5534 4D82                                           l5526 4D5E  
                                         l5710 46E8                                           l5702 46A8  
                                         l5542 4F3E                                           l7310 36D4  
                                         l6510 3092                                           l6502 306E  
                                         l6414 266A                                           l6406 2650  
                                         l6350 24A8                                           l6342 243E  
                                         l6334 241E                                           l6318 23A2  
                                         l6270 22D6                                           l6254 2278  
                                         l6262 22A2                                           l6246 2252  
                                         l6238 2228                                           l6190 4954  
                                         l6430 4AB8                                           l7302 1CE0  
                                         l7230 1ACE                                           l7222 1A70  
                                         l7214 19FC                                           l7206 19DA  
                                         l7150 170C                                           l7142 1680  
                                         l7134 15A0                                           l7126 1566  
                                         l7118 1534                                           l7070 1312  
                                         l7054 125C                                           l7038 11A4  
                                         l7046 11EE                                           l5536 4D86  
                                         l5528 4D62                                           l3960 459C  
                                         l5480 441E                                           l5472 4404  
                                         l5704 46BC                                           l6600 2B6E  
                                         l5560 350A                                           l5720 4788  
                                         l5544 4F5C                                           l5800 4EA4  
                                         l7312 36D8                                           l6520 30E4  
                                         l6512 30AC                                           l6504 307E  
                                         l6416 2670                                           l6408 2654  
                                         l6360 2500                                           l6352 24AA  
                                         l6344 2448                                           l6336 242A  
                                         l6328 23F2                                           l6280 22EA  
                                         l6272 22DA                                           l6264 22B2  
                                         l6256 2288                                           l6248 2258  
                                         l6192 4974                                           l6424 4A96  
                                         l6432 4C48                                           l7240 1B1E  
                                         l7232 1AEA                                           l7224 1AA4  
                                         l7216 1A0E                                           l7208 19DE  
                                         l7160 17A6                                           l7152 173E  
                                         l7144 16B4                                           l7136 15B0  
                                         l7128 157E                                           l7080 13E2  
                                         l7072 1346                                           l7056 1278  
                                         l7048 1214                                           l7064 12C2  
                                         l7400 2832                                           l3970 4E1C  
                                         l3962 45D0                                           l5490 4430  
                                         l5482 4420                                           l5474 4408  
                                         l5706 46D0                                           l6610 2BA0  
                                         l6602 2B7E                                           l5562 351A  
                                         l5722 479C                                           l5714 475E  
                                         l5546 4F52                                           l5730 4C96  
                                         l5802 4EA8                                           l7330 3794  
                                         l7322 3738                                           l7314 36F6  
                                         l7306 36BC                                           l6530 3140  
                                         l6522 30F4                                           l6514 30BC  
                                         l6506 307E                                           l6418 267E  
                                         l6370 252E                                           l6354 24BA  
                                         l6338 242E                                           l6346 244E  
                                         l6290 22FE                                           l6282 22EE  
                                         l6274 22DE                                           l6266 22C4  
                                         l6258 2298                                           l6194 497E  
                                         l6426 4AA2                                           l6434 4C54  
                                         l6442 4BA0                                           l7250 1B60  
                                         l7242 1B2E                                           l7234 1AFC  
                                         l7226 1AAC                                           l7218 1A12  
                                         l7170 187E                                           l7162 17DA  
                                         l7154 1754                                           l7138 15C4  
                                         l7146 16BA                                           l7090 144C  
                                         l7074 134C                                           l7082 1414  
                                         l7066 12DC                                           l7058 1290  
                                         l7410 28D0                                           l7402 2864  
                                         l3972 4E24                                           l3964 4E80  
                                         l5492 4438                                           l5484 4422  
                                         l5476 4418                                           l5708 46D4  
                                         l6700 2ED6                                           l6620 2BE0  
                                         l6612 2BAE                                           l6604 2B84  
                                         l5580 35E0                                           l5572 3598  
                                         l5564 3528                                           l7500 3908  
                                         l5724 47B0                                           l5716 475E  
                                         l5548 4F66                                           l5740 4EAE  
                                         l5732 4C98                                           l7340 381E  
                                         l7324 374E                                           l7316 372E  
                                         l7308 36D0                                           l6540 3180  
                                         l6532 3142                                           l6524 3108  
                                         l6516 30CC                                           l6460 2F88  
                                         l6452 2F5C                                           l6372 253C  
                                         l6364 2514                                           l6380 255A  
                                         l6348 2474                                           l6356 24CA  
                                         l6292 2302                                           l6284 22F2  
                                         l6276 22E2                                           l6268 22D2  
                                         l6196 498E                                           l6188 4954  
                                         l6428 4AB4                                           l6436 4C58  
                                         l7260 1B90                                           l7252 1B6E  
                                         l7244 1B40                                           l7236 1B0A  
                                         l7180 18D6                                           l7228 1AB0  
                                         l7164 1830                                           l7172 1882  
                                         l7156 1786                                           l7148 16D8  
                                         l7092 1454                                           l7084 1424  
                                         l7076 13A6                                           l7420 2968  
                                         l7412 28DE                                           l7404 2874  
                                         l3974 4FEC                                           l3966 4E04  
                                         l3958 458A                                           l5494 4440  
                                         l5486 4426                                           l5478 441C  
                                         l6710 2F3E                                           l6702 2EEA  
                                         l6630 2C2A                                           l6622 2BE6  
                                         l6614 2BB0                                           l6606 2B94  
                                         l5590 3660                                           l5582 35EC  
                                         l5574 35A0                                           l5566 356E  
                                         l7510 398A                                           l5726 47B4  
                                         l5718 4774                                           l5750 4604  
                                         l5742 4EBE                                           l5734 4C9E  
                                         l6446 4DDE                                           l7342 3830  
                                         l7334 37CC                                           l7326 3756  
                                         l7318 3732                                           l6550 31BC  
                                         l6542 318A                                           l6534 3152  
                                         l6526 3116                                           l6518 30DC  
                                         l6470 2FC2                                           l6462 2F98  
                                         l6454 2F68                                           l6374 2544  
                                         l6366 251E                                           l6358 24F0  
                                         l6382 2568                                           l6294 2306  
                                         l6286 22F6                                           l6278 22E6  
                                         l6198 4990                                           l6438 4C70  
                                         l7270 1BF2                                           l7262 1BB6  
                                         l7254 1B76                                           l7246 1B48  
                                         l7238 1B1A                                           l7190 197C  
                                         l7182 193A                                           l7174 1892  
                                         l7166 1836                                           l7158 1796  
                                         l7094 146E                                           l7086 1428  
                                         l7078 13DA                                           l7350 3CFE  
                                         l7430 2A5E                                           l7414 290E  
                                         l7406 28A6                                           l3976 4FE8  
                                         l3968 4E14                                           l5496 4448  
                                         l5488 442E                                           l6712 2F40  
                                         l6704 2F04                                           l6640 2C7A  
                                         l6632 2C36                                           l6624 2C06  
                                         l6616 2BC0                                           l6608 2B9A  
                                         l5592 3662                                           l5584 3628  
                                         l5576 35AC                                           l5568 3584  
                                         l7512 398E                                           l5760 462A  
                                         l5752 4610                                           l5744 4FD0  
                                         l5736 4CA0                                           l5728 4C7E  
                                         l6448 4DFA                                           l7328 375E  
                                         l6800 415A                                           l6560 322E  
                                         l6552 31CA                                           l6544 3198  
                                         l6536 3164                                           l6528 3122  
                                         l6480 2FEE                                           l6472 2FC8  
                                         l6464 2FA8                                           l6456 2F76  
                                         l6392 25BA                                           l6384 256C  
                                         l6376 2548                                           l6368 252C  
                                         l6296 230A                                           l6288 22FA  
                                         l6720 4A50                                           l7280 1C38  
                                         l7272 1C0C                                           l7264 1BD2  
                                         l7256 1B7E                                           l7248 1B58  
                                         l7184 194A                                           l7192 1984  
                                         l7176 18A6                                           l7168 186A  
                                         l7088 143A                                           l7096 1486  
                                         l7360 3D4E                                           l7440 2AD2  
                                         l7424 29D8                                           l7408 28B8  
                                         l7520 4D94                                           l3978 4FBE  
                                         l5498 4450                                           l6706 2F20  
                                         l6714 2F46                                           l6650 2CBC  
                                         l6642 2C86                                           l6634 2C40  
                                         l6626 2C16                                           l6618 2BD0  
                                         l5594 3666                                           l5586 3634  
                                         l5578 35DE                                           l7514 39AA  
                                         l7506 3910                                           l5770 4674  
                                         l5762 462E                                           l5754 461E  
                                         l5746 4F34                                           l5738 4CAA  
                                         l7338 380C                                           l6730 3E88  
                                         l6802 4162                                           l6570 329A  
                                         l6562 323C                                           l6554 31F8  
                                         l6538 317A                                           l6546 31AA  
                                         l6490 3028                                           l6482 2FFE  
                                         l6474 2FCE                                           l6466 2FAA  
                                         l6458 2F78                                           l6810 425A  
                                         l6394 25C6                                           l6386 257A  
                                         l6378 2558                                           l6298 230E  
                                         l6722 4A60                                           l7290 1C88  
                                         l7282 1C48                                           l7274 1C12  
                                         l7266 1BDA                                           l7258 1B8A  
                                         l7194 1996                                           l7186 195C  
                                         l7178 18B2                                           l7362 3D60  
                                         l7354 3D0A                                           l7426 29EA  
                                         l7434 2A8A                                           l7418 293A  
                                         l7370 26B8                                           l7450 2AF8  
                                         l7530 1D10                                           l6716 2F4A  
                                         l6708 2F30                                           l6660 2D1E  
                                         l6652 2CC8                                           l6644 2C92  
                                         l6636 2C56                                           l5596 368A  
                                         l5588 3642                                           l7460 44A4  
                                         l7516 39AE                                           l7508 397E  
                                         l5860 4196                                           l5764 4632  
                                         l5756 4622                                           l5748 4602  
                                         l6740 3EAE                                           l6732 3E90  
                                         l6580 32E8                                           l6572 32B4  
                                         l6564 3266                                           l6548 31B8  
                                         l6492 303E                                           l6484 300E  
                                         l6476 2FDC                                           l6468 2FB2  
                                         l6812 4288                                           l6396 25D4  
                                         l6388 2590                                           l6900 3DD4  
                                         l7292 1C9A                                           l7284 1C4E  
                                         l7276 1C24                                           l7268 1BE0  
                                         l7196 19A4                                           l7188 196E  
                                         l7364 3D8A                                           l7356 3D18  
                                         l7348 3CD4                                           l7452 2B1E  
                                         l7436 2AB0                                           l7444 2ADE  
                                         l7428 2A1E                                           l7380 270A  
                                         l7372 26C6                                           l7540 1EC0  
                                         l7532 1D12                                           l7524 1D06  
                                         l3998 4D06                                           l6670 2DB4  
                                         l6662 2D2A                                           l6654 2CD8  
                                         l6646 2CA0                                           l6638 2C62  
                                         l6590 2B32                                           l5598 369A  
                                         l7462 44C6                                           l5870 41E6  
                                         l5862 41AE                                           l5766 463E  
                                         l5758 4626                                           l6750 3EE6  
                                         l6742 3EB6                                           l6734 3E94  
                                         l6726 3E76                                           l6582 32EA  
                                         l6574 32D0                                           l6558 3222  
                                         l6566 326A                                           l6494 304E  
                                         l6486 3010                                           l6478 2FDE  
                                         l6814 4298                                           l6806 421C  
                                         l6830 3B4E                                           l6822 3AD2  
                                         l6398 260E                                           l6910 3E1A  
                                         l6902 3DE2                                           l7294 1CA6  
                                         l7286 1C54                                           l7278 1C30  
                                         l7198 19B4                                           l7358 3D30  
                                         l7446 2AEC                                           l7438 2ABE  
                                         l7390 27A6                                           l7382 2718  
                                         l7374 26D8                                           l7470 4838  
                                         l7518 4D8A                                           l7550 2186  
                                         l7542 1F4E                                           l7534 1D16  
                                         l7526 1D0A                                           l5696 467A  
                                         l6680 2E0A                                           l6672 2DD2  
                                         l6664 2D46                                           l6656 2CF2  
                                         l6648 2CAC                                           l6592 2B3E  
                                         l7464 44FA                                           l5872 41F4  
                                         l5864 41BC                                           l5768 464A  
                                         l6760 3F12                                           l6752 3EEC  
                                         l6744 3EC8                                           l6736 3EA2  
                                         l6728 3E7A                                           l6576 32D4  
                                         l6568 3284                                           l6496 3056  
                                         l6488 3018                                           l6816 42BC  
                                         l6808 424A                                           l6840 3BD2  
                                         l6832 3B5C                                           l6824 3B00  
                                         l6920 3BF6                                           l6912 3E48  
                                         l6904 3DEE                                           l7296 1CAE  
                                         l7384 273E                                           l7376 26DC  
                                         l7368 2692                                           l7472 4846  
                                         l7552 2194                                           l7544 1FDC  
                                         l7536 1DA4                                           l7528 1D0E  
                                         l5698 467E                                           l6690 2E74  
                                         l6682 2E0E                                           l6674 2DDC  
                                         l6666 2D70                                           l6658 2D02  
                                         l6594 2B4C                                           l7458 4490  
                                         l7490 38E0                                           l7482 386E  
                                         l5874 4202                                           l5866 41CA  
                                         l5858 416C                                           l5794 4E98  
                                         l6754 3F02                                           l6746 3ED0  
                                         l6762 3F18                                           l6738 3EAA  
                                         l6770 40BC                                           l6578 32E2  
                                         l6498 305A                                           l6818 42C2  
                                         l6834 3B6E                                           l6826 3B10  
                                         l6922 3C34                                           l6930 3C74  
                                         l6914 3E5C                                           l6906 3E02  
                                         l7298 1CBE                                           l7394 27EE  
                                         l7386 2778                                           l7378 2702  
                                         l7474 486C                                           l7554 21A2  
                                         l7546 206A                                           l7538 1E32  
                                         l7660 4818                                           l6692 2E80  
                                         l6684 2E1C                                           l6676 2DEA  
                                         l6668 2DA6                                           l6596 2B4E  
                                         l7492 38E4                                           l7484 388E  
                                         l7476 3856                                           l5868 41D8  
                                         l5796 4E9C                                           l6764 3F28  
                                         l6756 3F0A                                           l6748 3ED8  
                                         l6780 40E8                                           l6772 40C0  
                                         l6836 3B7C                                           l6828 3B3E  
                                         l6844 4BD8                                           l6860 3A20  
                                         l6852 39CC                                           l6932 3C86  
                                         l6924 3C5C                                           l6908 3E16  
                                         l6940 48F4                                           l7388 2798  
                                         l7396 2800                                           l7468 4830  
                                         l7556 21B0                                           l7548 20F8  
                                         l7662 4344                                           l6694 2E8E  
                                         l6686 2E4A                                           l6678 2DFC  
                                         l6598 2B5E                                           l7494 3900  
                                         l7486 389A                                           l5798 4EA0  
                                         l6766 3F30                                           l6758 3F0C  
                                         l6790 4120                                           l6782 40F0  
                                         l6774 40CE                                           l6838 3BCC  
                                         l6846 4BEE                                           l6862 3A22  
                                         l6854 39E2                                           l6926 3C68  
                                         l6918 3BD6                                           l6942 4904  
                                         l6950 48DC                                           l7398 2822  
                                         l7664 3F9E                                           l6696 2EB8  
                                         l7488 38CE                                           l6792 4136  
                                         l6784 4102                                           l6776 40D6  
                                         l6848 4BFE                                           l6864 3A32  
                                         l6936 3CCA                                           l6960 3380  
                                         l6944 4894                                           l7666 4560  
                                         l6698 2EBC                                           l7658 377E  
                                         l6794 413E                                           l6786 410A  
                                         l6778 40DA                                           l6890 3AB0  
                                         l6874 3A5C                                           l6866 3A36  
                                         l6858 39F6                                           l6962 338E  
                                         l6970 346E                                           l6954 32F6  
                                         l6796 4144                                           l6788 4112  
                                         l6892 3AC0                                           l6884 3A84  
                                         l6876 3A66                                           l6868 3A44  
                                         l6972 34AA                                           l6956 3316  
                                         l6948 48CA                                           l6982 4C10  
                                         l6990 4A16                                           l6798 414A  
                                         l6886 3A90                                           l6878 3A70  
                                         l6974 34BE                                           l6966 33FE  
                                         l6958 336C                                           l6992 4A44  
                                         l6888 3AA0                                           l6976 34E6  
                                         l6968 343A                                           l6896 3DB0  
                                         l6994 4A48                                           l6986 49FE  
                                         l6978 34F6                                           l6898 3DC0  
                                         l6988 4A02                                           l6998 1060  
                                         STR_1 1021                                           STR_2 1021  
                                         STR_3 1021                                           STR_4 1021  
                                         STR_5 1021                                           STR_6 1021  
                                         STR_7 1021                                           STR_8 1021  
                                         STR_9 1048                                           u3000 459C  
                                         u3001 4598                                           u3010 4E14  
                                         u3011 4E10                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u3050 4ED2                                           u3051 4ECC  
                                         u3060 3F4E                                           u3108 4320  
                                         u3061 3F4A                                           u3109 4332  
                                         u3118 453C                                           u3119 454E  
                                         u3056 4ED4                                           u3080 3FF4  
                                         u3128 47F4                                           u3208 4744  
                                         u3081 3FF0                                           u3129 4806  
                                         u3209 4756                                           u3090 42F2  
                                         u3170 4EE4                                           u3091 42EE  
                                         u3171 4EE0                                           u3180 4700  
                                         u3181 46FC                                           u3078 3F78  
                                         u3190 4714                                           u3079 3F8C  
                                         u3191 4710                                           u6000 4974  
                                         u6001 4970                                           u6010 49A0  
                                         u6011 499C                                           u6100 2266  
                                         u6020 437E                                           u6101 2262  
                                         u6021 437A                                           u6110 2278  
                                         u6030 4390                                           u6111 2274  
                                         u6031 438C                                           u3640 4E66  
                                         u5400 35DA                                           u7000 4120  
                                         u6200 23C0                                           u6120 2288  
                                         u6040 43B8                                           u3641 4E62  
                                         u5401 35D6                                           u7001 411C  
                                         u6201 23BC                                           u6121 2284  
                                         u6041 43B4                                           u5410 3624  
                                         u7010 4136                                           u6210 23CE  
                                         u6130 22C4                                           u6050 43EE  
                                         u5411 3620                                           u7011 4132  
                                         u6211 23CA                                           u6131 22C0  
                                         u6051 43EA                                           u5340 4418  
                                         u5420 3642                                           u7020 415A  
                                         u7100 3BCC                                           u6300 252C  
                                         u6220 23DE                                           u6140 22D2  
                                         u6060 21EC                                           u5341 4414  
                                         u5421 363E                                           u7021 4156  
                                         u7101 3BC8                                           u6301 2528  
                                         u6221 23DA                                           u6141 22CE  
                                         u6061 21E8                                           u5350 4D72  
                                         u5430 3652                                           u7030 424A  
                                         u7110 4BEE                                           u6310 253C  
                                         u6230 2410                                           u6150 2340  
                                         u6070 21FE                                           u5351 4D6E  
                                         u5431 364E                                           u7031 4246  
                                         u7111 4BEA                                           u6311 2538  
                                         u6231 240C                                           u6151 233C  
                                         u6071 21FA                                           u5440 3660  
                                         u7040 4288                                           u6400 2620  
                                         u6320 2558                                           u6240 241E  
                                         u6160 2358                                           u6080 220E  
                                         u7120 39E2                                           u7200 3DE2  
                                         u8000 1C82                                           u5441 365C  
                                         u7041 4284                                           u6401 261C  
                                         u6321 2554                                           u6241 241A  
                                         u6161 2352                                           u6081 220A  
                                         u7121 39DE                                           u7201 3DDE  
                                         u8001 1C7C                                           u4650 4E36  
                                         u5610 4694                                           u5450 369A  
                                         u5370 351A                                           u7050 42BC  
                                         u6410 2630                                           u6330 2568  
                                         u6250 243C                                           u6170 235A  
                                         u6090 2250                                           u7130 3A16  
                                         u7210 3E38                                           u8010 1C84  
                                         u4651 4E32                                           u5611 4690  
                                         u5451 3696                                           u5371 3516  
                                         u7051 42B8                                           u6411 262C  
                                         u6331 2564                                           u6251 2438  
                                         u6091 224C                                           u7211 3E34  
                                         u4660 4AF0                                           u5620 46E8  
                                         u5460 36A8                                           u5380 3528  
                                         u6500 2F88                                           u7060 3B00  
                                         u6420 2650                                           u6340 257A  
                                         u6260 2474                                           u6180 2382  
                                         u7140 3A44                                           u7220 3E48  
                                         u7300 493E                                           u8020 1C9A  
                                         u8100 3CFE                                           u4661 4AEC  
                                         u5621 46E4                                           u5461 36A4  
                                         u5381 3524                                           u6501 2F84  
                                         u7061 3AFC                                           u6421 264C  
                                         u6341 2576                                           u6261 2470  
                                         u6181 237E                                           u7141 3A40  
                                         u7221 3E44                                           u8021 1C96  
                                         u8101 3CFA                                           u4670 4B06  
                                         u5390 3584                                           u5630 4774  
                                         u8030 36F6                                           u6510 2F98  
                                         u7070 3B3E                                           u6430 2662  
                                         u6350 2590                                           u6270 24BA  
                                         u6190 23A0                                           u7150 3A58  
                                         u7230 3C16                                           u7310 4950  
                                         u8110 3D30                                           u4671 4B02  
                                         u5391 3580                                           u5631 4770  
                                         u8031 36F2                                           u6511 2F94  
                                         u7071 3B3A                                           u6431 265E  
                                         u6351 258C                                           u6271 24B6  
                                         u6191 239C                                           u7151 3A54  
                                         u7135 3A0C                                           u7311 494C  
                                         u8111 3D2C                                           u5640 47C8  
                                         u8040 372E                                           u6600 3164  
                                         u6520 2FDC                                           u7080 3B5C  
                                         u6440 267E                                           u6360 25A6  
                                         u6280 24F0                                           u7160 3A80  
                                         u7240 3C34                                           u7400 341E  
                                         u7320 48C4                                           u8120 3D4E  
                                         u8200 2800                                           u5641 47C4  
                                         u8041 372A                                           u6601 3160  
                                         u6521 2FD8                                           u7081 3B58  
                                         u6441 267A                                           u6361 25A2  
                                         u6281 24EC                                           u7161 3A7C  
                                         u7241 3C30                                           u7321 48BE  
                                         u8121 3D4A                                           u8201 27FC  
                                         u8050 374A                                           u6610 317A  
                                         u6530 2FEE                                           u7090 3B7C  
                                         u6370 25BA                                           u6290 2500  
                                         u7170 3AA0                                           u7250 3C5C  
                                         u7410 343A                                           u6450 4AD8  
                                         u7330 48C6                                           u8130 3D60  
                                         u8210 2832                                           u8051 3746  
                                         u6611 3176                                           u6531 2FEA  
                                         u7091 3B78                                           u6371 25B6  
                                         u6291 24FC                                           u7171 3A9C  
                                         u7251 3C58                                           u7235 3C0C  
                                         u7411 3436                                           u6451 4AD4  
                                         u7307 4934                                           u8131 3D5C  
                                         u8211 282E                                           u8300 3900  
                                         u8060 3806                                           u6700 32B4  
                                         u6620 3198                                           u6540 2FFE  
                                         u6380 25D4                                           u7180 3AB0  
                                         u7260 3C86                                           u7420 348E  
                                         u6460 4C70                                           u7340 48DC  
                                         u7500 10D8                                           u8140 3D8A  
                                         u8220 2874                                           u8301 38FC  
                                         u8061 3800                                           u6701 32B0  
                                         u6621 3194                                           u6541 2FFA  
                                         u6381 25D0                                           u7181 3AAC  
                                         u7261 3C82                                           u7405 3414  
                                         u6461 4C6C                                           u7341 48D8  
                                         u7501 10D4                                           u8141 3D86  
                                         u8221 2870                                           u8070 3808  
                                         u6710 32E2                                           u6630 31B8  
                                         u6550 303E                                           u6390 260E  
                                         u7430 34AA                                           u7350 333E  
                                         u7190 3DC0                                           u6470 4BD0  
                                         u7510 10E6                                           u8230 28B8  
                                         u8150 26B8                                           u6711 32DE  
                                         u6631 31B4                                           u6551 303A  
                                         u6391 260A                                           u7431 34A6  
                                         u7191 3DBC                                           u6471 4BCA  
                                         u7511 10E2                                           u8231 28B4  
                                         u8151 26B4                                           u6800 2D90  
                                         u6720 2B4C                                           u8320 39AA  
                                         u8080 381E                                           u6640 31CA  
                                         u6560 307E                                           u7280 3CC0  
                                         u7440 34E6                                           u7360 336C  
                                         u6480 4BD2                                           u7600 125C  
                                         u7520 10F8                                           u8240 2968  
                                         u8160 2702                                           u6721 2B48  
                                         u8321 39A6                                           u8081 381A  
                                         u6641 31C6                                           u6561 307A  
                                         u7281 3CBA                                           u7441 34E2  
                                         u7425 3484                                           u7361 3368  
                                         u7601 1258                                           u7521 10F4  
                                         u8241 2964                                           u8161 26FE  
                                         u6810 2DEA                                           u6730 2B5E  
                                         u8330 39CA                                           u7450 4C40  
                                         u8090 3830                                           u6650 31F8  
                                         u6570 30F4                                           u6490 2F76  
                                         u7290 3CC2                                           u7370 338E  
                                         u7610 130E                                           u7530 1140  
                                         u8250 29D2                                           u8170 273E  
                                         u6811 2DE6                                           u6731 2B5A  
                                         u8331 39C6                                           u8315 393A  
                                         u7451 4C3A                                           u8091 382C  
                                         u6651 31F4                                           u6571 30F0  
                                         u6491 2F72                                           u7275 3C98  
                                         u7371 338A                                           u7355 3334  
                                         u7611 130A                                           u7531 113C  
                                         u8251 29CC                                           u8171 273A  
                                         u6900 2F3E                                           u6820 2E0A  
                                         u6740 2B6E                                           u7460 4C42  
                                         u6660 320E                                           u6580 3116  
                                         u7700 14FC                                           u7620 13A2  
                                         u7540 116E                                           u8260 29D4  
                                         u8180 27E8                                           u6901 2F3A  
                                         u6821 2E06                                           u6805 2D86  
                                         u6741 2B6A                                           u6661 320A  
                                         u6581 3112                                           u7701 14F8  
                                         u7621 139E                                           u7541 1168  
                                         u8181 27E2                                           u6830 2E1C  
                                         u6750 2BAE                                           u7470 4A16  
                                         u6910 3E88                                           u6670 3222  
                                         u6590 3140                                           u7390 33FA  
                                         u7710 1522                                           u7630 1414  
                                         u7550 1170                                           u8270 29EA  
                                         u8190 27EA                                           u6831 2E18  
                                         u6751 2BAA                                           u7471 4A12  
                                         u6911 3E84                                           u6671 321E  
                                         u6591 313C                                           u7391 33F6  
                                         u7711 151E                                           u7631 1410  
                                         u8271 29E6                                           u6840 2E4A  
                                         u6760 2BC0                                           u7480 4A44  
                                         u6920 3EA2                                           u6680 323C  
                                         u7800 1796                                           u7720 1534  
                                         u7640 143A                                           u7560 1188  
                                         u8280 2AB0                                           u6841 2E46  
                                         u6761 2BBC                                           u7481 4A40  
                                         u6921 3E9E                                           u6681 3238  
                                         u7385 33A2                                           u7801 1792  
                                         u7721 1530                                           u7641 1436  
                                         u7561 1184                                           u8281 2AAC  
                                         u6850 2E60                                           u6770 2BD0  
                                         u6930 3EC8                                           u6690 3284  
                                         u7386 33AC                                           u7810 1830  
                                         u7730 1542                                           u7650 144C  
                                         u7570 1214                                           u7490 1088  
                                         u8290 488A                                           u6851 2E5C  
                                         u6771 2BCC                                           u6931 3EC4  
                                         u6691 3280                                           u7387 33BC  
                                         u7811 182C                                           u7731 153E  
                                         u7651 1448                                           u7571 1210  
                                         u7491 1084                                           u8291 4886  
                                         u8347 21BC                                           u6860 2E74  
                                         u6780 2C06                                           u6940 3EE6  
                                         u7900 19FC                                           u7820 187E  
                                         u7740 1558                                           u7660 146E  
                                         u7580 1242                                           u6861 2E70  
                                         u6781 2C02                                           u8357 41A0  
                                         u6941 3EE2                                           u7901 19F8  
                                         u7821 187A                                           u7741 1554  
                                         u7661 146A                                           u7581 123C  
                                         u6870 2E8E                                           u6790 2C16  
                                         u6950 3F02                                           u5990 4966  
                                         u7910 1ACE                                           u7830 18A6  
                                         u7750 1566                                           u7670 1494  
                                         u7590 1244                                           u6871 2E8A  
                                         u6791 2C12                                           u8367 420C  
                                         u6951 3EFE                                           u5991 4962  
                                         u7911 1ACA                                           u7831 18A2  
                                         u7751 1562                                           u7671 1490  
                                         u6880 2ED6                                           u6960 3F28  
                                         u7920 1AEA                                           u7840 194A  
                                         u7760 1590                                           u7680 14AA  
                                         u6881 2ED2                                           u8377 38D4  
                                         u6961 3F24                                           u7921 1AE6  
                                         u7841 1946                                           u7761 158C  
                                         u7681 14A6                                           u6890 2F04  
                                         u6970 40CE                                           u7930 1AFC  
                                         u7850 195C                                           u7770 16D8  
                                         u7690 14C6                                           u6891 2F00  
                                         u6971 40CA                                           u7931 1AF8  
                                         u7851 1958                                           u7771 16D4  
                                         u7691 14C2                                           u6980 40E8  
                                         u7940 1B0A                                           u7860 196E  
                                         u7780 173E                                           u6981 40E4  
                                         u7941 1B06                                           u7861 196A  
                                         u7781 173A                                           u6990 4102  
                                         u7950 1B40                                           u7870 197C  
                                         u7790 1786                                           u6991 40FE  
                                         u7951 1B3C                                           u7871 1978  
                                         u7791 1782                                           u7960 1B6E  
                                         u7880 1996                                           u7961 1B6A  
                                         u7881 1992                                           u7970 1BF2  
                                         u7890 19A4                                           u7971 1BEE  
                                         u7891 19A0                                           u7980 1C0C  
                                         u7981 1C08                                           u7990 1C24  
                                         u7991 1C20                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 0118  
                                         _atoi 36BC                                           _main 1D06  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00F3  
                                         _nout 00EF                                           pad@i 001E  
                                         pad@p 001B                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0020                                           fsr2l 000FD9  
                             __end_of_I2C_Open 4490                                           btemp 005B  
                                ___fpclassifyf 3BD6                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                              ___fldiv@new_exp 0016                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 _tolower$2262 0011                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_pad 001D  
                             ?_I2C_MasterClose 0001                                  ?_EUSART_Write 0001  
          __size_of_I2C_SetAddressNackCallback 0018                 __size_of_OSCILLATOR_Initialize 000A  
                             ?_I2C_MasterStart 0001                                  _I2C_DO_RX_ACK 4F88  
                             ?_I2C_MasterWrite 0001                  __end_of_OSCILLATOR_Initialize 4F3E  
                                ___fltol@sign1 000D                                          ?_atoi 000C  
                              __end_of___fladd 2692                                          ?_main 0001  
                              __end_of___fldiv 32F6                                __end_of___awdiv 3F3A  
                              __end_of___flneg 4C10                                          STR_10 1048  
                                        STR_11 1048                                          STR_20 105B  
                                        STR_12 104B                                          STR_13 1053  
                                        STR_22 105B                                          STR_16 104F  
                                        STR_17 1057                                __end_of___awmod 416C  
                              __end_of___flmul 2F5C                                __end_of___flsub 4A96  
                              __end_of___fltol 3AD2                                          _ANSEL 000F7E  
                        _I2C_Read1ByteRegister 4678                                ___awdiv@divisor 0007  
                                        i2l501 009C                                          i2l633 4B5C  
                                        i2l650 5000                                          i2l643 40BA  
                                        i2l636 4B5E                                          i2l653 4FC8  
                                        i2l647 4DDC                                          i2l656 4FCE  
                                        i2l496 0062                                          i2l497 009C  
                              ___awdiv@counter 0009                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 0040                                          _SPBRG 000FAF  
                            ??_I2C_DO_TX_EMPTY 0010                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                            __end_of_I2C_DO_RX 436C                              __end_of_I2C_DO_TX 3FFE  
                                        _flags 00F5                                          _fputc 436C  
                            __end_of_I2C_Close 4D8A                                          _fputs 4A96  
                              __end_of_isdigit 4C48                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          atoi@n 0019  
                                        pad@fp 0017                                          atoi@s 000C  
                                        _width 00F1                                          _putch 4F2A  
                      _I2C_MasterEnableRestart 4FEC                                __end_of_isspace 4A50  
                              __end_of_isupper 4BD8                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                               ?___fpclassifyf 0005                                __end_of_tolower 48F4  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                              __end_of_strncmp 3DB0                             ??_I2C_DO_SEND_STOP 0005  
                     fp__rd1RegCompleteHandler 0000                                __initialization 49AA  
                                 __end_of_atoi 3856                                   __end_of_main 21D2  
                     fp__wr1RegCompleteHandler 0000              __size_of_I2C_DO_SEND_RESTART_READ 0008  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_atoi 000E  
                                       ??_main 016E                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                              ?_I2C_MasterSetIrq 0001  
                           ??_I2C_MasterIsNack 0005                             ??_I2C_MasterSetIrq 0005  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 5002  
   __size_of_EUSART_DefaultFramingErrorHandler 0002            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 5000  
                   _EUSART_OverrunErrorHandler 016A                __end_of_I2C_CallbackReturnReset 4FE4  
                              _AMG8833_GetData 3856                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                             ___awdiv@dividend 0005                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l6040 0028  
                                       i2l6042 0036                                         i2l6044 0044  
                                       i2l6046 0070                                         i2l6038 001A  
                                       i2l6048 007E                                         i2l5550 4DB4  
                                       i2l5552 4DC4                                         i2l5554 4DC6  
                                       i2l5556 4DD6                                         i2l5558 4DDA  
                                       i2l5830 4B40                                         i2l5840 400E  
                                       i2l5832 4B42                                         i2l5850 4064  
                                       i2l5842 401C                                         i2l5834 4B52  
                                       i2l5826 4B1E                                         i2l5772 4FC4  
                                       i2l5852 407C                                         i2l5844 402C  
                                       i2l5836 4B56                                         i2l5828 4B30  
                                       i2l5774 4FCA                                         i2l5854 4098  
                                       i2l5846 4046                                         i2l5838 3FFE  
                                       i2l5856 40B6                                         i2l5848 4054  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 36BC                            _I2C_MasterGetRxData 4FD8  
                                 vfprintf@cfmt 0054                                         ___flge 3AD2  
                                       ___fleq 421C                                      ??___fladd 000D  
                                       ___wmul 4DDE                                      ??___fldiv 000D  
                                _I2C_MasterFsm 46EC                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 000D                                      ??___flsub 0026  
                                    ??___fltol 0009                                         _efgtoa 1060  
                          _EUSART_Transmit_ISR 4B1E                                         _floorf 32F6  
                                       clear_0 49B2                                         clear_1 49C6  
                                       clear_2 49D8                                         clear_3 49E4  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                       ?_I2C_Read1ByteRegister 0016                        __size_of_I2C_MasterOpen 0022  
                                       isa$std 000001                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 4D8A                                         pad@buf 0019  
                                _I2C_SetBuffer 4E04                             __end_of_I2C_Poller 4E68  
                                       _strcpy 48F4                                         _strlen 4C48  
                 __end_of_I2C_MasterDisableIrq 4FF8                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 47CA  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 4E80  
                   _I2C_SetAddressNackCallback 4E68                                ___fpclassifyf@e 000D  
                              ___fpclassifyf@u 000F                                ___fpclassifyf@x 0005  
                                 __mediumconst 0000                                      ??_isspace 0007  
                                       tblptrh 000FF7                                      ??_isupper 0007  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 4894  
                                    ??_tolower 000D                                      ??_strncmp 000B  
                         ?_EUSART_Transmit_ISR 0001                                     _Wertdetekt 4490  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 001E  
                                   ___flge@ff2 0022                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 4E98                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 49F4  
                                   ___flneg@f1 0005                            _I2C_MasterOperation 4ADA  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 4F48          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4F3E                        _rdBlkRegCompleteHandler 4B60  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4FE4                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 4402                                  __end_of_fputs 4ADA  
                                __end_of_putch 4F34                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 4EF6  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                      __end_of_AMG8833_GetData 39CC                          ??_I2C_MasterGetRxData 0005  
                      ?_I2C_Write1ByteRegister 0016                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 0100                     __end_of_I2C_MasterClearIrq 5000  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 4EAE                                        ??_fputs 0014  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 0006  
                            _I2C_MasterSendAck 4FB8                                     __pbssBANK0 00C0  
                                   __pbssBANK1 0100                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                           __end_of_EUSART_Write 49AA  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 4D06  
                 __end_of_I2C_MasterSendTxData 4FB8                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 4FDC                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 4D5E  
                  __size_of_EUSART_Receive_ISR 00BE                            _I2C_DO_RX_NACK_STOP 4F80  
                        _rd1RegCompleteHandler 4D06                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 4FC4                          _wr1RegCompleteHandler 4CAE  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                                      ?___flge 001E                  ?_EUSART_SetTxInterruptHandler 0005  
                                      ?___fleq 0005               _EUSART_TxDefaultInterruptHandler 00FC  
                  __end_of_I2C_DO_SEND_RESTART 4FA0                                _I2C_DO_TX_EMPTY 450C  
                          I2C_SetBuffer@buffer 0005                                        ?___wmul 0005  
                                      ?_efgtoa 0032                 __end_of_I2C_MasterWaitForEvent 4EE6  
                          ??_I2C_MasterStartRx 0005                  __size_of_I2C_DO_SEND_ADR_READ 0010  
                                      ?_floorf 001E                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 0014                                        ?_printf 009E  
               I2C_SetDataCompleteCallback@ptr 000C                 __end_of_I2C_Write1ByteRegister 47CA  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 4FA8  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0056  
                                    ?___xxtofl 0005                             __size_of_vfpfcnvrt 04A0  
                __size_of_EUSART_RxDataHandler 002A                      __end_of_I2C_MasterSendAck 4FBE  
                                      _OSCTUNE 000F9B                       ??_EUSART_SetErrorHandler 0007  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                                    ?_Wertdetekt 001E  
                    __end_of_I2C_MasterStartRx 4FE0                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 42C6  
                                    _I2C_DO_TX 3F3A               __end_of_I2C_DO_SEND_RESTART_READ 4FB0  
                 I2C_Read1ByteRegister@address 0017                                      _I2C_Close 4D5E  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 4FF4  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 4F2A                            __end_of_I2C_DO_RCEN 4F1E  
                                   _readBuffer 00EC                                __size_of___flge 0104  
                              __size_of___fleq 00AA                                        ___fladd 21D2  
                                      ___fldiv 2F5C                                        ___awdiv 3E76  
                                      ___flneg 4BD8                                        ___awmod 40BC  
                                      ___flmul 2B32                                        ___flsub 4A50  
                                      ___fltol 39CC                                ??_I2C_SetBuffer 0009  
                              __size_of___wmul 0026                                      ?_vfprintf 0098  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                              __size_of_efgtoa 0CA6                                 _I2C_MasterOpen 4E28  
                              __size_of_floorf 0212                                        __pcinit 49AA  
                               _I2C_MasterStop 4FE8                                 _I2C_Initialize 4EAE  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 1D06                                        __ptext1 4D8A  
                                      __ptext2 4830                                        __ptext3 2692  
                                      __ptext4 3CD4                                        __ptext5 1060  
                                      __ptext6 4894                                        __ptext7 4BA0  
                                      __ptext8 48F4                                        __ptext9 3DB0  
                              __size_of_printf 002A                          ??_I2C_DO_RX_NACK_STOP 0005  
                              __size_of_strcpy 005E                                __size_of_strlen 0036  
                             ?_AMG8833_GetData 0001                          _OSCILLATOR_Initialize 4F34  
                                 __size_of_pad 00C6                                        _isdigit 4C10  
                                   ??___xxtofl 0009                               ___awmod@dividend 0005  
                           I2C_SetCallback@idx 0009                       __size_of_I2C_MasterClose 0004  
                     ??_PIN_MANAGER_Initialize 0005                  I2C_CallbackReturnReset@funPtr 000E  
                                      _isspace 49FE                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                                        _isupper 4BA0  
                                      efgtoa@c 0038                                        efgtoa@d 0078  
                                      efgtoa@e 0090                                        efgtoa@f 0034  
                                      efgtoa@g 008C                                        efgtoa@h 0082  
                                      efgtoa@i 008A                                        efgtoa@l 0086  
                                      efgtoa@m 0072                                        efgtoa@n 0092  
                                      efgtoa@p 007C                                        efgtoa@t 006C  
                                      efgtoa@u 0094                                        efgtoa@w 007E  
                    I2C_Write1ByteRegister@reg 0016                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 4894                                        _strncmp 3CD4  
                         end_of_initialization 49F4                                        floorf@e 002C  
                                      floorf@m 0028                                        floorf@u 002E  
                                      floorf@x 001E                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4F5C  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4F52  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 4588  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                            _EUSART_Initialize 4602                         ?_wr1RegCompleteHandler 000E  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 2B32  
                                   efgtoa@mode 0081                                     efgtoa@sign 007A  
                                    _RCSTAbits 000FAB                                        postdec1 000FE5  
                                      postdec2 000FDD                        ??_I2C_Read1ByteRegister 0017  
                       __end_of_I2C_MasterOpen 4E4A                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 4FEC  
                       __end_of_I2C_Initialize 4EC2                                     ??_vfprintf 0054  
                    fp__I2C_CallbackReturnStop 0000                                        strcpy@d 000D  
                                      strlen@a 0007                                        strcpy@s 000B  
                                      strlen@s 0005                            __size_of_Wertdetekt 007C  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 4BA0                           _I2C_MasterSendTxData 4FB0  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                                  ___fladd@grs 0014                                  ___xxtofl@sign 000D  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                                    ___fldiv@grs 0018  
                                  ___fldiv@rem 0011                              __size_of_I2C_Open 008E  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                                  ___flmul@grs 0013                      __end_of_EUSART_Initialize 4678  
                                  _I2C_DO_IDLE 4F1E                                    _I2C_DO_RCEN 4F12  
                   rdBlkRegCompleteHandler@ptr 000E                  I2C_Write1ByteRegister@address 0018  
                                    _TXSTAbits 000FAC                        ?_I2C_CallbackReturnStop 000E  
                     _I2C_DO_SEND_RESTART_READ 4FA8                    fp__I2C_DO_SEND_RESTART_READ 0000  
                 I2C_CallbackReturnStop@funPtr 000E                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 4FD4                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 4FE0  
                     I2C_Read1ByteRegister@reg 0016                     fp__I2C_CallbackReturnReset 0000  
                               __end_of___flge 3BD6                                 __end_of___fleq 42C6  
           __end_of_EUSART_DefaultErrorHandler 4FD0                     _EUSART_DefaultErrorHandler 4FCA  
                                  vfpfcnvrt@ap 0042                                    vfpfcnvrt@ct 0050  
                                  vfpfcnvrt@fp 003E                                 __end_of___wmul 4E04  
         __size_of_I2C_SetDataCompleteCallback 0018                                 __end_of_efgtoa 1D06  
                                 _EUSART_Write 4952                                 __end_of_floorf 3508  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                                   floorf@F527 00E4                                  ?_AMG8833_Init 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 4DB4  
                               __end_of_strcpy 4952                                 __end_of_strlen 4C7E  
                          start_initialization 49AA                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_pad 3E76                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                          __end_of___fpclassifyf 3CD4  
                            ??_I2C_MasterWrite 0016                 __end_of_I2C_CallbackReturnStop 4FE8  
                       _I2C_DO_RX_NACK_RESTART 4F78                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 4FFC                                      _Temp_Data 0300  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 009A  
                   _EUSART_FramingErrorHandler 00F8                                       ??___flge 0026  
                                     ??___fleq 000D                                       ??___wmul 0009  
                       _EUSART_SetErrorHandler 4F66                            ?_I2C_MasterClearIrq 0001  
                                     ??_efgtoa 0039                    __end_of_I2C_MasterGetRxData 4FDC  
                                     ??_floorf 0022                          __end_of_I2C_DO_RX_ACK 4F90  
                       AMG8833_GetData@pointer 0032                               _I2C_DO_SEND_STOP 4F90  
                               ??_AMG8833_Init 0019                              ??_I2C_SetCallback 0009  
                                     ??_printf 0056                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 4FBE  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 0009                                      ___fladd@b 0005  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                                    ___fldiv@a 0009                                      ___fldiv@b 0005  
                  __end_of_EUSART_Transmit_ISR 4B60                          _I2C_DO_SEND_ADR_WRITE 4EE6  
                                    ___flmul@a 0009                                      ___flmul@b 0005  
                                  __pbssCOMRAM 0056                                      ___flsub@a 0022  
                                    ___flsub@b 001E                                  __pcstackBANK0 0060  
                                __pcstackBANK1 016C                                 ??_I2C_DO_RESET 0005  
                          ?_I2C_MasterSendNack 0001                              __size_of___xxtofl 01B4  
                 __end_of_I2C_DO_SEND_ADR_READ 4F06                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 4830                                   ??_Wertdetekt 0022  
                   __end_of_EUSART_Receive_ISR 40BC                               _I2C_MasterIsNack 4EC2  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 4FA0  
             _EUSART_RxDefaultInterruptHandler 00FA                               _I2C_MasterSetIrq 4FD4  
                                    _atoi$2173 0014                                      _atoi$2174 0018  
                                    _atoi$2175 0016                                      __pnvBANK0 00F8  
                                    __pnvBANK1 0168                          _rd2RegCompleteHandler 4CDA  
                                  _efgtoa$2110 0062                                    _efgtoa$2120 0068  
                                  _efgtoa$2121 006A                                    _efgtoa$2115 0064  
                                  _efgtoa$2109 0060                                    _efgtoa$2119 0066  
                 __end_of_EUSART_RxDataHandler 4DDE                         _PIN_MANAGER_Initialize 4C7E  
                        _wr2RegCompleteHandler 4D32                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 4B1E                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___fladd 0005                                       ?___fldiv 0005  
                                     ?___awdiv 0005                                      __ptext100 5000  
                                    __ptext101 4FCA                                      __ptext102 4DB4  
                                     ?___flneg 0005                                      __ptext103 0000  
                                     ?___awmod 0005                                       ?___flmul 0005  
                                     ?___flsub 001E                                       ?___fltol 0005  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                      __end_of_i2c_fsmStateTable 1021  
                 ??_INTERRUPT_InterruptManager 0001                             __end_of_Wertdetekt 450C  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FE  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 4402                                       ?_isspace 0005  
                                     ?_isupper 0005                                       ?_tolower 000B  
                               __size_of_fputc 0096                                 __size_of_fputs 0044  
                      ??_rd1RegCompleteHandler 0010                                       ?_strncmp 0005  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 4FD0  
                               _eusartRxBuffer 0108                        ??_wr1RegCompleteHandler 0010  
                               _eusartTxBuffer 0110                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00F7            __size_of_INTERRUPT_InterruptManager 00A8  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0007  
                                     _PIR2bits 000FA1                                       i2u536_40 4DD6  
                                     i2u536_41 4DD2                                       i2u570_40 401C  
                                     i2u570_41 4018                                       i2u572_40 4054  
                                     i2u571_48 4032                                       i2u572_41 4050  
                                     i2u571_49 4046                                       i2u574_40 4098  
                                     i2u573_48 406A                                       i2u574_41 4094  
                                     i2u573_49 407C                                       i2u575_48 409E  
                                     i2u568_40 4B30                                       i2u592_40 0028  
                                     i2u575_49 40B2                                       i2u568_41 4B2C  
                                     i2u592_41 0024                                       i2u569_40 4B52  
                                     i2u593_40 0036                                       i2u569_41 4B4E  
                                     i2u593_41 0032                                       i2u594_40 0044  
                                     i2u594_41 0040                                       i2u596_40 0070  
                                     i2u595_48 004A                                       i2u596_41 006C  
                                     i2u595_49 005E                                       i2u597_40 007E  
                                     i2u597_41 007A                                       i2u598_48 0084  
                                     i2u598_49 0098                          __end_of_I2C_MasterFsm 475C  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 4F88  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 4FCA  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 4FC4  
              __end_of_I2C_MasterEnableRestart 4FF0                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                 __size_of_I2C_Read1ByteRegister 0074  
                __end_of_I2C_Read1ByteRegister 46EC                                      _vfpfcnvrt 2692  
                        __end_of_I2C_SetBuffer 4E28                             Wertdetekt@tempData 0024  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                 _isspace$2204 000B                                     vfpfcnvrt@c 0053  
                                   vfpfcnvrt@f 004C                                    _INTCON2bits 000FF1  
                   ??_I2C_DO_SEND_RESTART_READ 0005                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000E                       __size_of_AMG8833_GetData 0176  
                                   _I2C_Poller 4E4A                                     _I2C_Status 00C0  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                           __end_of_AMG8833_Init 421C  
                        fp__EUSART_Receive_ISR 0000                               ??_I2C_MasterOpen 0005  
                       ?_wr2RegCompleteHandler 000E                               ??_I2C_MasterStop 0005  
                     ??_I2C_MasterWaitForEvent 0005                               ??_I2C_Initialize 0005  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                   vfprintf@ap 009C                                       __Lrparam 0000  
                                   vfprintf@fp 0098                           __end_of_I2C_DO_RESET 4F12  
                     ??_I2C_Write1ByteRegister 0018                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 0168                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 4EF6                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 003E  
             I2C_Read1ByteRegister@returnValue 0018                             ___fpclassifyf@F465 00E8  
                              _I2C_MasterClose 4FF8                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                                       ___xxtofl 3508  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 4FF0  
                              _I2C_MasterWrite 4F70                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 4DB4                               __size_of_isspace 0052  
                                     __ptext10 4C48                                       __ptext11 4A96  
                                     __ptext20 4BD8                                       __ptext12 436C  
                                     __ptext21 3AD2                                       __ptext13 4F2A  
                                     __ptext30 4E98                                       __ptext22 421C  
                                     __ptext14 4952                                       __ptext31 4C7E  
                                     __ptext23 2F5C                                       __ptext15 32F6  
                                     __ptext40 4F66                                       __ptext32 4F34  
                                     __ptext24 40BC                                       __ptext16 3BD6  
                                     __ptext41 416C                                       __ptext33 4FD0  
                                     __ptext25 3E76                                       __ptext17 39CC  
                                     __ptext50 4E28                                       __ptext42 475C  
                                     __ptext34 4EAE                                       __ptext26 36BC  
                                     __ptext18 4A50                                       __ptext51 4F70  
                                     __ptext43 3856                                       __ptext35 4602  
                                     __ptext27 49FE                                       __ptext19 21D2  
                                     __ptext60 4F88                                       __ptext52 4ADA  
                                     __ptext44 4490                                       __ptext36 4F3E  
                                     __ptext28 4C10                                       __ptext61 4F90  
                                     __ptext53 4E4A                                       __ptext45 3508  
                                     __ptext37 4F48                                       __ptext29 4DDE  
                                     __ptext70 4F1E                                       __ptext62 4F98  
                                     __ptext54 4ED6                                       __ptext46 2B32  
                                     __ptext38 4F52                                       __ptext71 450C  
                                     __ptext63 4FA0                                       __ptext55 46EC  
                                     __ptext47 4678                                       __ptext39 4F5C  
                                     __ptext80 4FE4                                       __ptext72 4FD4  
                                     __ptext64 4FA8                                       __ptext56 47CA  
                                     __ptext48 4E68                                       __ptext81 4B60  
                                     __ptext73 4EC2                                       __ptext65 4F12  
                                     __ptext57 4F06                                       __ptext49 4402  
                                     __ptext90 4FEC                                       __ptext82 4CAE  
                                     __ptext74 4FB0                                       __ptext66 42C6  
                                     __ptext58 4F78                                       __ptext91 4FF0  
                                     __ptext83 4CDA                                       __ptext75 4FB8  
                                     __ptext67 3F3A                                       __ptext59 4F80  
                                     __ptext92 4D5E                                       __ptext84 4D06  
                                     __ptext76 4FD8                                       __ptext68 4EE6  
                                     __ptext93 4FF4                                       __ptext85 4D32  
                                     __ptext77 4FBE                                       __ptext69 4EF6  
                                     __ptext94 4FF8                                       __ptext86 4E80  
                                     __ptext78 4FDC                                       __ptext95 4FFC  
                                     __ptext87 4588                                       __ptext79 4FE0  
                                     __ptext88 4E04                                       __ptext97 4B1E  
                                     __ptext89 4FE8                                       __ptext98 3FFE  
                                     __ptext99 4FC4                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 4E98                    _I2C_SetDataCompleteCallback 4E80  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_tolower 0060  
                                   strcpy@dest 0005                               __size_of_strncmp 00DC  
                     __end_of_I2C_DO_SEND_STOP 4F98                               AMG8833_GetData@i 0034  
                             AMG8833_GetData@n 0030                                  __size_of_atoi 019A  
                             AMG8833_GetData@x 0036                               AMG8833_GetData@y 0038  
                                __size_of_main 04CC                        ?_EUSART_SetErrorHandler 0005  
                              _I2C_SetCallback 4588                  ??_I2C_SetDataCompleteCallback 000E  
                   I2C_Write1ByteRegister@data 0017                                       efgtoa@fp 0032  
                                     efgtoa@ne 0070                                       efgtoa@pp 006E  
                                     efgtoa@ou 0074  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     isa$xinst 000000                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 4830  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 009E          __end_of_EUSART_SetFramingErrorHandler 4F66  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 4F5C  
                     __end_of_I2C_MasterIsNack 4ED6                       __end_of_I2C_MasterSetIrq 4FD8  
                               _vfpfcnvrt$2135 0048                                 _vfpfcnvrt$2139 004A  
                                   _INTCONbits 000FF2                          ?_EUSART_RxDataHandler 0001  
                                     isdigit@c 0005                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 4F80                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                                       isspace@c 0005  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 4F70  
                          _I2C_DO_SEND_RESTART 4F98                                      strcpy@src 0007  
                __size_of_I2C_MasterDisableIrq 0004                                       isupper@c 0005  
                       fp__I2C_DO_ADDRESS_NACK 0000                                      strncmp@_l 0005  
                                    strncmp@_r 0007                              ??_AMG8833_GetData 002A  
         __end_of_EUSART_SetRxInterruptHandler 4F52          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 4F48                __size_of_I2C_MasterWaitForEvent 0010  
                                  efgtoa@nmode 0080                                       printf@ap 016C  
              __size_of_I2C_Write1ByteRegister 006E                             _EUSART_Receive_ISR 3FFE  
EUSART_SetFramingErrorHandler@interruptHandler 0005                        __end_of_I2C_MasterClose 4FFC  
                     __size_of_I2C_DO_TX_EMPTY 007C                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 0044                        __end_of_I2C_MasterStart 4FF4  
                      __end_of_I2C_MasterWrite 4F78                           ?_I2C_DO_SEND_RESTART 0001  
                                     tolower@c 000B                            ?_EUSART_Receive_ISR 0001  
                       __size_of___fpclassifyf 00FE                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       strncmp@l 000C  
                                     strncmp@n 0009                                       strncmp@r 000E  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                        __size_of_AMG8833_Init 00B0                                  ___fladd@signs 0011  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 4602  
               __end_of_PIN_MANAGER_Initialize 4CAE                 __size_of_rd1RegCompleteHandler 002C  
                __end_of_rd1RegCompleteHandler 4D32                         __size_of_I2C_DO_RX_ACK 0008  
                             fp__I2C_DO_RX_ACK 0000                                   ___fladd@aexp 0012  
                                 ___fladd@bexp 0013                 __size_of_wr1RegCompleteHandler 002C  
                         ??_EUSART_Receive_ISR 0001                          __size_of_I2C_DO_RESET 000C  
                __end_of_wr1RegCompleteHandler 4CDA                   __size_of_I2C_DO_ADDRESS_NACK 0066  
                         __size_of_I2C_DO_IDLE 000C                           __size_of_I2C_DO_RCEN 000C  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
